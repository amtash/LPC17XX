; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--debug -c --asm -osrf04.o --depend=srf04.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=srf04.crf SRF04\SRF04.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

configSRF04 PROC
        PUSH     {r4,lr}
        MOV      r0,#0
        LDR      r1,|L1.560|
        STR      r0,[r1,#0]  ; distance_ready
        LDR      r0,|L1.564|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x800000
        LDR      r1,|L1.568|
        STR      r0,[r1,#0xc4]
        LDR      r0,|L1.572|
        LDR      r0,[r0,#0x70]
        BIC      r0,r0,#3
        LDR      r1,|L1.572|
        STR      r0,[r1,#0x70]
        MOV      r0,#0x11
        STR      r0,[r1,#4]
        MOV      r0,#0
        STR      r0,[r1,#4]
        LDR      r0,|L1.568|
        LDR      r0,[r0,#0x1ac]
        BIC      r0,r0,#0xc000
        LDR      r1,|L1.576|
        STR      r0,[r1,#0]
        MOV      r0,#0x18
        LDR      r1,|L1.572|
        STR      r0,[r1,#0xc]
        LDR      r0,|L1.580|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x300000
        LDR      r1,|L1.580|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#4]
        ORR      r0,r0,#0xc000
        STR      r0,[r1,#4]
        MOV      r0,#4
        MOV      r1,#3
        CMP      r0,#0
        BGE      |L1.126|
        LSL      r2,r1,#27
        LSR      r4,r2,#24
        LDR      r2,|L1.584|
        AND      r3,r0,#0xf
        SUB      r3,r3,#4
        STRB     r4,[r2,r3]
        B        |L1.138|
|L1.126|
        LSL      r2,r1,#27
        LSR      r3,r2,#24
        LDR      r2,|L1.588|
        STRB     r3,[r2,r0]
|L1.138|
        NOP      
        MOV      r0,#4
        MOV      r1,#1
        LSL      r1,r1,r0
        LSR      r2,r0,#5
        MOV      r3,#0xe000e000
        ADD      r2,r3,r2,LSL #2
        STR      r1,[r2,#0x100]
        NOP      
        LDR      r0,|L1.572|
        LDR      r0,[r0,#0x3c]
        BIC      r0,r0,#0x31
        ORR      r0,r0,#0x10
        LDR      r1,|L1.572|
        STR      r0,[r1,#0x3c]
        MOV      r0,r1
        LDR      r0,[r0,#0x14]
        BIC      r0,r0,#7
        STR      r0,[r1,#0x14]
        MOV      r0,r1
        LDR      r0,[r0,#4]
        ORR      r0,r0,#1
        STR      r0,[r1,#4]
        MOV      r0,r1
        LDR      r0,[r0,#0x28]
        BIC      r0,r0,#4
        STR      r0,[r1,#0x28]
        POP      {r4,pc}
        ENDP

initPulse PROC
        MOV      r0,#0x40004000
        LDR      r0,[r0,#0x3c]
        BIC      r0,r0,#0x31
        ORR      r0,r0,#0x20
        LDR      r1,|L1.572|
        STR      r0,[r1,#0x3c]
        MOV      r0,#0x40004000
        LDR      r0,[r0,#8]
        MOV      r1,#0x2710
        ADD      r0,r0,r1
        LDR      r1,|L1.572|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x14]
        ORR      r0,r0,#1
        STR      r0,[r1,#0x14]
        BX       lr
        ENDP

get_distance PROC
        PUSH     {lr}
        BL       configSRF04
        BL       initPulse
        POP      {pc}
        ENDP

TIMER3_IRQHandler PROC
        LDR      r0,|L1.572|
        LDR      r0,[r0,#0]
        TST      r0,#1
        BEQ      |L1.408|
        LDR      r0,|L1.572|
        LDR      r0,[r0,#0x3c]
        TST      r0,#0x20
        BEQ      |L1.338|
        LDR      r0,|L1.572|
        LDR      r0,[r0,#0x28]
        BIC      r0,r0,#4
        LDR      r1,|L1.572|
        STR      r0,[r1,#0x28]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        MOV      r1,#0x2710
        ADD      r0,r0,r1
        LDR      r1,|L1.572|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x3c]
        BIC      r0,r0,#0x31
        ORR      r0,r0,#0x11
        STR      r0,[r1,#0x3c]
        B        |L1.396|
|L1.338|
        LDR      r0,|L1.572|
        LDR      r0,[r0,#0x3c]
        BIC      r0,r0,#0x31
        ORR      r0,r0,#0x20
        LDR      r1,|L1.572|
        STR      r0,[r1,#0x3c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        LDR      r1,|L1.592|
        ADD      r0,r0,r1
        LDR      r1,|L1.572|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x28]
        ORR      r0,r0,#4
        STR      r0,[r1,#0x28]
        MOV      r0,r1
        LDR      r0,[r0,#0x28]
        BIC      r0,r0,#2
        STR      r0,[r1,#0x28]
        MOV      r0,r1
        LDR      r0,[r0,#0x28]
        ORR      r0,r0,#1
        STR      r0,[r1,#0x28]
|L1.396|
        LDR      r0,|L1.572|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#1
        LDR      r1,|L1.572|
        STR      r0,[r1,#0]
|L1.408|
        LDR      r0,|L1.572|
        LDR      r0,[r0,#0]
        TST      r0,#0x10
        BEQ      |L1.544|
        LDR      r0,|L1.572|
        LDR      r0,[r0,#0x28]
        TST      r0,#1
        BEQ      |L1.468|
        LDR      r0,|L1.572|
        LDR      r0,[r0,#0x28]
        BIC      r0,r0,#1
        LDR      r1,|L1.572|
        STR      r0,[r1,#0x28]
        MOV      r0,r1
        LDR      r0,[r0,#0x28]
        ORR      r0,r0,#2
        STR      r0,[r1,#0x28]
        MOV      r0,#0
        LDR      r1,|L1.560|
        STR      r0,[r1,#0]  ; distance_ready
        LDR      r0,|L1.572|
        LDR      r0,[r0,#0x2c]
        LDR      r1,|L1.596|
        STR      r0,[r1,#0]  ; return_time
        B        |L1.544|
|L1.468|
        LDR      r0,|L1.572|
        LDR      r0,[r0,#0x2c]
        LDR      r1,|L1.596|
        LDR      r1,[r1,#0]  ; return_time
        SUB      r0,r0,r1
        LDR      r1,|L1.596|
        STR      r0,[r1,#0]  ; return_time
        LDR      r0,|L1.572|
        LDR      r0,[r0,#0x28]
        BIC      r0,r0,#4
        LDR      r1,|L1.572|
        STR      r0,[r1,#0x28]
        LDR      r0,|L1.600|
        LDR      r0,[r0,#0]  ; speed_sound
        LSR      r0,r0,#1
        LDR      r1,|L1.596|
        LDR      r1,[r1,#0]  ; return_time
        MUL      r0,r0,r1
        LDR      r1,|L1.604|
        LDR      r1,[r1,#0]  ; frecuency
        UDIV     r0,r0,r1
        LDR      r1,|L1.608|
        STR      r0,[r1,#0]  ; distance_cm
        MOV      r0,#1
        LDR      r1,|L1.560|
        STR      r0,[r1,#0]  ; distance_ready
        LDR      r0,|L1.612|
        LDR      r0,[r0,#0]  ; times_measured
        ADD      r0,r0,#1
        LDR      r1,|L1.612|
        STR      r0,[r1,#0]  ; times_measured
|L1.544|
        LDR      r0,|L1.572|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x10
        LDR      r1,|L1.572|
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L1.560|
        DCD      distance_ready
|L1.564|
        DCD      0x400fc0c4
|L1.568|
        DCD      0x400fc000
|L1.572|
        DCD      0x40094000
|L1.576|
        DCD      0x400fc1ac
|L1.580|
        DCD      0x4002c000
|L1.584|
        DCD      0xe000ed18
|L1.588|
        DCD      0xe000e400
|L1.592|
        DCD      0x00015f90
|L1.596|
        DCD      return_time
|L1.600|
        DCD      speed_sound
|L1.604|
        DCD      frecuency
|L1.608|
        DCD      distance_cm
|L1.612|
        DCD      times_measured

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

frecuency
        DCD      0x000f4240
temperature
        DCD      0x00000019
speed_sound
        DCD      0x000084d0
times_measured
        DCD      0x00000000
return_time
        DCD      0x00000000
distance_ready
        DCD      0x00000000
distance_cm
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "SRF04\\SRF04.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___7_SRF04_c_68611b83____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_SRF04_c_68611b83____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___7_SRF04_c_68611b83____REVSH|
#line 128
|__asm___7_SRF04_c_68611b83____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT configSRF04 [CODE]
        EXPORT initPulse [CODE]
        EXPORT get_distance [CODE]
        EXPORT TIMER3_IRQHandler [CODE]
        EXPORT frecuency [DATA,SIZE=4]
        EXPORT temperature [DATA,SIZE=4]
        EXPORT speed_sound [DATA,SIZE=4]
        EXPORT times_measured [DATA,SIZE=4]
        EXPORT return_time [DATA,SIZE=4]
        EXPORT distance_ready [DATA,SIZE=4]
        EXPORT distance_cm [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
