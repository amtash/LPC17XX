; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--debug -c --asm -ostates.o --depend=states.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=states.crf State_Machine\States.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

Menu_Principal PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.1016|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.224|
        MOV      r0,#0
        LDR      r1,|L1.1020|
        STR      r0,[r1,#0]  ; pass
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,r0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.1024|
        MOVS     r1,#0x11
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.1040|
        MOVS     r1,#0x33
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.1048|
        MOVS     r1,#0x55
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.1056|
        MOVS     r1,#0x77
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.1072|
        MOVS     r1,#0x99
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0
        LDR      r1,|L1.1080|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.1084|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.1088|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r2,r0
        MOV      r1,#0x33
        MOV      r0,#0x14
        BL       DrawCross
        MOVS     r2,#0
        MOVS     r1,#0x55
        MOVS     r0,#0x14
        BL       DrawCross
        MOVS     r2,#0
        MOVS     r1,#0x77
        MOVS     r0,#0x14
        BL       DrawCross
        MOVS     r2,#0
        MOVS     r1,#0x99
        MOVS     r0,#0x14
        BL       DrawCross
        MOV      r0,#0
        LDR      r1,|L1.1016|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.1092|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.1096|
        BL       delay_us
        NOP      
|L1.216|
        LDR      r0,|L1.1092|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.216|
|L1.224|
        BL       Read_Ads7846
        LDR      r1,|L1.1100|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.260|
        LDR      r2,|L1.1104|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.1108|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.262|
|L1.260|
        POP      {r2-r4,pc}
|L1.262|
        LDR      r0,|L1.1112|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.466|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.1116|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.330|
        MOV      r0,#2
        LDR      r1,|L1.1120|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.1016|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.466|
|L1.330|
        LDR      r0,|L1.1116|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.376|
        MOV      r0,#3
        LDR      r1,|L1.1120|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.1016|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.466|
|L1.376|
        LDR      r0,|L1.1116|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.422|
        MOV      r0,#0xa
        LDR      r1,|L1.1120|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.1016|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.466|
|L1.422|
        LDR      r0,|L1.1116|
        LDR      r1,[r0,#0x18]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x1c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.466|
        MOV      r0,#0x17
        LDR      r1,|L1.1120|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.1016|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]  ; screen_flag
|L1.466|
        MOV      r0,#0
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.260|
        ENDP

Menu_Camara PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.1016|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.714|
        MOV      r0,#0
        LDR      r1,|L1.1020|
        STR      r0,[r1,#0]  ; pass
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,r0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.1124|
        MOVS     r1,#0x11
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.1136|
        MOVS     r1,#0x33
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.1156|
        MOVS     r1,#0x55
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.1168|
        MOVS     r1,#0x77
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.1180|
        MOVS     r1,#0x99
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0
        LDR      r1,|L1.1080|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.1084|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.1088|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r2,r0
        MOV      r1,#0x33
        MOV      r0,#0x14
        BL       DrawCross
        MOVS     r2,#0
        MOVS     r1,#0x55
        MOVS     r0,#0x14
        BL       DrawCross
        MOVS     r2,#0
        MOVS     r1,#0x77
        MOVS     r0,#0x14
        BL       DrawCross
        MOVS     r2,#0
        MOVS     r1,#0x99
        MOVS     r0,#0x14
        BL       DrawCross
        MOVS     r3,#0
        ADR      r2,|L1.1208|
        MOVS     r1,#0xd2
        MOVS     r0,#0xf0
        BL       TextButton
        MOV      r0,#0
        LDR      r1,|L1.1016|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.1092|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.1096|
        BL       delay_us
        NOP      
|L1.706|
        LDR      r0,|L1.1092|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.706|
|L1.714|
        BL       Read_Ads7846
        LDR      r1,|L1.1100|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.750|
        LDR      r2,|L1.1104|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.1108|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.752|
|L1.750|
        POP      {r2-r4,pc}
|L1.752|
        LDR      r0,|L1.1112|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.1002|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.1116|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.824|
        MOV      r0,#0x10
        LDR      r1,|L1.1120|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#0
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]  ; screen_flag
        LDR      r1,|L1.1216|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#1
        LDR      r1,|L1.1016|
        STR      r0,[r1,#0]  ; draw_flag
        B        |L1.1002|
|L1.824|
        LDR      r0,|L1.1116|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.870|
        MOV      r0,#5
        LDR      r1,|L1.1120|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.1016|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.1002|
|L1.870|
        LDR      r0,|L1.1116|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.916|
        MOV      r0,#0xc
        LDR      r1,|L1.1120|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.1016|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.1002|
|L1.916|
        LDR      r0,|L1.1116|
        LDR      r1,[r0,#0x18]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x1c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.962|
        MOV      r0,#0xb
        LDR      r1,|L1.1120|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.1016|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.1002|
|L1.962|
        LDR      r0,|L1.1116|
        LDR      r1,[r0,#0x20]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x24]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.1002|
        MOV      r0,#1
        LDR      r1,|L1.1120|
        STR      r0,[r1,#0]  ; state
        LDR      r1,|L1.1016|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]  ; screen_flag
|L1.1002|
        MOV      r0,#0
        LDR      r1,|L1.1112|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.750|
        DCW      0x0000
|L1.1016|
        DCD      draw_flag
|L1.1020|
        DCD      pass
|L1.1024|
        DCB      "MENU PRINCIPAL",0
        DCB      0
|L1.1040|
        DCB      "Camara",0
        DCB      0
|L1.1048|
        DCB      "Motores",0
|L1.1056|
        DCB      "Control remoto",0
        DCB      0
|L1.1072|
        DCB      "Juegos",0
        DCB      0
|L1.1080|
        DCD      num_botton_menu
|L1.1084|
        DCD      num_bars_menu
|L1.1088|
        DCD      type_bar
|L1.1092|
        DCD      delay_only
|L1.1096|
        DCD      0x0007a120
|L1.1100|
        DCD      Ptr
|L1.1104|
        DCD      matrix
|L1.1108|
        DCD      display
|L1.1112|
        DCD      screen_flag
|L1.1116|
        DCD      menu_rect
|L1.1120|
        DCD      state
|L1.1124|
        DCB      "MENU CAMARA",0
|L1.1136|
        DCB      "Ver captura camara",0
        DCB      0
|L1.1156|
        DCB      "Configurar",0
        DCB      0
|L1.1168|
        DCB      "Deteccion",0
        DCB      0
        DCB      0
|L1.1180|
        DCB      "Ver configuracion actual",0
        DCB      0
        DCB      0
        DCB      0
|L1.1208|
        DCB      "Atras",0
        DCB      0
        DCB      0
|L1.1216|
        DCD      state_in_process
        ENDP

Camera_Image PROC
        PUSH     {r4,lr}
        LDR      r0,|L1.2240|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.1274|
        MOV      r0,#0
        LDR      r1,|L1.2244|
        STRB     r0,[r1,#0]
        MOV      r0,#1
        LDR      r1,|L1.2248|
        STR      r0,[r1,#0]  ; pass
        LDR      r1,|L1.2252|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.2256|
        BL       delay_us
        NOP      
|L1.1258|
        LDR      r0,|L1.2252|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.1258|
        MOV      r0,#0
        LDR      r1,|L1.2240|
        STR      r0,[r1,#0]  ; draw_flag
|L1.1274|
        BL       Read_Ads7846
        LDR      r1,|L1.2260|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.1310|
        LDR      r2,|L1.2264|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.2268|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.2272|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.1312|
|L1.1310|
        POP      {r4,pc}
|L1.1312|
        LDR      r0,|L1.2272|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.1344|
        MOV      r0,#2
        LDR      r1,|L1.2276|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.2240|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.2272|
        STR      r0,[r1,#0]  ; screen_flag
|L1.1344|
        MOV      r0,#0
        LDR      r1,|L1.2272|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.1310|
        ENDP

Menu_Motores PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.2240|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.1538|
        MOV      r0,#0
        LDR      r1,|L1.2248|
        STR      r0,[r1,#0]  ; pass
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,r0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.2280|
        MOVS     r1,#0x11
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.2296|
        MOVS     r1,#0x33
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.2312|
        MOVS     r1,#0x55
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0
        LDR      r1,|L1.2340|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.2344|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.2348|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r2,r0
        MOV      r1,#0x33
        MOV      r0,#0x14
        BL       DrawCross
        MOVS     r2,#0
        MOVS     r1,#0x55
        MOVS     r0,#0x14
        BL       DrawCross
        MOVS     r3,#0
        ADR      r2,|L1.1208|
        MOVS     r1,#0xd2
        MOVS     r0,#0xf0
        BL       TextButton
        MOV      r0,#0
        LDR      r1,|L1.2240|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.2252|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.2256|
        BL       delay_us
        NOP      
|L1.1530|
        LDR      r0,|L1.2252|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.1530|
|L1.1538|
        BL       Read_Ads7846
        LDR      r1,|L1.2260|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.1574|
        LDR      r2,|L1.2264|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.2268|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.2272|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.1576|
|L1.1574|
        POP      {r2-r4,pc}
|L1.1576|
        LDR      r0,|L1.2272|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.1730|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.2352|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.1644|
        MOV      r0,#0x14
        LDR      r1,|L1.2276|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.2240|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.2272|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.1730|
|L1.1644|
        LDR      r0,|L1.2352|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.1690|
        MOV      r0,#0x12
        LDR      r1,|L1.2276|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.2240|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.2272|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.1730|
|L1.1690|
        LDR      r0,|L1.2352|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.1730|
        MOV      r0,#1
        LDR      r1,|L1.2276|
        STR      r0,[r1,#0]  ; state
        LDR      r1,|L1.2240|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.2272|
        STR      r0,[r1,#0]  ; screen_flag
|L1.1730|
        MOV      r0,#0
        LDR      r1,|L1.2272|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.1574|
        ENDP

Giro_Manual_Camara PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.2240|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.1956|
        LDR      r1,|L1.2356|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#5
        LDR      r1,|L1.2244|
        STRB     r0,[r1,#0]
        MOV      r0,#0x3c
        LDR      r1,|L1.2360|
        STRH     r0,[r1,#0]
        LDR      r1,|L1.2364|
        STRH     r0,[r1,#0]
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,#0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        LDR      r1,|L1.2368|
        LDR      r0,|L1.2372|
        LDR      r0,[r0,#0]  ; umbral_x
        BL       __aeabi_fmul
        MOV      r4,r0
        BL       __aeabi_f2uiz
        LDR      r1,|L1.2376|
        STRH     r0,[r1,#0]
        LDR      r1,|L1.2368|
        LDR      r0,|L1.2380|
        LDR      r0,[r0,#0]  ; umbral_y
        BL       __aeabi_fmul
        MOV      r4,r0
        BL       __aeabi_f2uiz
        LDR      r1,|L1.2376|
        STRH     r0,[r1,#2]
        MOV      r0,#0
        LDR      r1,|L1.2340|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.2344|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.2348|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r3,r0
        ADR      r2,|L1.2384|
        MOV      r1,#0xd7
        MOV      r0,#0x102
        BL       TextButton
        MOVS     r0,#1
        MOVS     r3,#0xf
        MOVS     r2,#0xc8
        MOVS     r1,#0xd2
        STR      r0,[sp,#0]
        MOVS     r0,#0x14
        BL       DrawCalibrationBar
        MOVS     r0,#0
        MOVS     r3,#0xa0
        MOVS     r2,#0xf
        MOVS     r1,#0x1e
        STR      r0,[sp,#0]
        MOV      r0,#0x122
        BL       DrawCalibrationBar
        MOV      r0,#0
        LDR      r1,|L1.2240|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.2248|
        STR      r0,[r1,#0]  ; pass
        MOV      r0,#0
        LDR      r1,|L1.2356|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#1
        LDR      r1,|L1.2252|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.2256|
        BL       delay_us
        NOP      
|L1.1948|
        LDR      r0,|L1.2252|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.1948|
|L1.1956|
        BL       Read_Ads7846
        LDR      r1,|L1.2260|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.1992|
        LDR      r2,|L1.2264|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.2268|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.2272|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.1994|
|L1.1992|
        POP      {r2-r4,pc}
|L1.1994|
        LDR      r0,|L1.2272|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.2060|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.2352|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.2060|
        MOV      r0,#3
        LDR      r1,|L1.2276|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.2240|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.2272|
        STR      r0,[r1,#0]  ; screen_flag
|L1.2060|
        MOV      r0,#0
        LDR      r1,|L1.2392|
        STR      r0,[r1,#0]  ; j
        B        |L1.2436|
|L1.2070|
        LDR      r0,|L1.2340|
        LDRB     r0,[r0,#0]  ; num_botton_menu
        LDR      r1,|L1.2392|
        LDR      r1,[r1,#0]  ; j
        ADD      r0,r0,r1
        LDR      r1,|L1.2396|
        STR      r0,[r1,#0]  ; nb
        LDR      r0,|L1.2352|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CMP      r0,#0
        BEQ      |L1.2236|
        MOV      r0,#1
        LDR      r1,|L1.2356|
        STR      r0,[r1,#0]  ; state_in_process
        LDR      r0,|L1.2348|
        LDR      r0,[r0,#0]  ; type_bar
        LDR      r1,|L1.2392|
        LDR      r1,[r1,#0]  ; j
        LSR      r0,r0,r1
        AND      r3,r0,#1
        LDR      r0,|L1.2352|
        LDR      r1,|L1.2396|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r2,r0
        STR      r0,[sp,#4]
        LDR      r0,|L1.2392|
        LDR      r0,[r0,#0]  ; j
        UXTH     r0,r0
        BL       Get_CalibrationValue
        LDR      r0,|L1.2348|
        LDR      r0,[r0,#0]  ; type_bar
        LDR      r1,|L1.2392|
        LDR      r1,[r1,#0]  ; j
        LSRS     r0,r0,r1
        AND      r3,r0,#1
        LDR      r0,|L1.2352|
        LDR      r1,|L1.2396|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r2,r0
        STR      r0,[sp,#4]
        LDR      r0,|L1.2392|
        LDR      r0,[r0,#0]  ; j
        UXTH     r0,r0
        BL       UpdateBar
        MOV      r0,#0
        LDR      r1,|L1.2272|
        STR      r0,[r1,#0]  ; screen_flag
        LDR      r1,|L1.2376|
        LDRH     r0,[r1,#0]  ; Calibration_vars
        BL       __aeabi_ui2f
        MOV      r4,r0
        LDR      r1,|L1.2368|
        BL       __aeabi_fdiv
        B        |L1.2400|
|L1.2236|
        B        |L1.2424|
        DCW      0x0000
|L1.2240|
        DCD      draw_flag
|L1.2244|
        DCD      read_type
|L1.2248|
        DCD      pass
|L1.2252|
        DCD      delay_only
|L1.2256|
        DCD      0x0007a120
|L1.2260|
        DCD      Ptr
|L1.2264|
        DCD      matrix
|L1.2268|
        DCD      display
|L1.2272|
        DCD      screen_flag
|L1.2276|
        DCD      state
|L1.2280|
        DCB      "MENU MOTORES",0
        DCB      0
        DCB      0
        DCB      0
|L1.2296|
        DCB      "Configuracion",0
        DCB      0
        DCB      0
|L1.2312|
        DCB      "Giro manual de la camara",0
        DCB      0
        DCB      0
        DCB      0
|L1.2340|
        DCD      num_botton_menu
|L1.2344|
        DCD      num_bars_menu
|L1.2348|
        DCD      type_bar
|L1.2352|
        DCD      menu_rect
|L1.2356|
        DCD      state_in_process
|L1.2360|
        DCD      Vd_OV7670
|L1.2364|
        DCD      Vx_OV7670
|L1.2368|
        DCD      0x437f0000
|L1.2372|
        DCD      umbral_x
|L1.2376|
        DCD      Calibration_vars
|L1.2380|
        DCD      umbral_y
|L1.2384|
        DCB      "Volver",0
        DCB      0
|L1.2392|
        DCD      j
|L1.2396|
        DCD      ||nb||
|L1.2400|
        LDR      r1,|L1.3416|
        STR      r0,[r1,#0]  ; umbral_x
        LDR      r1,|L1.3420|
        LDRH     r0,[r1,#2]  ; Calibration_vars
        BL       __aeabi_ui2f
        MOV      r4,r0
        LDR      r1,|L1.3424|
        BL       __aeabi_fdiv
        LDR      r1,|L1.3428|
        STR      r0,[r1,#0]  ; umbral_y
|L1.2424|
        LDR      r0,|L1.3432|
        LDR      r0,[r0,#0]  ; j
        ADD      r0,r0,#1
        LDR      r1,|L1.3432|
        STR      r0,[r1,#0]  ; j
|L1.2436|
        LDR      r0,|L1.3432|
        LDR      r0,[r0,#0]  ; j
        LDR      r1,|L1.3436|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        CMP      r0,r1
        BLT      |L1.2070|
        MOV      r0,#0
        LDR      r1,|L1.3440|
        STR      r0,[r1,#0]  ; state_in_process
        NOP      
        B        |L1.1992|
        ENDP

Config_Mov_Motores PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.3444|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.2628|
        MOV      r0,#0
        LDR      r1,|L1.3448|
        STR      r0,[r1,#0]  ; pass
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.3452|
        MOVS     r1,#0x11
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.3484|
        MOVS     r1,#0x33
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.3516|
        MOVS     r1,#0x55
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0
        LDR      r1,|L1.3548|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.3436|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.3552|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r2,r0
        MOV      r1,#0x33
        MOV      r0,#0x14
        BL       DrawCross
        MOVS     r2,#0
        MOVS     r1,#0x55
        MOVS     r0,#0x14
        BL       DrawCross
        MOVS     r3,#0
        ADR      r2,|L1.1208|
        MOVS     r1,#0xd2
        MOVS     r0,#0xf0
        BL       TextButton
        MOV      r0,#0
        LDR      r1,|L1.3444|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.3556|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.3560|
        BL       delay_us
        NOP      
|L1.2620|
        LDR      r0,|L1.3556|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.2620|
|L1.2628|
        BL       Read_Ads7846
        LDR      r1,|L1.3564|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.2664|
        LDR      r2,|L1.3568|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.3572|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.3576|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.2666|
|L1.2664|
        POP      {r2-r4,pc}
|L1.2666|
        LDR      r0,|L1.3576|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.2824|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.3580|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.2734|
        MOV      r0,#0x13
        LDR      r1,|L1.3584|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.3444|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.3576|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.2824|
|L1.2734|
        LDR      r0,|L1.3580|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.2780|
        MOV      r0,#0x14
        LDR      r1,|L1.3584|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.3444|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.3576|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.2824|
|L1.2780|
        LDR      r0,|L1.3580|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.2824|
        MOV      r0,#3
        LDR      r1,|L1.3584|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.3444|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.3576|
        STR      r0,[r1,#0]  ; screen_flag
|L1.2824|
        MOV      r0,#0
        LDR      r1,|L1.3576|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.2664|
        ENDP

Elegir_modo_control PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.3444|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.2970|
        MOV      r0,#0
        LDR      r1,|L1.3448|
        STR      r0,[r1,#0]  ; pass
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.3588|
        MOVS     r1,#0x11
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        MOV      r0,#0
        LDR      r1,|L1.3548|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.3436|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.3552|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r3,r0
        ADR      r2,|L1.3620|
        MOV      r1,#0x3c
        MOV      r0,#0x28
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.3644|
        MOVS     r1,#0x5a
        MOVS     r0,#0x37
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.1208|
        MOVS     r1,#0xd2
        MOVS     r0,#0xf0
        BL       TextButton
        MOV      r0,#0
        LDR      r1,|L1.3444|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.3556|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.3560|
        BL       delay_us
        NOP      
|L1.2962|
        LDR      r0,|L1.3556|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.2962|
|L1.2970|
        BL       Read_Ads7846
        LDR      r1,|L1.3564|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.3006|
        LDR      r2,|L1.3568|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.3572|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.3576|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.3008|
|L1.3006|
        POP      {r2-r4,pc}
|L1.3008|
        LDR      r0,|L1.3576|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.3114|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.3580|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBNZ     r0,|L1.3114|
        LDR      r0,|L1.3580|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBNZ     r0,|L1.3114|
        LDR      r0,|L1.3580|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.3114|
        MOV      r0,#0x11
        LDR      r1,|L1.3584|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.3444|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.3576|
        STR      r0,[r1,#0]  ; screen_flag
|L1.3114|
        MOV      r0,#0
        LDR      r1,|L1.3576|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.3006|
        ENDP

Config_var_control PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.3444|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.3308|
        MOV      r0,#0
        LDR      r1,|L1.3448|
        STR      r0,[r1,#0]  ; pass
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,r0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.3660|
        MOVS     r1,#0x11
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.3692|
        MOVS     r1,#0x33
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.3728|
        MOVS     r1,#0x55
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0
        LDR      r1,|L1.3548|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.3436|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.3552|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r2,r0
        MOV      r1,#0x33
        MOV      r0,#0x14
        BL       DrawCross
        MOVS     r2,#0
        MOVS     r1,#0x55
        MOVS     r0,#0x14
        BL       DrawCross
        MOVS     r3,#0
        ADR      r2,|L1.1208|
        MOVS     r1,#0xd2
        MOVS     r0,#0xf0
        BL       TextButton
        MOV      r0,#0
        LDR      r1,|L1.3444|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.3556|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.3560|
        BL       delay_us
        NOP      
|L1.3300|
        LDR      r0,|L1.3556|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.3300|
|L1.3308|
        BL       Read_Ads7846
        LDR      r1,|L1.3564|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.3344|
        LDR      r2,|L1.3568|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.3572|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.3576|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.3346|
|L1.3344|
        POP      {r2-r4,pc}
|L1.3346|
        LDR      r0,|L1.3576|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.3412|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.3580|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.3414|
        MOV      r0,#0x15
        LDR      r1,|L1.3584|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.3444|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.3576|
        STR      r0,[r1,#0]  ; screen_flag
|L1.3412|
        B        |L1.3854|
|L1.3414|
        B        |L1.3764|
|L1.3416|
        DCD      umbral_x
|L1.3420|
        DCD      Calibration_vars
|L1.3424|
        DCD      0x437f0000
|L1.3428|
        DCD      umbral_y
|L1.3432|
        DCD      j
|L1.3436|
        DCD      num_bars_menu
|L1.3440|
        DCD      state_in_process
|L1.3444|
        DCD      draw_flag
|L1.3448|
        DCD      pass
|L1.3452|
        DCB      "CONFIGURAR GIRO DE LA CAMARA",0
        DCB      0
        DCB      0
        DCB      0
|L1.3484|
        DCB      "Elegir modo de control del giro",0
|L1.3516|
        DCB      "Configurar variables de control",0
|L1.3548|
        DCD      num_botton_menu
|L1.3552|
        DCD      type_bar
|L1.3556|
        DCD      delay_only
|L1.3560|
        DCD      0x0007a120
|L1.3564|
        DCD      Ptr
|L1.3568|
        DCD      matrix
|L1.3572|
        DCD      display
|L1.3576|
        DCD      screen_flag
|L1.3580|
        DCD      menu_rect
|L1.3584|
        DCD      state
|L1.3588|
        DCB      "ELEGIR MODO DE CONTROL DEL GIRO",0
|L1.3620|
        DCB      "Modo control borroso",0
        DCB      0
        DCB      0
        DCB      0
|L1.3644|
        DCB      "Modo control PD",0
|L1.3660|
        DCB      "CONFIGURAR VARIABLES DE CONTROL",0
|L1.3692|
        DCB      "Variables de movimiento horizontal",0
        DCB      0
|L1.3728|
        DCB      "Variables de movimiento vertical",0
        DCB      0
        DCB      0
        DCB      0
|L1.3764|
        LDR      r0,|L1.4784|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.3810|
        MOV      r0,#0x16
        LDR      r1,|L1.4788|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.4792|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.4796|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.3854|
|L1.3810|
        LDR      r0,|L1.4784|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.3854|
        MOV      r0,#3
        LDR      r1,|L1.4788|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.4792|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.4796|
        STR      r0,[r1,#0]  ; screen_flag
|L1.3854|
        MOV      r0,#0
        LDR      r1,|L1.4796|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.3344|
        ENDP

Config_control_hor PROC
        PUSH     {r2-r8,lr}
        LDR      r0,|L1.4792|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.4132|
        LDR      r1,|L1.4800|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#5
        LDR      r1,|L1.4804|
        STRB     r0,[r1,#0]
        MOV      r0,#0x64
        LDR      r1,|L1.4808|
        STRH     r0,[r1,#0]
        MOV      r0,#0x3c
        LDR      r1,|L1.4812|
        STRH     r0,[r1,#0]
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,#0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.4816|
        MOVS     r1,#0x32
        STR      r0,[sp,#0]
        MOVS     r0,#0xe1
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.4832|
        MOVS     r1,#0x78
        STR      r0,[sp,#0]
        MOVS     r0,#0xe1
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.4844|
        MOVS     r1,#0xbe
        STR      r0,[sp,#0]
        MOVS     r0,#0x14
        BL       GUI_Text
        LDR      r1,|L1.4860|
        LDR      r0,|L1.4864|
        LDR      r0,[r0,#0]  ; umbral_x
        BL       __aeabi_fmul
        MOV      r4,r0
        BL       __aeabi_f2uiz
        LDR      r1,|L1.4868|
        STRH     r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.4872|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.4876|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.4880|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r3,r0
        ADR      r2,|L1.4884|
        MOV      r1,#0x46
        MOV      r0,#0x118
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.4888|
        MOVS     r1,#0x46
        MOVS     r0,#0xf0
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.4884|
        MOVS     r1,#0x8c
        LSLS     r0,r1,#1
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.4888|
        MOVS     r1,#0x8c
        MOVS     r0,#0xf0
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.2384|
        MOVS     r1,#0xd7
        MOV      r0,#0x102
        BL       TextButton
        MOVS     r0,#1
        MOVS     r3,#0xf
        MOVS     r2,#0xdc
        MOVS     r1,#0xd7
        STR      r0,[sp,#0]
        MOVS     r0,#0x14
        BL       DrawCalibrationBar
        MOV      r0,#0
        LDR      r1,|L1.4792|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.4892|
        STR      r0,[r1,#0]  ; pass
        MOV      r0,#0
        LDR      r1,|L1.4800|
        STR      r0,[r1,#0]  ; state_in_process
        B        |L1.4134|
|L1.4132|
        B        |L1.4158|
|L1.4134|
        MOV      r0,#1
        LDR      r1,|L1.4896|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.4900|
        BL       delay_us
        NOP      
|L1.4150|
        LDR      r0,|L1.4896|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.4150|
|L1.4158|
        BL       Read_Ads7846
        LDR      r1,|L1.4904|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.4194|
        LDR      r2,|L1.4908|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.4912|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.4796|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.4198|
|L1.4194|
        POP      {r2-r8,pc}
|L1.4198|
        LDR      r0,|L1.4796|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.4268|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.4784|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.4270|
        LDR      r0,|L1.4916|
        LDR      r0,[r0,#0]  ; cons_pro_x
        BL       __aeabi_f2d
        MOV      r6,r0
        LDR      r2,|L1.4920|
        LDR      r3,|L1.4924|
        BL       __aeabi_dadd
        MOV      r4,r0
        BL       __aeabi_d2f
        LDR      r1,|L1.4916|
        STR      r0,[r1,#0]  ; cons_pro_x
|L1.4268|
        B        |L1.4488|
|L1.4270|
        LDR      r0,|L1.4784|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.4332|
        MOVS     r1,#0
        LDR      r0,|L1.4916|
        LDR      r0,[r0,#0]  ; cons_pro_x
        BL       __aeabi_cfcmpeq
        BEQ      |L1.4488|
        LDR      r0,|L1.4916|
        LDR      r0,[r0,#0]  ; cons_pro_x
        BL       __aeabi_f2d
        MOV      r6,r0
        LDR      r2,|L1.4920|
        LDR      r3,|L1.4924|
        BL       __aeabi_dsub
        MOV      r4,r0
        BL       __aeabi_d2f
        LDR      r1,|L1.4916|
        STR      r0,[r1,#0]  ; cons_pro_x
        B        |L1.4488|
|L1.4332|
        LDR      r0,|L1.4784|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.4382|
        LDR      r0,|L1.4928|
        LDR      r0,[r0,#0]  ; cons_dif_x
        BL       __aeabi_f2d
        MOV      r4,r0
        LDR      r2,|L1.4920|
        LDR      r3,|L1.4924|
        BL       __aeabi_dadd
        MOV      r6,r0
        BL       __aeabi_d2f
        LDR      r1,|L1.4928|
        STR      r0,[r1,#0]  ; cons_dif_x
        B        |L1.4488|
|L1.4382|
        LDR      r0,|L1.4784|
        LDR      r1,[r0,#0x18]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x1c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.4444|
        MOVS     r1,#0
        LDR      r0,|L1.4928|
        LDR      r0,[r0,#0]  ; cons_dif_x
        BL       __aeabi_cfcmpeq
        BEQ      |L1.4488|
        LDR      r0,|L1.4928|
        LDR      r0,[r0,#0]  ; cons_dif_x
        BL       __aeabi_f2d
        MOV      r4,r0
        LDR      r2,|L1.4920|
        LDR      r3,|L1.4924|
        BL       __aeabi_dsub
        MOV      r6,r0
        BL       __aeabi_d2f
        LDR      r1,|L1.4928|
        STR      r0,[r1,#0]  ; cons_dif_x
        B        |L1.4488|
|L1.4444|
        LDR      r0,|L1.4784|
        LDR      r1,[r0,#0x20]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x24]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.4488|
        MOV      r0,#0x14
        LDR      r1,|L1.4788|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.4792|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.4796|
        STR      r0,[r1,#0]  ; screen_flag
|L1.4488|
        MOV      r0,#0
        LDR      r1,|L1.4932|
        STR      r0,[r1,#0]  ; j
        B        |L1.4680|
|L1.4498|
        LDR      r0,|L1.4872|
        LDRB     r0,[r0,#0]  ; num_botton_menu
        LDR      r1,|L1.4932|
        LDR      r1,[r1,#0]  ; j
        ADD      r0,r0,r1
        LDR      r1,|L1.4936|
        STR      r0,[r1,#0]  ; nb
        LDR      r0,|L1.4784|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.4664|
        MOV      r0,#1
        LDR      r1,|L1.4800|
        STR      r0,[r1,#0]  ; state_in_process
        LDR      r0,|L1.4880|
        LDR      r0,[r0,#0]  ; type_bar
        LDR      r1,|L1.4932|
        LDR      r1,[r1,#0]  ; j
        LSR      r0,r0,r1
        AND      r3,r0,#1
        LDR      r0,|L1.4784|
        LDR      r1,|L1.4936|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r2,r0
        STR      r0,[sp,#4]
        LDR      r0,|L1.4932|
        LDR      r0,[r0,#0]  ; j
        UXTH     r0,r0
        BL       Get_CalibrationValue
        LDR      r0,|L1.4880|
        LDR      r0,[r0,#0]  ; type_bar
        LDR      r1,|L1.4932|
        LDR      r1,[r1,#0]  ; j
        LSRS     r0,r0,r1
        AND      r3,r0,#1
        LDR      r0,|L1.4784|
        LDR      r1,|L1.4936|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r2,r0
        STR      r0,[sp,#4]
        LDR      r0,|L1.4932|
        LDR      r0,[r0,#0]  ; j
        UXTH     r0,r0
        BL       UpdateBar
        MOV      r0,#0
        LDR      r1,|L1.4796|
        STR      r0,[r1,#0]  ; screen_flag
        LDR      r1,|L1.4868|
        LDRH     r0,[r1,#0]  ; Calibration_vars
        BL       __aeabi_ui2f
        MOV      r4,r0
        LDR      r1,|L1.4860|
        BL       __aeabi_fdiv
        LDR      r1,|L1.4864|
        B        |L1.4666|
|L1.4664|
        B        |L1.4668|
|L1.4666|
        STR      r0,[r1,#0]  ; umbral_x
|L1.4668|
        LDR      r0,|L1.4932|
        LDR      r0,[r0,#0]  ; j
        ADD      r0,r0,#1
        LDR      r1,|L1.4932|
        STR      r0,[r1,#0]  ; j
|L1.4680|
        LDR      r0,|L1.4932|
        LDR      r0,[r0,#0]  ; j
        LDR      r1,|L1.4876|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        CMP      r0,r1
        BLT      |L1.4498|
        MOV      r0,#0
        LDR      r1,|L1.4800|
        STR      r0,[r1,#0]  ; state_in_process
        NOP      
        B        |L1.4194|
        ENDP

Config_control_ver PROC
        PUSH     {r2-r8,lr}
        LDR      r0,|L1.4792|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.4940|
        LDR      r1,|L1.4800|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#5
        LDR      r1,|L1.4804|
        STRB     r0,[r1,#0]
        MOV      r0,#0x50
        LDR      r1,|L1.4808|
        STRH     r0,[r1,#0]
        MOV      r0,#0x3c
        LDR      r1,|L1.4812|
        STRH     r0,[r1,#0]
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,#0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.4816|
        MOVS     r1,#0xd2
        STR      r0,[sp,#0]
        B        |L1.4942|
|L1.4784|
        DCD      menu_rect
|L1.4788|
        DCD      state
|L1.4792|
        DCD      draw_flag
|L1.4796|
        DCD      screen_flag
|L1.4800|
        DCD      state_in_process
|L1.4804|
        DCD      read_type
|L1.4808|
        DCD      Vd_OV7670
|L1.4812|
        DCD      Vx_OV7670
|L1.4816|
        DCB      "Proporcional",0
        DCB      0
        DCB      0
        DCB      0
|L1.4832|
        DCB      "Diferencial",0
|L1.4844|
        DCB      "Mover camara",0
        DCB      0
        DCB      0
        DCB      0
|L1.4860|
        DCD      0x437f0000
|L1.4864|
        DCD      umbral_x
|L1.4868|
        DCD      Calibration_vars
|L1.4872|
        DCD      num_botton_menu
|L1.4876|
        DCD      num_bars_menu
|L1.4880|
        DCD      type_bar
|L1.4884|
        DCB      "+",0
        DCB      0
        DCB      0
|L1.4888|
        DCB      "-",0
        DCB      0
        DCB      0
|L1.4892|
        DCD      pass
|L1.4896|
        DCD      delay_only
|L1.4900|
        DCD      0x0007a120
|L1.4904|
        DCD      Ptr
|L1.4908|
        DCD      matrix
|L1.4912|
        DCD      display
|L1.4916|
        DCD      cons_pro_x
|L1.4920|
        DCD      0x9999999a
|L1.4924|
        DCD      0x3fb99999
|L1.4928|
        DCD      cons_dif_x
|L1.4932|
        DCD      j
|L1.4936|
        DCD      ||nb||
|L1.4940|
        B        |L1.5164|
|L1.4942|
        MOVS     r0,#0xa
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.4832|
        MOVS     r1,#0xd2
        STR      r0,[sp,#0]
        MOVS     r0,#0x87
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.5992|
        MOVS     r1,#0xa
        STR      r0,[sp,#0]
        MOVS     r0,#0xf5
        BL       GUI_Text
        LDR      r1,|L1.6004|
        LDR      r0,|L1.6008|
        LDR      r0,[r0,#0]  ; umbral_y
        BL       __aeabi_fmul
        MOV      r4,r0
        BL       __aeabi_f2uiz
        LDR      r1,|L1.6012|
        STRH     r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.6016|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.6020|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.6024|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r3,r0
        ADR      r2,|L1.4884|
        MOV      r1,#0xbe
        MOV      r0,#0x6e
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.4888|
        MOVS     r1,#0xd7
        MOVS     r0,#0x6e
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.4884|
        MOVS     r1,#0xbe
        MOVS     r0,#0xe6
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.4888|
        MOVS     r1,#0xd7
        MOVS     r0,#0xe6
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.2384|
        MOVS     r1,#0xd7
        MOV      r0,#0x102
        BL       TextButton
        MOVS     r0,#0
        MOVS     r3,#0xa0
        MOVS     r2,#0x11
        MOVS     r1,#0x1e
        STR      r0,[sp,#0]
        MOV      r0,#0x11d
        BL       DrawCalibrationBar
        MOV      r0,#0
        LDR      r1,|L1.6028|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.6032|
        STR      r0,[r1,#0]  ; pass
        MOV      r0,#0
        LDR      r1,|L1.6036|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#1
        LDR      r1,|L1.6040|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.6044|
        BL       delay_us
        NOP      
|L1.5156|
        LDR      r0,|L1.6040|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.5156|
|L1.5164|
        BL       Read_Ads7846
        LDR      r1,|L1.6048|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.5200|
        LDR      r2,|L1.6052|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.6056|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.6060|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.5204|
|L1.5200|
        POP      {r2-r8,pc}
|L1.5204|
        LDR      r0,|L1.6060|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.5274|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.6064|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.5276|
        LDR      r0,|L1.6068|
        LDR      r0,[r0,#0]  ; cons_pro_y
        BL       __aeabi_f2d
        MOV      r6,r0
        LDR      r2,|L1.6072|
        LDR      r3,|L1.6076|
        BL       __aeabi_dadd
        MOV      r4,r0
        BL       __aeabi_d2f
        LDR      r1,|L1.6068|
        STR      r0,[r1,#0]  ; cons_pro_y
|L1.5274|
        B        |L1.5494|
|L1.5276|
        LDR      r0,|L1.6064|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.5338|
        MOVS     r1,#0
        LDR      r0,|L1.6068|
        LDR      r0,[r0,#0]  ; cons_pro_y
        BL       __aeabi_cfcmpeq
        BEQ      |L1.5494|
        LDR      r0,|L1.6068|
        LDR      r0,[r0,#0]  ; cons_pro_y
        BL       __aeabi_f2d
        MOV      r6,r0
        LDR      r2,|L1.6072|
        LDR      r3,|L1.6076|
        BL       __aeabi_dsub
        MOV      r4,r0
        BL       __aeabi_d2f
        LDR      r1,|L1.6068|
        STR      r0,[r1,#0]  ; cons_pro_y
        B        |L1.5494|
|L1.5338|
        LDR      r0,|L1.6064|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.5388|
        LDR      r0,|L1.6080|
        LDR      r0,[r0,#0]  ; cons_dif_y
        BL       __aeabi_f2d
        MOV      r4,r0
        LDR      r2,|L1.6072|
        LDR      r3,|L1.6076|
        BL       __aeabi_dadd
        MOV      r6,r0
        BL       __aeabi_d2f
        LDR      r1,|L1.6080|
        STR      r0,[r1,#0]  ; cons_dif_y
        B        |L1.5494|
|L1.5388|
        LDR      r0,|L1.6064|
        LDR      r1,[r0,#0x18]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x1c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.5450|
        MOVS     r1,#0
        LDR      r0,|L1.6080|
        LDR      r0,[r0,#0]  ; cons_dif_y
        BL       __aeabi_cfcmpeq
        BEQ      |L1.5494|
        LDR      r0,|L1.6080|
        LDR      r0,[r0,#0]  ; cons_dif_y
        BL       __aeabi_f2d
        MOV      r4,r0
        LDR      r2,|L1.6072|
        LDR      r3,|L1.6076|
        BL       __aeabi_dsub
        MOV      r6,r0
        BL       __aeabi_d2f
        LDR      r1,|L1.6080|
        STR      r0,[r1,#0]  ; cons_dif_y
        B        |L1.5494|
|L1.5450|
        LDR      r0,|L1.6064|
        LDR      r1,[r0,#0x20]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x24]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.5494|
        MOV      r0,#0x14
        LDR      r1,|L1.6084|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.6028|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.6060|
        STR      r0,[r1,#0]  ; screen_flag
|L1.5494|
        MOV      r0,#0
        LDR      r1,|L1.6088|
        STR      r0,[r1,#0]  ; j
        B        |L1.5686|
|L1.5504|
        LDR      r0,|L1.6016|
        LDRB     r0,[r0,#0]  ; num_botton_menu
        LDR      r1,|L1.6088|
        LDR      r1,[r1,#0]  ; j
        ADD      r0,r0,r1
        LDR      r1,|L1.6092|
        STR      r0,[r1,#0]  ; nb
        LDR      r0,|L1.6064|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.5668|
        MOV      r0,#1
        LDR      r1,|L1.6036|
        STR      r0,[r1,#0]  ; state_in_process
        LDR      r0,|L1.6024|
        LDR      r0,[r0,#0]  ; type_bar
        LDR      r1,|L1.6088|
        LDR      r1,[r1,#0]  ; j
        LSR      r0,r0,r1
        AND      r3,r0,#1
        LDR      r0,|L1.6064|
        LDR      r1,|L1.6092|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r2,r0
        STR      r0,[sp,#4]
        LDR      r0,|L1.6088|
        LDR      r0,[r0,#0]  ; j
        UXTH     r0,r0
        BL       Get_CalibrationValue
        LDR      r0,|L1.6024|
        LDR      r0,[r0,#0]  ; type_bar
        LDR      r1,|L1.6088|
        LDR      r1,[r1,#0]  ; j
        LSRS     r0,r0,r1
        AND      r3,r0,#1
        LDR      r0,|L1.6064|
        LDR      r1,|L1.6092|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r2,r0
        STR      r0,[sp,#4]
        LDR      r0,|L1.6088|
        LDR      r0,[r0,#0]  ; j
        UXTH     r0,r0
        BL       UpdateBar
        MOV      r0,#0
        LDR      r1,|L1.6060|
        STR      r0,[r1,#0]  ; screen_flag
        LDR      r1,|L1.6012|
        LDRH     r0,[r1,#0]  ; Calibration_vars
        BL       __aeabi_ui2f
        MOV      r4,r0
        LDR      r1,|L1.6004|
        BL       __aeabi_fdiv
        B        |L1.5670|
|L1.5668|
        B        |L1.5674|
|L1.5670|
        LDR      r1,|L1.6008|
        STR      r0,[r1,#0]  ; umbral_y
|L1.5674|
        LDR      r0,|L1.6088|
        LDR      r0,[r0,#0]  ; j
        ADD      r0,r0,#1
        LDR      r1,|L1.6088|
        STR      r0,[r1,#0]  ; j
|L1.5686|
        LDR      r0,|L1.6088|
        LDR      r0,[r0,#0]  ; j
        LDR      r1,|L1.6020|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        CMP      r0,r1
        BLT      |L1.5504|
        MOV      r0,#0
        LDR      r1,|L1.6036|
        STR      r0,[r1,#0]  ; state_in_process
        NOP      
        B        |L1.5200|
        ENDP

Config_1 PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.6028|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.5884|
        LDR      r1,|L1.6036|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#5
        LDR      r1,|L1.6096|
        STRB     r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.6100|
        STRH     r0,[r1,#0]
        MOV      r0,#0x28
        LDR      r1,|L1.6104|
        STRH     r0,[r1,#0]
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,#0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0
        LDR      r1,|L1.6016|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.6020|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.6024|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r3,#3
        MOV      r2,r0
        MOV      r1,#0xe1
        MOV      r0,#0xeb
        BL       DrawArrow
        MOVS     r3,#0
        ADR      r2,|L1.6108|
        MOVS     r1,#0xd7
        MOVS     r0,#0x1e
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.2384|
        MOVS     r1,#0xd7
        MOV      r0,#0x102
        BL       TextButton
        MOV      r0,#0
        LDR      r1,|L1.6028|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.6032|
        STR      r0,[r1,#0]  ; pass
        MOV      r0,#0
        LDR      r1,|L1.6036|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#1
        LDR      r1,|L1.6040|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.6044|
        BL       delay_us
        NOP      
|L1.5876|
        LDR      r0,|L1.6040|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.5876|
|L1.5884|
        BL       Read_Ads7846
        LDR      r1,|L1.6048|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.5920|
        LDR      r2,|L1.6052|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.6056|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.6060|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.5922|
|L1.5920|
        POP      {r2-r4,pc}
|L1.5922|
        LDR      r0,|L1.6060|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.5990|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.6064|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.5988|
        MOV      r0,#5
        LDR      r1,|L1.6084|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.6028|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.6060|
        B        |L1.6128|
|L1.5988|
        B        |L1.6132|
|L1.5990|
        B        |L1.6222|
|L1.5992|
        DCB      "Mover cam",0
        DCB      0
        DCB      0
|L1.6004|
        DCD      0x437f0000
|L1.6008|
        DCD      umbral_y
|L1.6012|
        DCD      Calibration_vars
|L1.6016|
        DCD      num_botton_menu
|L1.6020|
        DCD      num_bars_menu
|L1.6024|
        DCD      type_bar
|L1.6028|
        DCD      draw_flag
|L1.6032|
        DCD      pass
|L1.6036|
        DCD      state_in_process
|L1.6040|
        DCD      delay_only
|L1.6044|
        DCD      0x0007a120
|L1.6048|
        DCD      Ptr
|L1.6052|
        DCD      matrix
|L1.6056|
        DCD      display
|L1.6060|
        DCD      screen_flag
|L1.6064|
        DCD      menu_rect
|L1.6068|
        DCD      cons_pro_y
|L1.6072|
        DCD      0x9999999a
|L1.6076|
        DCD      0x3fb99999
|L1.6080|
        DCD      cons_dif_y
|L1.6084|
        DCD      state
|L1.6088|
        DCD      j
|L1.6092|
        DCD      ||nb||
|L1.6096|
        DCD      read_type
|L1.6100|
        DCD      Vd_OV7670
|L1.6104|
        DCD      Vx_OV7670
|L1.6108|
        DCB      "Captura y deteccion",0
|L1.6128|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.6222|
|L1.6132|
        LDR      r0,|L1.7152|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.6178|
        MOV      r0,#8
        LDR      r1,|L1.7156|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.7160|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.7164|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.6222|
|L1.6178|
        LDR      r0,|L1.7152|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.6222|
        MOV      r0,#2
        LDR      r1,|L1.7156|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.7160|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.7164|
        STR      r0,[r1,#0]  ; screen_flag
|L1.6222|
        MOV      r0,#0
        LDR      r1,|L1.7164|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.5920|
        ENDP

Config_2 PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.7160|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.6444|
        LDR      r1,|L1.7168|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#5
        LDR      r1,|L1.7172|
        STRB     r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.7176|
        STRH     r0,[r1,#0]
        MOV      r0,#0x28
        LDR      r1,|L1.7180|
        STRH     r0,[r1,#0]
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,#0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0
        LDR      r1,|L1.7184|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.7188|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.7192|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r3,#4
        MOV      r2,r0
        MOV      r1,#0xe1
        MOV      r0,#0x11
        BL       DrawArrow
        MOVS     r3,#0
        ADR      r2,|L1.7196|
        MOVS     r1,#0xd7
        MOVS     r0,#0x30
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.7200|
        MOVS     r1,#0xd7
        MOVS     r0,#0x5f
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.7204|
        MOVS     r1,#0xd7
        MOVS     r0,#0x8f
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.7208|
        MOVS     r1,#0xd7
        MOVS     r0,#0xbe
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.2384|
        MOVS     r1,#0xd7
        MOV      r0,#0x102
        BL       TextButton
        MOV      r0,#0
        LDR      r1,|L1.7160|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.7216|
        STR      r0,[r1,#0]  ; pass
        MOV      r0,#0
        LDR      r1,|L1.7168|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#1
        LDR      r1,|L1.7220|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.7224|
        BL       delay_us
        NOP      
|L1.6436|
        LDR      r0,|L1.7220|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.6436|
|L1.6444|
        BL       Read_Ads7846
        LDR      r1,|L1.7228|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.6480|
        LDR      r2,|L1.7232|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.7236|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.7164|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.6482|
|L1.6480|
        POP      {r2-r4,pc}
|L1.6482|
        LDR      r0,|L1.7164|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.6548|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.7152|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.6550|
        MOV      r0,#4
        LDR      r1,|L1.7156|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.7160|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.7164|
        STR      r0,[r1,#0]  ; screen_flag
|L1.6548|
        B        |L1.6794|
|L1.6550|
        LDR      r0,|L1.7152|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.6600|
        MOV      r0,#0xd
        LDR      r1,|L1.7156|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.7160|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.7164|
        STR      r0,[r1,#0]  ; screen_flag
        LDR      r1,|L1.7240|
        STR      r0,[r1,#0]  ; man_auto
        B        |L1.6794|
|L1.6600|
        LDR      r0,|L1.7152|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.6646|
        MOV      r0,#9
        LDR      r1,|L1.7156|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.7160|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.7164|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.6794|
|L1.6646|
        LDR      r0,|L1.7152|
        LDR      r1,[r0,#0x18]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x1c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.6700|
        MOV      r0,#0xd
        LDR      r1,|L1.7156|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.7160|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.7164|
        STR      r0,[r1,#0]  ; screen_flag
        MOV      r0,#1
        LDR      r1,|L1.7240|
        STR      r0,[r1,#0]  ; man_auto
        B        |L1.6794|
|L1.6700|
        LDR      r0,|L1.7152|
        LDR      r1,[r0,#0x20]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x24]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.6750|
        MOV      r0,#5
        LDR      r1,|L1.7156|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.7160|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.7164|
        STR      r0,[r1,#0]  ; screen_flag
        BL       reset_OV7670
        B        |L1.6794|
|L1.6750|
        LDR      r0,|L1.7152|
        LDR      r1,[r0,#0x28]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x2c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.6794|
        MOV      r0,#2
        LDR      r1,|L1.7156|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.7160|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.7164|
        STR      r0,[r1,#0]  ; screen_flag
|L1.6794|
        MOV      r0,#0
        LDR      r1,|L1.7164|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.6480|
        ENDP

Light_Configuration PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.7160|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.7068|
        LDR      r1,|L1.7168|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#5
        LDR      r1,|L1.7172|
        STRB     r0,[r1,#0]
        MOV      r0,#0x8c
        LDR      r1,|L1.7176|
        STRH     r0,[r1,#0]
        MOV      r0,#0x28
        LDR      r1,|L1.7180|
        STRH     r0,[r1,#0]
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,#0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.7244|
        MOVS     r1,#0xa
        STR      r0,[sp,#0]
        MOV      r0,#0x113
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.7252|
        MOVS     r1,#0xa
        STR      r0,[sp,#0]
        MOVS     r0,#0xe1
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.7260|
        MOVS     r1,#0xa
        STR      r0,[sp,#0]
        MOVS     r0,#0xb7
        BL       GUI_Text
        BL       getOV7670_BriConLum
        LDR      r0,|L1.7268|
        LDRB     r0,[r0,#0]  ; OV7670bright
        LDR      r1,|L1.7272|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.7276|
        LDRB     r0,[r0,#0]  ; OV7670contrast
        STRH     r0,[r1,#2]
        LDR      r0,|L1.7280|
        LDRH     r0,[r0,#0]  ; OV7670luminis
        STRH     r0,[r1,#4]
        MOVS     r3,#0
        LDR      r0,|L1.7280|
        LDRH     r2,[r0,#0]  ; OV7670luminis
        LDR      r0,|L1.7276|
        LDRB     r1,[r0,#0]  ; OV7670contrast
        LDR      r0,|L1.7268|
        LDRB     r0,[r0,#0]  ; OV7670bright
        BL       OV7670_BriConLum
        MOV      r0,#0
        LDR      r1,|L1.7184|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.7188|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.7192|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r3,#4
        MOV      r2,r0
        MOV      r1,#0xe1
        MOV      r0,#0x11
        BL       DrawArrow
        MOVS     r3,#0
        ADR      r2,|L1.7196|
        MOVS     r1,#0xd7
        MOVS     r0,#0x30
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.7200|
        MOVS     r1,#0xd7
        MOVS     r0,#0x5f
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.7204|
        MOVS     r1,#0xd7
        MOVS     r0,#0x8f
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.7208|
        MOVS     r1,#0xd7
        MOVS     r0,#0xbe
        BL       TextButton
        MOVS     r3,#0
        LDR      r2,|L1.7284|
        MOVS     r1,#0xd7
        MOV      r0,#0x102
        BL       TextButton
        MOVS     r0,#0
        B        |L1.7070|
|L1.7068|
        B        |L1.7304|
|L1.7070|
        MOVS     r3,#0xa0
        MOVS     r2,#0x11
        MOVS     r1,#0x1e
        STR      r0,[sp,#0]
        MOVS     r0,#0xc3
        BL       DrawCalibrationBar
        MOVS     r0,#0
        MOVS     r3,#0xa0
        MOVS     r2,#0x11
        MOVS     r1,#0x1e
        STR      r0,[sp,#0]
        MOVS     r0,#0xf5
        BL       DrawCalibrationBar
        MOVS     r0,#0
        MOVS     r3,#0xa0
        MOVS     r2,#0x11
        MOVS     r1,#0x1e
        STR      r0,[sp,#0]
        MOV      r0,#0x127
        BL       DrawCalibrationBar
        MOV      r0,#0
        LDR      r1,|L1.7160|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.7216|
        STR      r0,[r1,#0]  ; pass
        MOV      r0,#0
        LDR      r1,|L1.7168|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#1
        LDR      r1,|L1.7220|
        STRH     r0,[r1,#0]
        B        |L1.7288|
|L1.7152|
        DCD      menu_rect
|L1.7156|
        DCD      state
|L1.7160|
        DCD      draw_flag
|L1.7164|
        DCD      screen_flag
|L1.7168|
        DCD      state_in_process
|L1.7172|
        DCD      read_type
|L1.7176|
        DCD      Vd_OV7670
|L1.7180|
        DCD      Vx_OV7670
|L1.7184|
        DCD      num_botton_menu
|L1.7188|
        DCD      num_bars_menu
|L1.7192|
        DCD      type_bar
|L1.7196|
        DCB      "RGB",0
|L1.7200|
        DCB      "Fps",0
|L1.7204|
        DCB      "Luz",0
|L1.7208|
        DCB      "Reset",0
        DCB      0
        DCB      0
|L1.7216|
        DCD      pass
|L1.7220|
        DCD      delay_only
|L1.7224|
        DCD      0x0007a120
|L1.7228|
        DCD      Ptr
|L1.7232|
        DCD      matrix
|L1.7236|
        DCD      display
|L1.7240|
        DCD      man_auto
|L1.7244|
        DCB      "Brillo",0
        DCB      0
|L1.7252|
        DCB      "Contra",0
        DCB      0
|L1.7260|
        DCB      "Lumin",0
        DCB      0
        DCB      0
|L1.7268|
        DCD      OV7670bright
|L1.7272|
        DCD      Calibration_vars
|L1.7276|
        DCD      OV7670contrast
|L1.7280|
        DCD      OV7670luminis
|L1.7284|
        DCD      ||.text||+0x950
|L1.7288|
        LDR      r0,|L1.8288|
        BL       delay_us
        NOP      
|L1.7296|
        LDR      r0,|L1.8292|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.7296|
|L1.7304|
        BL       Read_Ads7846
        LDR      r1,|L1.8296|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.7340|
        LDR      r2,|L1.8300|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.8304|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.8308|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.7342|
|L1.7340|
        POP      {r2-r4,pc}
|L1.7342|
        LDR      r0,|L1.8308|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.7408|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.8312|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.7410|
        MOV      r0,#4
        LDR      r1,|L1.8316|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.8320|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.8308|
        STR      r0,[r1,#0]  ; screen_flag
|L1.7408|
        B        |L1.7654|
|L1.7410|
        LDR      r0,|L1.8312|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.7460|
        MOV      r0,#0xd
        LDR      r1,|L1.8316|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.8320|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.8308|
        STR      r0,[r1,#0]  ; screen_flag
        LDR      r1,|L1.8324|
        STR      r0,[r1,#0]  ; man_auto
        B        |L1.7654|
|L1.7460|
        LDR      r0,|L1.8312|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.7506|
        MOV      r0,#9
        LDR      r1,|L1.8316|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.8320|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.8308|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.7654|
|L1.7506|
        LDR      r0,|L1.8312|
        LDR      r1,[r0,#0x18]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x1c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.7560|
        MOV      r0,#0xd
        LDR      r1,|L1.8316|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.8320|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.8308|
        STR      r0,[r1,#0]  ; screen_flag
        MOV      r0,#1
        LDR      r1,|L1.8324|
        STR      r0,[r1,#0]  ; man_auto
        B        |L1.7654|
|L1.7560|
        LDR      r0,|L1.8312|
        LDR      r1,[r0,#0x20]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x24]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.7610|
        MOV      r0,#5
        LDR      r1,|L1.8316|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.8320|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.8308|
        STR      r0,[r1,#0]  ; screen_flag
        BL       reset_OV7670
        B        |L1.7654|
|L1.7610|
        LDR      r0,|L1.8312|
        LDR      r1,[r0,#0x28]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x2c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.7654|
        MOV      r0,#2
        LDR      r1,|L1.8316|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.8320|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.8308|
        STR      r0,[r1,#0]  ; screen_flag
|L1.7654|
        MOV      r0,#0
        LDR      r1,|L1.8328|
        STR      r0,[r1,#0]  ; j
        B        |L1.7870|
|L1.7664|
        LDR      r0,|L1.8332|
        LDRB     r0,[r0,#0]  ; num_botton_menu
        LDR      r1,|L1.8328|
        LDR      r1,[r1,#0]  ; j
        ADD      r0,r0,r1
        LDR      r1,|L1.8336|
        STR      r0,[r1,#0]  ; nb
        LDR      r0,|L1.8312|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.7828|
        MOV      r0,#1
        LDR      r1,|L1.8340|
        STR      r0,[r1,#0]  ; state_in_process
        LDR      r0,|L1.8344|
        LDR      r0,[r0,#0]  ; type_bar
        LDR      r1,|L1.8328|
        LDR      r1,[r1,#0]  ; j
        LSR      r0,r0,r1
        AND      r3,r0,#1
        LDR      r0,|L1.8312|
        LDR      r1,|L1.8336|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r2,r0
        STR      r0,[sp,#4]
        LDR      r0,|L1.8328|
        LDR      r0,[r0,#0]  ; j
        UXTH     r0,r0
        BL       Get_CalibrationValue
        LDR      r0,|L1.8344|
        LDR      r0,[r0,#0]  ; type_bar
        LDR      r1,|L1.8328|
        LDR      r1,[r1,#0]  ; j
        LSRS     r0,r0,r1
        AND      r3,r0,#1
        LDR      r0,|L1.8312|
        LDR      r1,|L1.8336|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r2,r0
        STR      r0,[sp,#4]
        LDR      r0,|L1.8328|
        LDR      r0,[r0,#0]  ; j
        UXTH     r0,r0
        BL       UpdateBar
        MOV      r0,#0
        LDR      r1,|L1.8308|
        STR      r0,[r1,#0]  ; screen_flag
        LDR      r0,|L1.8348|
        LDRH     r0,[r0,#0]  ; Calibration_vars
        LDR      r1,|L1.8352|
        STRB     r0,[r1,#0]
        LDR      r0,|L1.8348|
        LDRH     r0,[r0,#2]  ; Calibration_vars
        LDR      r1,|L1.8356|
        STRB     r0,[r1,#0]
        B        |L1.7830|
|L1.7828|
        B        |L1.7858|
|L1.7830|
        LDR      r0,|L1.8348|
        LDRH     r0,[r0,#4]  ; Calibration_vars
        LDR      r1,|L1.8360|
        STRH     r0,[r1,#0]
        MOV      r3,#0
        MOV      r0,r1
        LDRH     r2,[r0,#0]  ; OV7670luminis
        LDR      r0,|L1.8356|
        LDRB     r1,[r0,#0]  ; OV7670contrast
        LDR      r0,|L1.8352|
        LDRB     r0,[r0,#0]  ; OV7670bright
        BL       OV7670_BriConLum
|L1.7858|
        LDR      r0,|L1.8328|
        LDR      r0,[r0,#0]  ; j
        ADD      r0,r0,#1
        LDR      r1,|L1.8328|
        STR      r0,[r1,#0]  ; j
|L1.7870|
        LDR      r0,|L1.8328|
        LDR      r0,[r0,#0]  ; j
        LDR      r1,|L1.8364|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        CMP      r0,r1
        BLT      |L1.7664|
        MOV      r0,#0
        LDR      r1,|L1.8340|
        STR      r0,[r1,#0]  ; state_in_process
        NOP      
        B        |L1.7340|
        ENDP

Choose_FPS PROC
        PUSH     {lr}
        SUB      sp,sp,#0x14
        LDR      r0,|L1.8320|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.8160|
        LDR      r1,|L1.8340|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#5
        LDR      r1,|L1.8368|
        STRB     r0,[r1,#0]
        MOV      r0,#0x78
        LDR      r1,|L1.8372|
        STRH     r0,[r1,#0]
        MOV      r0,#0x28
        LDR      r1,|L1.8376|
        STRH     r0,[r1,#0]
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,#0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.8380|
        MOVS     r1,#0xaa
        STR      r0,[sp,#0]
        MOVS     r0,#0xcf
        BL       GUI_Text
        MOV      r0,#0
        LDR      r1,|L1.8332|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.8364|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.8344|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r3,#4
        MOV      r2,r0
        MOV      r1,#0xe1
        MOV      r0,#0x11
        BL       DrawArrow
        MOVS     r3,#0
        ADR      r2,|L1.7196|
        MOVS     r1,#0xd7
        MOVS     r0,#0x30
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.7200|
        MOVS     r1,#0xd7
        MOVS     r0,#0x5f
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.7204|
        MOVS     r1,#0xd7
        MOVS     r0,#0x8f
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.7208|
        MOVS     r1,#0xd7
        MOVS     r0,#0xbe
        BL       TextButton
        MOVS     r3,#0
        LDR      r2,|L1.8392|
        MOVS     r1,#0xd7
        MOV      r0,#0x102
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.8396|
        MOVS     r1,#0x1e
        MOVS     r0,#0xcb
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.8400|
        MOVS     r1,#0x1e
        MOVS     r0,#0xf3
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.8404|
        MOVS     r1,#0x1e
        MOV      r0,#0x11b
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.8408|
        MOVS     r1,#0x46
        MOVS     r0,#0xcb
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.8412|
        MOVS     r1,#0x46
        MOVS     r0,#0xf3
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.8416|
        MOVS     r1,#0x46
        MOV      r0,#0x11b
        BL       TextButton
        B        |L1.8162|
|L1.8160|
        B        |L1.8248|
|L1.8162|
        MOVS     r3,#0
        ADR      r2,|L1.8420|
        MOVS     r1,#0x6e
        MOVS     r0,#0xcb
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.8424|
        MOVS     r1,#0x6e
        MOVS     r0,#0xf3
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.8428|
        MOVS     r1,#0x6e
        MOV      r0,#0x11b
        BL       TextButton
        MOV      r0,#0
        LDR      r1,|L1.8320|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.8432|
        STR      r0,[r1,#0]  ; pass
        MOV      r0,#0
        LDR      r1,|L1.8340|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#1
        LDR      r1,|L1.8292|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.8288|
        BL       delay_us
        NOP      
|L1.8240|
        LDR      r0,|L1.8292|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.8240|
|L1.8248|
        BL       Read_Ads7846
        LDR      r1,|L1.8296|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.8284|
        LDR      r2,|L1.8300|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.8304|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.8308|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.8440|
|L1.8284|
        B        |L1.8436|
        DCW      0x0000
|L1.8288|
        DCD      0x0007a120
|L1.8292|
        DCD      delay_only
|L1.8296|
        DCD      Ptr
|L1.8300|
        DCD      matrix
|L1.8304|
        DCD      display
|L1.8308|
        DCD      screen_flag
|L1.8312|
        DCD      menu_rect
|L1.8316|
        DCD      state
|L1.8320|
        DCD      draw_flag
|L1.8324|
        DCD      man_auto
|L1.8328|
        DCD      j
|L1.8332|
        DCD      num_botton_menu
|L1.8336|
        DCD      ||nb||
|L1.8340|
        DCD      state_in_process
|L1.8344|
        DCD      type_bar
|L1.8348|
        DCD      Calibration_vars
|L1.8352|
        DCD      OV7670bright
|L1.8356|
        DCD      OV7670contrast
|L1.8360|
        DCD      OV7670luminis
|L1.8364|
        DCD      num_bars_menu
|L1.8368|
        DCD      read_type
|L1.8372|
        DCD      Vd_OV7670
|L1.8376|
        DCD      Vx_OV7670
|L1.8380|
        DCB      "FPS reales:",0
|L1.8392|
        DCD      ||.text||+0x950
|L1.8396|
        DCB      " 1 ",0
|L1.8400|
        DCB      " 2 ",0
|L1.8404|
        DCB      " 3 ",0
|L1.8408|
        DCB      " 5 ",0
|L1.8412|
        DCB      "10 ",0
|L1.8416|
        DCB      "15 ",0
|L1.8420|
        DCB      "20 ",0
|L1.8424|
        DCB      "30 ",0
|L1.8428|
        DCB      "40 ",0
|L1.8432|
        DCD      pass
|L1.8436|
        ADD      sp,sp,#0x14
        POP      {pc}
|L1.8440|
        LDR      r0,|L1.9460|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.8700|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.8508|
        MOV      r0,#4
        LDR      r1,|L1.9468|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.9472|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.9460|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.9008|
|L1.8508|
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.8558|
        MOV      r0,#0xd
        LDR      r1,|L1.9468|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.9472|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.9460|
        STR      r0,[r1,#0]  ; screen_flag
        LDR      r1,|L1.9476|
        STR      r0,[r1,#0]  ; man_auto
        B        |L1.9008|
|L1.8558|
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.8604|
        MOV      r0,#9
        LDR      r1,|L1.9468|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.9472|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.9460|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.9008|
|L1.8604|
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#0x18]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x1c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.8658|
        MOV      r0,#0xd
        LDR      r1,|L1.9468|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.9472|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.9460|
        STR      r0,[r1,#0]  ; screen_flag
        MOV      r0,#1
        LDR      r1,|L1.9476|
        STR      r0,[r1,#0]  ; man_auto
        B        |L1.9008|
|L1.8658|
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#0x20]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x24]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.8712|
        MOV      r0,#5
        LDR      r1,|L1.9468|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.9472|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        B        |L1.8702|
|L1.8700|
        B        |L1.9054|
|L1.8702|
        LDR      r1,|L1.9460|
        STR      r0,[r1,#0]  ; screen_flag
        BL       reset_OV7670
        B        |L1.9008|
|L1.8712|
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#0x28]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x2c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.8758|
        MOV      r0,#2
        LDR      r1,|L1.9468|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.9472|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.9460|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.9008|
|L1.8758|
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#0x30]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x34]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.8786|
        MOVS     r0,#1
        BL       OV7670_FPS
        B        |L1.9008|
|L1.8786|
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#0x38]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x3c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.8814|
        MOVS     r0,#2
        BL       OV7670_FPS
        B        |L1.9008|
|L1.8814|
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#0x40]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x44]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.8842|
        MOVS     r0,#3
        BL       OV7670_FPS
        B        |L1.9008|
|L1.8842|
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#0x48]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x4c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.8870|
        MOVS     r0,#5
        BL       OV7670_FPS
        B        |L1.9008|
|L1.8870|
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#0x50]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x54]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.8898|
        MOVS     r0,#0xa
        BL       OV7670_FPS
        B        |L1.9008|
|L1.8898|
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#0x58]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x5c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.8926|
        MOVS     r0,#0xf
        BL       OV7670_FPS
        B        |L1.9008|
|L1.8926|
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#0x60]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x64]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.8954|
        MOVS     r0,#0x14
        BL       OV7670_FPS
        B        |L1.9008|
|L1.8954|
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#0x68]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x6c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.8982|
        MOVS     r0,#0x1e
        BL       OV7670_FPS
        B        |L1.9008|
|L1.8982|
        LDR      r0,|L1.9464|
        LDR      r1,[r0,#0x70]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x74]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.9008|
        MOVS     r0,#0x28
        BL       OV7670_FPS
|L1.9008|
        MOV      r0,#1
        LDR      r1,|L1.9480|
        STR      r0,[r1,#0]  ; state_in_process
        ADD      r1,sp,#8
        LDR      r0,|L1.9484|
        LDRB     r0,[r0,#0]  ; OV7670fps
        BL       conversor_IaS
        MOVS     r0,#0
        MOV      r3,#0xf7de
        ADD      r2,sp,#8
        MOVS     r1,#0xaa
        STR      r0,[sp,#0]
        MOV      r0,#0x12c
        BL       GUI_Text
        MOV      r0,#0
        LDR      r1,|L1.9480|
        STR      r0,[r1,#0]  ; state_in_process
|L1.9054|
        MOV      r0,#0
        LDR      r1,|L1.9460|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.8436|
        ENDP

RGB_Configuration PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.9472|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.9328|
        LDR      r1,|L1.9480|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#5
        LDR      r1,|L1.9488|
        STRB     r0,[r1,#0]
        MOV      r0,#0x8c
        LDR      r1,|L1.9492|
        STRH     r0,[r1,#0]
        MOV      r0,#0x28
        LDR      r1,|L1.9496|
        STRH     r0,[r1,#0]
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,#0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.9500|
        MOVS     r1,#0xa
        STR      r0,[sp,#0]
        MOV      r0,#0x11b
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.9508|
        MOVS     r1,#0xa
        STR      r0,[sp,#0]
        MOVS     r0,#0xe6
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.9516|
        MOVS     r1,#0xa
        STR      r0,[sp,#0]
        MOVS     r0,#0xbb
        BL       GUI_Text
        MOVS     r0,#0
        BL       OV7670_AWBmode
        BL       getOV7670_RGBgain
        LDR      r0,|L1.9524|
        LDRB     r0,[r0,#0]  ; OV7670R_gain
        LDR      r1,|L1.9528|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.9532|
        LDRB     r0,[r0,#0]  ; OV7670G_gain
        STRH     r0,[r1,#2]
        LDR      r0,|L1.9536|
        LDRB     r0,[r0,#0]  ; OV7670B_gain
        STRH     r0,[r1,#4]
        MOV      r0,#0
        LDR      r1,|L1.9540|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.9544|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.9548|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r3,#4
        MOV      r2,r0
        MOV      r1,#0xe1
        MOV      r0,#0x11
        BL       DrawArrow
        MOVS     r3,#0
        ADR      r2,|L1.7196|
        MOVS     r1,#0xd7
        MOVS     r0,#0x30
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.7200|
        MOVS     r1,#0xd7
        MOVS     r0,#0x5f
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.7204|
        MOVS     r1,#0xd7
        MOVS     r0,#0x8f
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.7208|
        MOVS     r1,#0xd7
        MOVS     r0,#0xbe
        BL       TextButton
        MOVS     r3,#0
        LDR      r2,|L1.9552|
        MOVS     r1,#0xd7
        MOV      r0,#0x102
        BL       TextButton
        MOVS     r0,#0
        MOVS     r3,#0xa0
        MOVS     r2,#0x11
        B        |L1.9330|
|L1.9328|
        B        |L1.9422|
|L1.9330|
        MOVS     r1,#0x1e
        STR      r0,[sp,#0]
        MOVS     r0,#0xc3
        BL       DrawCalibrationBar
        MOVS     r0,#0
        MOVS     r3,#0xa0
        MOVS     r2,#0x11
        MOVS     r1,#0x1e
        STR      r0,[sp,#0]
        MOVS     r0,#0xf5
        BL       DrawCalibrationBar
        MOVS     r0,#0
        MOVS     r3,#0xa0
        MOVS     r2,#0x11
        MOVS     r1,#0x1e
        STR      r0,[sp,#0]
        MOV      r0,#0x127
        BL       DrawCalibrationBar
        MOV      r0,#0
        LDR      r1,|L1.9472|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.9556|
        STR      r0,[r1,#0]  ; pass
        MOV      r0,#0
        LDR      r1,|L1.9480|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#1
        LDR      r1,|L1.9560|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.9564|
        BL       delay_us
        NOP      
|L1.9414|
        LDR      r0,|L1.9560|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.9414|
|L1.9422|
        BL       Read_Ads7846
        LDR      r1,|L1.9568|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.9456|
        LDR      r2,|L1.9572|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.9576|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.9460|
        B        |L1.9580|
|L1.9456|
        B        |L1.9584|
        DCW      0x0000
|L1.9460|
        DCD      screen_flag
|L1.9464|
        DCD      menu_rect
|L1.9468|
        DCD      state
|L1.9472|
        DCD      draw_flag
|L1.9476|
        DCD      man_auto
|L1.9480|
        DCD      state_in_process
|L1.9484|
        DCD      OV7670fps
|L1.9488|
        DCD      read_type
|L1.9492|
        DCD      Vd_OV7670
|L1.9496|
        DCD      Vx_OV7670
|L1.9500|
        DCB      "Azul",0
        DCB      0
        DCB      0
        DCB      0
|L1.9508|
        DCB      "Verde",0
        DCB      0
        DCB      0
|L1.9516|
        DCB      "Rojo",0
        DCB      0
        DCB      0
        DCB      0
|L1.9524|
        DCD      OV7670R_gain
|L1.9528|
        DCD      Calibration_vars
|L1.9532|
        DCD      OV7670G_gain
|L1.9536|
        DCD      OV7670B_gain
|L1.9540|
        DCD      num_botton_menu
|L1.9544|
        DCD      num_bars_menu
|L1.9548|
        DCD      type_bar
|L1.9552|
        DCD      ||.text||+0x950
|L1.9556|
        DCD      pass
|L1.9560|
        DCD      delay_only
|L1.9564|
        DCD      0x0007a120
|L1.9568|
        DCD      Ptr
|L1.9572|
        DCD      matrix
|L1.9576|
        DCD      display
|L1.9580|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.9586|
|L1.9584|
        POP      {r2-r4,pc}
|L1.9586|
        LDR      r0,|L1.10604|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.9652|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.10608|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.9654|
        MOV      r0,#4
        LDR      r1,|L1.10612|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.10616|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.10604|
        STR      r0,[r1,#0]  ; screen_flag
|L1.9652|
        B        |L1.9898|
|L1.9654|
        LDR      r0,|L1.10608|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.9704|
        MOV      r0,#0xd
        LDR      r1,|L1.10612|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.10616|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.10604|
        STR      r0,[r1,#0]  ; screen_flag
        LDR      r1,|L1.10620|
        STR      r0,[r1,#0]  ; man_auto
        B        |L1.9898|
|L1.9704|
        LDR      r0,|L1.10608|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.9750|
        MOV      r0,#9
        LDR      r1,|L1.10612|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.10616|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.10604|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.9898|
|L1.9750|
        LDR      r0,|L1.10608|
        LDR      r1,[r0,#0x18]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x1c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.9804|
        MOV      r0,#0xd
        LDR      r1,|L1.10612|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.10616|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.10604|
        STR      r0,[r1,#0]  ; screen_flag
        MOV      r0,#1
        LDR      r1,|L1.10620|
        STR      r0,[r1,#0]  ; man_auto
        B        |L1.9898|
|L1.9804|
        LDR      r0,|L1.10608|
        LDR      r1,[r0,#0x20]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x24]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.9854|
        MOV      r0,#5
        LDR      r1,|L1.10612|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.10616|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.10604|
        STR      r0,[r1,#0]  ; screen_flag
        BL       reset_OV7670
        B        |L1.9898|
|L1.9854|
        LDR      r0,|L1.10608|
        LDR      r1,[r0,#0x28]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x2c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.9898|
        MOV      r0,#2
        LDR      r1,|L1.10612|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.10616|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.10604|
        STR      r0,[r1,#0]  ; screen_flag
|L1.9898|
        MOV      r0,#0
        LDR      r1,|L1.10624|
        STR      r0,[r1,#0]  ; j
        B        |L1.10110|
|L1.9908|
        LDR      r0,|L1.10628|
        LDRB     r0,[r0,#0]  ; num_botton_menu
        LDR      r1,|L1.10624|
        LDR      r1,[r1,#0]  ; j
        ADD      r0,r0,r1
        LDR      r1,|L1.10632|
        STR      r0,[r1,#0]  ; nb
        LDR      r0,|L1.10608|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.10072|
        MOV      r0,#1
        LDR      r1,|L1.10636|
        STR      r0,[r1,#0]  ; state_in_process
        LDR      r0,|L1.10640|
        LDR      r0,[r0,#0]  ; type_bar
        LDR      r1,|L1.10624|
        LDR      r1,[r1,#0]  ; j
        LSR      r0,r0,r1
        AND      r3,r0,#1
        LDR      r0,|L1.10608|
        LDR      r1,|L1.10632|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r2,r0
        STR      r0,[sp,#4]
        LDR      r0,|L1.10624|
        LDR      r0,[r0,#0]  ; j
        UXTH     r0,r0
        BL       Get_CalibrationValue
        LDR      r0,|L1.10640|
        LDR      r0,[r0,#0]  ; type_bar
        LDR      r1,|L1.10624|
        LDR      r1,[r1,#0]  ; j
        LSRS     r0,r0,r1
        AND      r3,r0,#1
        LDR      r0,|L1.10608|
        LDR      r1,|L1.10632|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r2,r0
        STR      r0,[sp,#4]
        LDR      r0,|L1.10624|
        LDR      r0,[r0,#0]  ; j
        UXTH     r0,r0
        BL       UpdateBar
        MOV      r0,#0
        LDR      r1,|L1.10604|
        STR      r0,[r1,#0]  ; screen_flag
        LDR      r0,|L1.10644|
        LDRH     r0,[r0,#0]  ; Calibration_vars
        LDR      r1,|L1.10648|
        STRB     r0,[r1,#0]
        LDR      r0,|L1.10644|
        LDRH     r0,[r0,#2]  ; Calibration_vars
        LDR      r1,|L1.10652|
        STRB     r0,[r1,#0]
        B        |L1.10074|
|L1.10072|
        B        |L1.10098|
|L1.10074|
        LDR      r0,|L1.10644|
        LDRH     r0,[r0,#4]  ; Calibration_vars
        LDR      r1,|L1.10656|
        STRB     r0,[r1,#0]
        MOV      r0,r1
        LDRB     r2,[r0,#0]  ; OV7670B_gain
        LDR      r0,|L1.10652|
        LDRB     r1,[r0,#0]  ; OV7670G_gain
        LDR      r0,|L1.10648|
        LDRB     r0,[r0,#0]  ; OV7670R_gain
        BL       OV7670_RGBgain
|L1.10098|
        LDR      r0,|L1.10624|
        LDR      r0,[r0,#0]  ; j
        ADD      r0,r0,#1
        LDR      r1,|L1.10624|
        STR      r0,[r1,#0]  ; j
|L1.10110|
        LDR      r0,|L1.10624|
        LDR      r0,[r0,#0]  ; j
        LDR      r1,|L1.10660|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        CMP      r0,r1
        BLT      |L1.9908|
        MOV      r0,#0
        LDR      r1,|L1.10636|
        STR      r0,[r1,#0]  ; state_in_process
        NOP      
        B        |L1.9584|
        ENDP

Show_IP PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.10616|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.10248|
        MOV      r0,#0
        LDR      r1,|L1.10664|
        STR      r0,[r1,#0]  ; pass
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,r0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0
        LDR      r1,|L1.10628|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.10660|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.10640|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r3,r0
        LDR      r2,|L1.10668|
        MOV      r1,#0xd7
        MOV      r0,#0x102
        BL       TextButton
        MOV      r0,#0
        LDR      r1,|L1.10616|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.10672|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.10676|
        BL       delay_us
        MOV      r0,#1
        LDR      r1,|L1.10680|
        STR      r0,[r1,#0]  ; LCDupdate
        NOP      
|L1.10240|
        LDR      r0,|L1.10672|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.10240|
|L1.10248|
        BL       upd_display
        BL       Read_Ads7846
        LDR      r1,|L1.10684|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.10288|
        LDR      r2,|L1.10688|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.10692|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.10604|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.10290|
|L1.10288|
        POP      {r2-r4,pc}
|L1.10290|
        LDR      r0,|L1.10604|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.10352|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.10608|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.10352|
        MOV      r0,#1
        LDR      r1,|L1.10612|
        STR      r0,[r1,#0]  ; state
        LDR      r1,|L1.10616|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.10604|
        STR      r0,[r1,#0]  ; screen_flag
|L1.10352|
        MOV      r0,#0
        LDR      r1,|L1.10604|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.10288|
        ENDP

Show_Actual_Config PROC
        PUSH     {lr}
        SUB      sp,sp,#0x14
        LDR      r0,|L1.10616|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.10600|
        MOV      r0,#0
        LDR      r1,|L1.10664|
        STR      r0,[r1,#0]  ; pass
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,r0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.10696|
        MOVS     r1,#0xa
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        ADD      r1,sp,#8
        LDR      r0,|L1.10716|
        LDRB     r0,[r0,#0]  ; umbral
        BL       conversor_IaS
        MOV      r0,#0x2595
        MOV      r3,#0xf7de
        ADD      r2,sp,#8
        MOVS     r1,#0xa
        STR      r0,[sp,#0]
        MOV      r0,#0x118
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.7244|
        MOVS     r1,#0x23
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        ADD      r1,sp,#8
        LDR      r0,|L1.10720|
        LDRB     r0,[r0,#0]  ; OV7670bright
        BL       conversor_IaS
        MOV      r0,#0x2595
        MOV      r3,#0xf7de
        ADD      r2,sp,#8
        MOVS     r1,#0x23
        STR      r0,[sp,#0]
        LSLS     r0,r1,#3
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.10724|
        MOVS     r1,#0x3c
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        ADD      r1,sp,#8
        LDR      r0,|L1.10736|
        LDRB     r0,[r0,#0]  ; OV7670contrast
        BL       conversor_IaS
        MOV      r0,#0x2595
        MOV      r3,#0xf7de
        ADD      r2,sp,#8
        MOVS     r1,#0x3c
        STR      r0,[sp,#0]
        MOV      r0,#0x118
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.10740|
        MOVS     r1,#0x55
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        ADD      r1,sp,#8
        LDR      r0,|L1.10752|
        LDRH     r0,[r0,#0]  ; OV7670luminis
        BL       conversor_IaS
        MOV      r0,#0x2595
        MOV      r3,#0xf7de
        ADD      r2,sp,#8
        MOVS     r1,#0x55
        B        |L1.10756|
|L1.10600|
        B        |L1.11030|
        DCW      0x0000
|L1.10604|
        DCD      screen_flag
|L1.10608|
        DCD      menu_rect
|L1.10612|
        DCD      state
|L1.10616|
        DCD      draw_flag
|L1.10620|
        DCD      man_auto
|L1.10624|
        DCD      j
|L1.10628|
        DCD      num_botton_menu
|L1.10632|
        DCD      ||nb||
|L1.10636|
        DCD      state_in_process
|L1.10640|
        DCD      type_bar
|L1.10644|
        DCD      Calibration_vars
|L1.10648|
        DCD      OV7670R_gain
|L1.10652|
        DCD      OV7670G_gain
|L1.10656|
        DCD      OV7670B_gain
|L1.10660|
        DCD      num_bars_menu
|L1.10664|
        DCD      pass
|L1.10668|
        DCD      ||.text||+0x950
|L1.10672|
        DCD      delay_only
|L1.10676|
        DCD      0x0007a120
|L1.10680|
        DCD      LCDupdate
|L1.10684|
        DCD      Ptr
|L1.10688|
        DCD      matrix
|L1.10692|
        DCD      display
|L1.10696|
        DCB      "Umbral de deteccion",0
|L1.10716|
        DCD      umbral
|L1.10720|
        DCD      OV7670bright
|L1.10724|
        DCB      "Contraste",0
        DCB      0
        DCB      0
|L1.10736|
        DCD      OV7670contrast
|L1.10740|
        DCB      "Luminosidad",0
|L1.10752|
        DCD      OV7670luminis
|L1.10756|
        STR      r0,[sp,#0]
        MOV      r0,#0x118
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.11784|
        MOVS     r1,#0x6e
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        ADD      r1,sp,#8
        LDR      r0,|L1.11804|
        LDRB     r0,[r0,#0]  ; OV7670R_gain
        BL       conversor_IaS
        MOV      r0,#0x2595
        MOV      r3,#0xf7de
        ADD      r2,sp,#8
        MOVS     r1,#0x6e
        STR      r0,[sp,#0]
        MOV      r0,#0x118
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.11808|
        MOVS     r1,#0x87
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        ADD      r1,sp,#8
        LDR      r0,|L1.11828|
        LDRB     r0,[r0,#0]  ; OV7670G_gain
        BL       conversor_IaS
        MOV      r0,#0x2595
        MOV      r3,#0xf7de
        ADD      r2,sp,#8
        MOVS     r1,#0x87
        STR      r0,[sp,#0]
        MOV      r0,#0x118
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.11832|
        MOVS     r1,#0xa0
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        ADD      r1,sp,#8
        LDR      r0,|L1.11852|
        LDRB     r0,[r0,#0]  ; OV7670B_gain
        BL       conversor_IaS
        MOV      r0,#0x2595
        MOV      r3,#0xf7de
        ADD      r2,sp,#8
        MOVS     r1,#0xa0
        STR      r0,[sp,#0]
        MOV      r0,#0x118
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.11856|
        MOVS     r1,#0xb9
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        ADD      r1,sp,#8
        LDR      r0,|L1.11872|
        LDRB     r0,[r0,#0]  ; OV7670fps
        BL       conversor_IaS
        MOV      r0,#0x2595
        MOV      r3,#0xf7de
        ADD      r2,sp,#8
        MOVS     r1,#0xb9
        STR      r0,[sp,#0]
        MOV      r0,#0x118
        BL       GUI_Text
        MOV      r0,#0
        LDR      r1,|L1.11876|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.11880|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.11884|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r3,r0
        LDR      r2,|L1.11888|
        MOV      r1,#0xd7
        MOV      r0,#0x102
        BL       TextButton
        MOV      r0,#0
        LDR      r1,|L1.11892|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.11896|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.11900|
        BL       delay_us
        NOP      
|L1.11022|
        LDR      r0,|L1.11896|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.11022|
|L1.11030|
        BL       Read_Ads7846
        LDR      r1,|L1.11904|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.11066|
        LDR      r2,|L1.11908|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.11912|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.11916|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.11070|
|L1.11066|
        ADD      sp,sp,#0x14
        POP      {pc}
|L1.11070|
        LDR      r0,|L1.11916|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.11136|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.11920|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.11136|
        MOV      r0,#2
        LDR      r1,|L1.11924|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.11892|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.11916|
        STR      r0,[r1,#0]  ; screen_flag
|L1.11136|
        MOV      r0,#0
        LDR      r1,|L1.11916|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.11066|
        ENDP

Config_Umbral_Captura PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.11892|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.11412|
        LDR      r1,|L1.11928|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#7
        LDR      r1,|L1.11932|
        STRB     r0,[r1,#0]
        MOV      r0,#0x50
        LDR      r1,|L1.11936|
        STRH     r0,[r1,#0]
        MOV      r0,#0x28
        LDR      r1,|L1.11940|
        STRH     r0,[r1,#0]
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,#0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.11944|
        MOVS     r1,#0xa
        STR      r0,[sp,#0]
        MOVS     r0,#0xf5
        BL       GUI_Text
        MOVS     r0,#0
        MOVS     r3,#0x96
        MOV      r2,#0x11d
        MOVS     r1,#0x7d
        STR      r0,[sp,#0]
        MOV      r0,r2
        BL       LCD_DrawLine
        MOVS     r0,#0
        MOVS     r3,#0x96
        MOV      r2,#0x136
        MOVS     r1,#0x7d
        STR      r0,[sp,#0]
        MOV      r0,r2
        BL       LCD_DrawLine
        MOVS     r0,#0
        MOVS     r3,#0x7d
        MOV      r2,#0x136
        MOV      r1,r3
        STR      r0,[sp,#0]
        MOV      r0,#0x11d
        BL       LCD_DrawLine
        MOVS     r0,#0
        MOVS     r3,#0x96
        MOV      r2,#0x136
        MOV      r1,r3
        STR      r0,[sp,#0]
        MOV      r0,#0x11d
        BL       LCD_DrawLine
        LDR      r0,|L1.11952|
        LDRH     r0,[r0,#0]  ; color_detect
        MOVS     r3,#0x19
        MOV      r2,r3
        MOVS     r1,#0x7d
        STR      r0,[sp,#0]
        MOV      r0,#0x11d
        BL       DrawRectangle
        LDR      r0,|L1.11956|
        LDRB     r0,[r0,#0]  ; umbral
        LSL      r0,r0,#3
        LDR      r1,|L1.11960|
        STRH     r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.11876|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.11880|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.11884|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r3,#3
        MOV      r2,r0
        MOV      r1,#0xe1
        MOV      r0,#0xeb
        BL       DrawArrow
        MOVS     r3,#0
        LDR      r2,|L1.11964|
        MOVS     r1,#0xd7
        MOVS     r0,#0x1e
        BL       TextButton
        MOVS     r3,#0
        LDR      r2,|L1.11888|
        MOVS     r1,#0xd7
        MOV      r0,#0x102
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.11968|
        MOVS     r1,#0xbb
        MOVS     r0,#0xff
        BL       TextButton
        B        |L1.11414|
|L1.11412|
        B        |L1.11478|
|L1.11414|
        MOVS     r0,#0
        MOVS     r3,#0x99
        MOVS     r2,#0x11
        MOVS     r1,#0x1e
        STR      r0,[sp,#0]
        MOVS     r0,#0xff
        BL       DrawCalibrationBar
        MOV      r0,#0
        LDR      r1,|L1.11892|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.11976|
        STR      r0,[r1,#0]  ; pass
        MOV      r0,#0
        LDR      r1,|L1.11928|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#1
        LDR      r1,|L1.11896|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.11900|
        BL       delay_us
        NOP      
|L1.11470|
        LDR      r0,|L1.11896|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.11470|
|L1.11478|
        BL       Read_Ads7846
        LDR      r1,|L1.11904|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.11514|
        LDR      r2,|L1.11908|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.11912|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.11916|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.11516|
|L1.11514|
        POP      {r2-r4,pc}
|L1.11516|
        LDR      r0,|L1.11980|
        LDRH     r0,[r0,#0]  ; Capt_flag
        CMP      r0,#1
        BNE      |L1.11576|
        LDR      r0,|L1.11916|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.11576|
        BL       GetColor
        LDR      r1,|L1.11952|
        STRH     r0,[r1,#0]
        MOV      r0,r1
        LDRH     r0,[r0,#0]  ; color_detect
        MOVS     r3,#0x19
        MOV      r2,r3
        MOVS     r1,#0x7d
        STR      r0,[sp,#0]
        MOV      r0,#0x11d
        BL       DrawRectangle
        MOV      r0,#0
        LDR      r1,|L1.11916|
        STR      r0,[r1,#0]  ; screen_flag
        MOV      r0,#7
        LDR      r1,|L1.11932|
        STRB     r0,[r1,#0]
|L1.11576|
        LDR      r0,|L1.11916|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.11642|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.11920|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.11644|
        MOV      r0,#5
        LDR      r1,|L1.11924|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.11892|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.11916|
        STR      r0,[r1,#0]  ; screen_flag
|L1.11642|
        B        |L1.11986|
|L1.11644|
        LDR      r0,|L1.11920|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.11690|
        MOV      r0,#8
        LDR      r1,|L1.11924|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.11892|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.11916|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.11986|
|L1.11690|
        LDR      r0,|L1.11920|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.11736|
        MOV      r0,#2
        LDR      r1,|L1.11924|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.11892|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.11916|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.11986|
|L1.11736|
        LDR      r0,|L1.11920|
        LDR      r1,[r0,#0x18]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x1c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.11780|
        MOV      r0,#1
        LDR      r1,|L1.11980|
        STRH     r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.11916|
        STR      r0,[r1,#0]  ; screen_flag
        MOV      r0,#5
        LDR      r1,|L1.11932|
        B        |L1.11984|
|L1.11780|
        B        |L1.11986|
        DCW      0x0000
|L1.11784|
        DCB      "Ganancia del rojo",0
        DCB      0
        DCB      0
|L1.11804|
        DCD      OV7670R_gain
|L1.11808|
        DCB      "Ganancia del verde",0
        DCB      0
|L1.11828|
        DCD      OV7670G_gain
|L1.11832|
        DCB      "Ganancia del azul",0
        DCB      0
        DCB      0
|L1.11852|
        DCD      OV7670B_gain
|L1.11856|
        DCB      "FPS deseadas",0
        DCB      0
        DCB      0
        DCB      0
|L1.11872|
        DCD      OV7670fps
|L1.11876|
        DCD      num_botton_menu
|L1.11880|
        DCD      num_bars_menu
|L1.11884|
        DCD      type_bar
|L1.11888|
        DCD      ||.text||+0x950
|L1.11892|
        DCD      draw_flag
|L1.11896|
        DCD      delay_only
|L1.11900|
        DCD      0x0007a120
|L1.11904|
        DCD      Ptr
|L1.11908|
        DCD      matrix
|L1.11912|
        DCD      display
|L1.11916|
        DCD      screen_flag
|L1.11920|
        DCD      menu_rect
|L1.11924|
        DCD      state
|L1.11928|
        DCD      state_in_process
|L1.11932|
        DCD      read_type
|L1.11936|
        DCD      Vd_OV7670
|L1.11940|
        DCD      Vx_OV7670
|L1.11944|
        DCB      "Umbral",0
        DCB      0
|L1.11952|
        DCD      color_detect
|L1.11956|
        DCD      umbral
|L1.11960|
        DCD      Calibration_vars
|L1.11964|
        DCD      ||.text||+0x17dc
|L1.11968|
        DCB      "Captura",0
|L1.11976|
        DCD      pass
|L1.11980|
        DCD      Capt_flag
|L1.11984|
        STRB     r0,[r1,#0]
|L1.11986|
        MOV      r0,#0
        LDR      r1,|L1.13008|
        STR      r0,[r1,#0]  ; j
        B        |L1.12178|
|L1.11996|
        LDR      r0,|L1.13012|
        LDRB     r0,[r0,#0]  ; num_botton_menu
        LDR      r1,|L1.13008|
        LDR      r1,[r1,#0]  ; j
        ADD      r0,r0,r1
        LDR      r1,|L1.13016|
        STR      r0,[r1,#0]  ; nb
        LDR      r0,|L1.13020|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.12160|
        MOV      r0,#1
        LDR      r1,|L1.13024|
        STR      r0,[r1,#0]  ; state_in_process
        LDR      r0,|L1.13028|
        LDR      r0,[r0,#0]  ; type_bar
        LDR      r1,|L1.13008|
        LDR      r1,[r1,#0]  ; j
        LSR      r0,r0,r1
        AND      r3,r0,#1
        LDR      r0,|L1.13020|
        LDR      r1,|L1.13016|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r2,r0
        STR      r0,[sp,#4]
        LDR      r0,|L1.13008|
        LDR      r0,[r0,#0]  ; j
        UXTH     r0,r0
        BL       Get_CalibrationValue
        LDR      r0,|L1.13028|
        LDR      r0,[r0,#0]  ; type_bar
        LDR      r1,|L1.13008|
        LDR      r1,[r1,#0]  ; j
        LSRS     r0,r0,r1
        AND      r3,r0,#1
        LDR      r0,|L1.13020|
        LDR      r1,|L1.13016|
        LDR      r1,[r1,#0]  ; nb
        ADD      r0,r0,r1,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        MOV      r2,r0
        STR      r0,[sp,#4]
        LDR      r0,|L1.13008|
        LDR      r0,[r0,#0]  ; j
        UXTH     r0,r0
        BL       UpdateBar
        MOV      r0,#0
        LDR      r1,|L1.13032|
        STR      r0,[r1,#0]  ; screen_flag
        LDR      r1,|L1.13036|
        LDRH     r0,[r1,#0]  ; Calibration_vars
        ASR      r1,r0,#31
        ADD      r1,r0,r1,LSR #29
        UBFX     r1,r1,#3,#8
        B        |L1.12162|
|L1.12160|
        B        |L1.12166|
|L1.12162|
        LDR      r2,|L1.13040|
        STRB     r1,[r2,#0]
|L1.12166|
        LDR      r0,|L1.13008|
        LDR      r0,[r0,#0]  ; j
        ADD      r0,r0,#1
        LDR      r1,|L1.13008|
        STR      r0,[r1,#0]  ; j
|L1.12178|
        LDR      r0,|L1.13008|
        LDR      r0,[r0,#0]  ; j
        LDR      r1,|L1.13044|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        CMP      r0,r1
        BLT      |L1.11996|
        MOV      r0,#0
        LDR      r1,|L1.13024|
        STR      r0,[r1,#0]  ; state_in_process
        NOP      
        B        |L1.11514|
        ENDP

Manual_vs_Auto PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.13048|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.12440|
        LDR      r1,|L1.13024|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#5
        LDR      r1,|L1.13052|
        STRB     r0,[r1,#0]
        MOV      r0,#0x50
        LDR      r1,|L1.13056|
        STRH     r0,[r1,#0]
        MOV      r0,#0x28
        LDR      r1,|L1.13060|
        STRH     r0,[r1,#0]
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,#0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0
        LDR      r1,|L1.13012|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.13044|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.13028|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r3,#4
        MOV      r2,r0
        MOV      r1,#0xe1
        MOV      r0,#0x11
        BL       DrawArrow
        MOVS     r3,#0
        LDR      r2,|L1.13064|
        MOVS     r1,#0xd7
        MOVS     r0,#0x30
        BL       TextButton
        MOVS     r3,#0
        LDR      r2,|L1.13064|
        ADDS     r2,r2,#4
        MOVS     r1,#0xd7
        MOVS     r0,#0x5f
        BL       TextButton
        MOVS     r3,#0
        LDR      r2,|L1.13064|
        ADDS     r2,r2,#8
        MOVS     r1,#0xd7
        MOVS     r0,#0x8f
        BL       TextButton
        MOVS     r3,#0
        LDR      r2,|L1.13064|
        ADDS     r2,r2,#0xc
        MOVS     r1,#0xd7
        MOVS     r0,#0xbe
        BL       TextButton
        MOVS     r3,#0
        LDR      r2,|L1.13068|
        MOVS     r1,#0xd7
        MOV      r0,#0x102
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.13072|
        MOVS     r1,#0x4b
        MOVS     r0,#0xf5
        BL       TextButton
        MOVS     r3,#0
        ADR      r2,|L1.13080|
        MOVS     r1,#0x7d
        MOVS     r0,#0xf5
        BL       TextButton
        MOV      r0,#0
        LDR      r1,|L1.13048|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.13088|
        STR      r0,[r1,#0]  ; pass
        MOV      r0,#0
        LDR      r1,|L1.13024|
        STR      r0,[r1,#0]  ; state_in_process
        MOV      r0,#1
        LDR      r1,|L1.13092|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.13096|
        BL       delay_us
        NOP      
|L1.12432|
        LDR      r0,|L1.13092|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.12432|
|L1.12440|
        BL       Read_Ads7846
        LDR      r1,|L1.13100|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.12476|
        LDR      r2,|L1.13104|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.13108|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.13032|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.12478|
|L1.12476|
        POP      {r2-r4,pc}
|L1.12478|
        LDR      r0,|L1.13032|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.12544|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.13020|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.12546|
        MOV      r0,#4
        LDR      r1,|L1.13112|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.13048|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.13032|
        STR      r0,[r1,#0]  ; screen_flag
|L1.12544|
        B        |L1.12936|
|L1.12546|
        LDR      r0,|L1.13020|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.12596|
        MOV      r0,#0xd
        LDR      r1,|L1.13112|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.13048|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.13032|
        STR      r0,[r1,#0]  ; screen_flag
        LDR      r1,|L1.13116|
        STR      r0,[r1,#0]  ; man_auto
        B        |L1.12936|
|L1.12596|
        LDR      r0,|L1.13020|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.12642|
        MOV      r0,#9
        LDR      r1,|L1.13112|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.13048|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.13032|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.12936|
|L1.12642|
        LDR      r0,|L1.13020|
        LDR      r1,[r0,#0x18]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x1c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.12696|
        MOV      r0,#0xd
        LDR      r1,|L1.13112|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.13048|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.13032|
        STR      r0,[r1,#0]  ; screen_flag
        MOV      r0,#1
        LDR      r1,|L1.13116|
        STR      r0,[r1,#0]  ; man_auto
        B        |L1.12936|
|L1.12696|
        LDR      r0,|L1.13020|
        LDR      r1,[r0,#0x20]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x24]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.12742|
        MOV      r0,#5
        LDR      r1,|L1.13112|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.13048|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.13032|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.12936|
|L1.12742|
        LDR      r0,|L1.13020|
        LDR      r1,[r0,#0x28]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x2c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.12788|
        MOV      r0,#2
        LDR      r1,|L1.13112|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.13048|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.13032|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.12936|
|L1.12788|
        LDR      r0,|L1.13020|
        LDR      r1,[r0,#0x30]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x34]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.12858|
        LDR      r0,|L1.13116|
        LDR      r0,[r0,#0]  ; man_auto
        CBNZ     r0,|L1.12824|
        MOV      r0,#6
        LDR      r1,|L1.13112|
        STR      r0,[r1,#0]  ; state
        B        |L1.12840|
|L1.12824|
        LDR      r0,|L1.13116|
        LDR      r0,[r0,#0]  ; man_auto
        CMP      r0,#1
        BNE      |L1.12840|
        MOV      r0,#7
        LDR      r1,|L1.13112|
        STR      r0,[r1,#0]  ; state
|L1.12840|
        MOV      r0,#1
        LDR      r1,|L1.13048|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.13032|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.12936|
|L1.12858|
        LDR      r0,|L1.13020|
        LDR      r1,[r0,#0x38]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x3c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.12936|
        LDR      r0,|L1.13116|
        LDR      r0,[r0,#0]  ; man_auto
        CBNZ     r0,|L1.12892|
        MOVS     r0,#1
        BL       OV7670_AWBmode
        B        |L1.12912|
|L1.12892|
        LDR      r0,|L1.13116|
        LDR      r0,[r0,#0]  ; man_auto
        CMP      r0,#1
        BNE      |L1.12912|
        MOVS     r3,#1
        MOVS     r2,#7
        MOVS     r1,#0x40
        MOVS     r0,#0
        BL       OV7670_BriConLum
|L1.12912|
        MOV      r0,#5
        LDR      r1,|L1.13112|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.13048|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.13032|
        STR      r0,[r1,#0]  ; screen_flag
|L1.12936|
        MOV      r0,#0
        LDR      r1,|L1.13032|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.12476|
        ENDP

Menu_Deteccion PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.13048|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.13212|
        MOV      r0,#0
        LDR      r1,|L1.13088|
        STR      r0,[r1,#0]  ; pass
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,r0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.13120|
        MOVS     r1,#0x11
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        B        |L1.13136|
        DCW      0x0000
|L1.13008|
        DCD      j
|L1.13012|
        DCD      num_botton_menu
|L1.13016|
        DCD      ||nb||
|L1.13020|
        DCD      menu_rect
|L1.13024|
        DCD      state_in_process
|L1.13028|
        DCD      type_bar
|L1.13032|
        DCD      screen_flag
|L1.13036|
        DCD      Calibration_vars
|L1.13040|
        DCD      umbral
|L1.13044|
        DCD      num_bars_menu
|L1.13048|
        DCD      draw_flag
|L1.13052|
        DCD      read_type
|L1.13056|
        DCD      Vd_OV7670
|L1.13060|
        DCD      Vx_OV7670
|L1.13064|
        DCD      ||.text||+0x1c1c
|L1.13068|
        DCD      ||.text||+0x950
|L1.13072|
        DCB      "Manual",0
        DCB      0
|L1.13080|
        DCB      "Auto",0
        DCB      0
        DCB      0
        DCB      0
|L1.13088|
        DCD      pass
|L1.13092|
        DCD      delay_only
|L1.13096|
        DCD      0x0007a120
|L1.13100|
        DCD      Ptr
|L1.13104|
        DCD      matrix
|L1.13108|
        DCD      display
|L1.13112|
        DCD      state
|L1.13116|
        DCD      man_auto
|L1.13120|
        DCB      "MENU DETECCION",0
        DCB      0
|L1.13136|
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.14144|
        MOVS     r1,#0x33
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.14172|
        MOVS     r1,#0x55
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0
        LDR      r1,|L1.14200|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.14204|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.14208|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r2,r0
        MOV      r1,#0x33
        MOV      r0,#0x14
        BL       DrawCross
        MOVS     r2,#0
        MOVS     r1,#0x55
        B        |L1.13214|
|L1.13212|
        B        |L1.13264|
|L1.13214|
        MOVS     r0,#0x14
        BL       DrawCross
        MOVS     r3,#0
        LDR      r2,|L1.14212|
        MOVS     r1,#0xd2
        MOVS     r0,#0xf0
        BL       TextButton
        MOV      r0,#0
        LDR      r1,|L1.14216|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.14220|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.14224|
        BL       delay_us
        NOP      
|L1.13256|
        LDR      r0,|L1.14220|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.13256|
|L1.13264|
        BL       Read_Ads7846
        LDR      r1,|L1.14228|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.13300|
        LDR      r2,|L1.14232|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.14236|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.14240|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.13302|
|L1.13300|
        POP      {r2-r4,pc}
|L1.13302|
        LDR      r0,|L1.14240|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.13460|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.14244|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.13370|
        MOV      r0,#0xf
        LDR      r1,|L1.14248|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.14216|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.14240|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.13460|
|L1.13370|
        LDR      r0,|L1.14244|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.13416|
        MOV      r0,#0xe
        LDR      r1,|L1.14248|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.14216|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.14240|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.13460|
|L1.13416|
        LDR      r0,|L1.14244|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.13460|
        MOV      r0,#2
        LDR      r1,|L1.14248|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.14216|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.14240|
        STR      r0,[r1,#0]  ; screen_flag
|L1.13460|
        MOV      r0,#0
        LDR      r1,|L1.14240|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.13300|
        ENDP

Deteccion_Seguimiento PROC
        PUSH     {r4,lr}
        LDR      r0,|L1.14216|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.13530|
        LDR      r1,|L1.14252|
        STRB     r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.14256|
        STRB     r0,[r1,#0]
        MOV      r0,#1
        LDR      r1,|L1.14260|
        STR      r0,[r1,#0]  ; pass
        LDR      r1,|L1.14220|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.14224|
        BL       delay_us
        NOP      
|L1.13514|
        LDR      r0,|L1.14220|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.13514|
        MOV      r0,#0
        LDR      r1,|L1.14216|
        STR      r0,[r1,#0]  ; draw_flag
|L1.13530|
        BL       Read_Ads7846
        LDR      r1,|L1.14228|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.13566|
        LDR      r2,|L1.14232|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.14236|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.14240|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.13568|
|L1.13566|
        POP      {r4,pc}
|L1.13568|
        LDR      r0,|L1.14240|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.13608|
        MOV      r0,#0xc
        LDR      r1,|L1.14248|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.14216|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.14240|
        STR      r0,[r1,#0]  ; screen_flag
        MOV      r0,#1
        LDR      r1,|L1.14256|
        STRB     r0,[r1,#0]
|L1.13608|
        MOV      r0,#0
        LDR      r1,|L1.14240|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.13566|
        ENDP

Deteccion_no_Seguimiento PROC
        PUSH     {r4,lr}
        LDR      r0,|L1.14216|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.13670|
        LDR      r1,|L1.14252|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.14256|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.14260|
        STR      r0,[r1,#0]  ; pass
        LDR      r1,|L1.14220|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.14224|
        BL       delay_us
        NOP      
|L1.13654|
        LDR      r0,|L1.14220|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.13654|
        MOV      r0,#0
        LDR      r1,|L1.14216|
        STR      r0,[r1,#0]  ; draw_flag
|L1.13670|
        BL       Read_Ads7846
        LDR      r1,|L1.14228|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.13706|
        LDR      r2,|L1.14232|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.14236|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.14240|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.13708|
|L1.13706|
        POP      {r4,pc}
|L1.13708|
        LDR      r0,|L1.14240|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.13740|
        MOV      r0,#0xc
        LDR      r1,|L1.14248|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.14216|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.14240|
        STR      r0,[r1,#0]  ; screen_flag
|L1.13740|
        MOV      r0,#0
        LDR      r1,|L1.14240|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.13706|
        ENDP

Menu_juegos PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.14216|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.13960|
        MOV      r0,#0
        LDR      r1,|L1.14260|
        STR      r0,[r1,#0]  ; pass
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,r0
        MOV      r0,r1
        BL       Window
        MOV      r0,#0x2595
        BL       LCD_Clear
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.14264|
        MOVS     r1,#0x11
        STR      r0,[sp,#0]
        MOVS     r0,#0xf
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.14272|
        MOVS     r1,#0x33
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.14280|
        MOVS     r1,#0x55
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.14296|
        MOVS     r1,#0x77
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       GUI_Text
        MOV      r0,#0
        LDR      r1,|L1.14200|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.14204|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.14208|
        STR      r0,[r1,#0]  ; type_bar
        MOV      r2,r0
        MOV      r1,#0x33
        MOV      r0,#0x14
        BL       DrawCross
        MOVS     r2,#0
        MOVS     r1,#0x55
        MOVS     r0,#0x14
        BL       DrawCross
        MOVS     r2,#0
        MOVS     r1,#0x77
        MOVS     r0,#0x14
        BL       DrawCross
        MOVS     r3,#0
        LDR      r2,|L1.14212|
        MOVS     r1,#0xd2
        MOVS     r0,#0xf0
        BL       TextButton
        MOV      r0,#0
        LDR      r1,|L1.14216|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.14220|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.14224|
        BL       delay_us
        NOP      
|L1.13952|
        LDR      r0,|L1.14220|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.13952|
|L1.13960|
        BL       Read_Ads7846
        LDR      r1,|L1.14228|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.13996|
        LDR      r2,|L1.14232|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.14236|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.14240|
        STR      r0,[r1,#0]  ; screen_flag
        B        |L1.13998|
|L1.13996|
        POP      {r2-r4,pc}
|L1.13998|
        LDR      r0,|L1.14240|
        LDR      r0,[r0,#0]  ; screen_flag
        CMP      r0,#1
        BNE      |L1.14096|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.14244|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.14098|
        MOV      r0,#0x18
        LDR      r1,|L1.14248|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#0
        LDR      r1,|L1.14240|
        STR      r0,[r1,#0]  ; screen_flag
        MOV      r0,#1
        LDR      r1,|L1.14216|
        STR      r0,[r1,#0]  ; draw_flag
        LDR      r1,|L1.14312|
        STRB     r0,[r1,#0]
        MOV      r0,#3
        LDR      r1,|L1.14252|
        STRB     r0,[r1,#0]
        MOV      r0,#1
        LDR      r1,|L1.14260|
        STR      r0,[r1,#0]  ; pass
        LDR      r1,|L1.14316|
        STRB     r0,[r1,#0]
        MOV      r0,#0x64
        BL       periodic_signal2_ms
|L1.14096|
        B        |L1.14484|
|L1.14098|
        LDR      r0,|L1.14244|
        LDR      r1,[r0,#8]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0xc]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.14140|
        MOV      r0,#0x18
        LDR      r1,|L1.14248|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.14216|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        B        |L1.14320|
|L1.14140|
        B        |L1.14366|
        DCW      0x0000
|L1.14144|
        DCB      "Deteccion sin seguimiento",0
        DCB      0
        DCB      0
|L1.14172|
        DCB      "Deteccion con seguimiento",0
        DCB      0
        DCB      0
|L1.14200|
        DCD      num_botton_menu
|L1.14204|
        DCD      num_bars_menu
|L1.14208|
        DCD      type_bar
|L1.14212|
        DCD      ||.text||+0x4b8
|L1.14216|
        DCD      draw_flag
|L1.14220|
        DCD      delay_only
|L1.14224|
        DCD      0x0007a120
|L1.14228|
        DCD      Ptr
|L1.14232|
        DCD      matrix
|L1.14236|
        DCD      display
|L1.14240|
        DCD      screen_flag
|L1.14244|
        DCD      menu_rect
|L1.14248|
        DCD      state
|L1.14252|
        DCD      read_type
|L1.14256|
        DCD      modo
|L1.14260|
        DCD      pass
|L1.14264|
        DCB      "JUEGOS",0
        DCB      0
|L1.14272|
        DCB      "Pong",0
        DCB      0
        DCB      0
        DCB      0
|L1.14280|
        DCB      "Space Invaders",0
        DCB      0
|L1.14296|
        DCB      "Caramel CRUSH",0
        DCB      0
        DCB      0
|L1.14312|
        DCD      newGame
|L1.14316|
        DCD      game
|L1.14320|
        LDR      r1,|L1.14664|
        STR      r0,[r1,#0]  ; screen_flag
        MOV      r0,#1
        LDR      r1,|L1.14668|
        STRB     r0,[r1,#0]
        MOV      r0,#3
        LDR      r1,|L1.14672|
        STRB     r0,[r1,#0]
        MOV      r0,#1
        LDR      r1,|L1.14676|
        STR      r0,[r1,#0]  ; pass
        MOV      r0,#2
        LDR      r1,|L1.14680|
        STRB     r0,[r1,#0]
        MOV      r0,#0x64
        BL       periodic_signal2_ms
        B        |L1.14484|
|L1.14366|
        LDR      r0,|L1.14684|
        LDR      r1,[r0,#0x10]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x14]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.14444|
        MOV      r0,#0x18
        LDR      r1,|L1.14688|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.14692|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.14664|
        STR      r0,[r1,#0]  ; screen_flag
        MOV      r0,#1
        LDR      r1,|L1.14668|
        STRB     r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.14676|
        STR      r0,[r1,#0]  ; pass
        MOV      r0,#3
        LDR      r1,|L1.14680|
        STRB     r0,[r1,#0]
        MOV      r0,#0x64
        BL       periodic_signal2_ms
        B        |L1.14484|
|L1.14444|
        LDR      r0,|L1.14684|
        LDR      r1,[r0,#0x18]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#0x1c]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.14484|
        MOV      r0,#1
        LDR      r1,|L1.14688|
        STR      r0,[r1,#0]  ; state
        LDR      r1,|L1.14692|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.14664|
        STR      r0,[r1,#0]  ; screen_flag
|L1.14484|
        MOV      r0,#0
        LDR      r1,|L1.14664|
        STR      r0,[r1,#0]  ; screen_flag
        NOP      
        B        |L1.13996|
        ENDP

Jugando PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.14692|
        LDR      r0,[r0,#0]  ; draw_flag
        CMP      r0,#1
        BNE      |L1.14560|
        MOV      r0,#0
        LDR      r1,|L1.14684|
        STRH     r0,[r1,#0]
        STRH     r0,[r1,#2]
        MOV      r0,#0x28
        STRH     r0,[r1,#4]
        MOV      r0,#0x32
        STRH     r0,[r1,#6]
        MOV      r0,#0
        LDR      r1,|L1.14692|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#1
        LDR      r1,|L1.14696|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.14700|
        BL       delay_us
        NOP      
|L1.14552|
        LDR      r0,|L1.14696|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.14552|
|L1.14560|
        MOV      r0,#0
        LDR      r1,|L1.14664|
        STR      r0,[r1,#0]  ; screen_flag
        BL       Read_Ads7846
        LDR      r1,|L1.14704|
        STR      r0,[r1,#0]  ; Ptr
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Ptr
        CBZ      r0,|L1.14662|
        LDR      r2,|L1.14708|
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; Ptr
        LDR      r0,|L1.14712|
        BL       getDisplayPoint
        MOV      r0,#1
        LDR      r1,|L1.14664|
        STR      r0,[r1,#0]  ; screen_flag
        LDR      r0,|L1.14684|
        LDR      r1,[r0,#0]  ; menu_rect
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; menu_rect
        MOV      r1,r0
        STR      r0,[sp,#4]
        LDR      r0,[sp,#0]
        BL       DetectRectangle
        CBZ      r0,|L1.14662|
        MOV      r0,#0
        LDR      r1,|L1.14676|
        STR      r0,[r1,#0]  ; pass
        LDR      r1,|L1.14680|
        STRB     r0,[r1,#0]
        BL       periodic_signal2_ms
        MOV      r0,#0x17
        LDR      r1,|L1.14688|
        STR      r0,[r1,#0]  ; state
        MOV      r0,#1
        LDR      r1,|L1.14692|
        STR      r0,[r1,#0]  ; draw_flag
        MOV      r0,#0
        LDR      r1,|L1.14664|
        STR      r0,[r1,#0]  ; screen_flag
|L1.14662|
        POP      {r2-r4,pc}
        ENDP

|L1.14664|
        DCD      screen_flag
|L1.14668|
        DCD      newGame
|L1.14672|
        DCD      read_type
|L1.14676|
        DCD      pass
|L1.14680|
        DCD      game
|L1.14684|
        DCD      menu_rect
|L1.14688|
        DCD      state
|L1.14692|
        DCD      draw_flag
|L1.14696|
        DCD      delay_only
|L1.14700|
        DCD      0x0007a120
|L1.14704|
        DCD      Ptr
|L1.14708|
        DCD      matrix
|L1.14712|
        DCD      display

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=1

menu_rect
        %        160

        AREA ||.data||, DATA, ALIGN=2

j
        DCD      0x00000000
||nb||
        DCD      0x00000000
state_in_process
        DCD      0x00000000
num_botton_menu
        DCB      0x00
num_bars_menu
        DCB      0x00,0x00,0x00
type_bar
        DCD      0x00000000
draw_flag
        DCD      0x00000000
screen_flag
        DCD      0x00000000
state
        DCD      0x00000000
man_auto
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "State_Machine\\States.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___8_States_c_j____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_States_c_j____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___8_States_c_j____REVSH|
#line 128
|__asm___8_States_c_j____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT Menu_Principal [CODE]
        EXPORT Menu_Camara [CODE]
        EXPORT Camera_Image [CODE]
        EXPORT Menu_Motores [CODE]
        EXPORT Giro_Manual_Camara [CODE]
        EXPORT Config_Mov_Motores [CODE]
        EXPORT Elegir_modo_control [CODE]
        EXPORT Config_var_control [CODE]
        EXPORT Config_control_hor [CODE]
        EXPORT Config_control_ver [CODE]
        EXPORT Config_1 [CODE]
        EXPORT Config_2 [CODE]
        EXPORT Light_Configuration [CODE]
        EXPORT Choose_FPS [CODE]
        EXPORT RGB_Configuration [CODE]
        EXPORT Show_IP [CODE]
        EXPORT Show_Actual_Config [CODE]
        EXPORT Config_Umbral_Captura [CODE]
        EXPORT Manual_vs_Auto [CODE]
        EXPORT Menu_Deteccion [CODE]
        EXPORT Deteccion_Seguimiento [CODE]
        EXPORT Deteccion_no_Seguimiento [CODE]
        EXPORT Menu_juegos [CODE]
        EXPORT Jugando [CODE]
        EXPORT menu_rect [DATA,SIZE=160]
        EXPORT j [DATA,SIZE=4]
        EXPORT ||nb|| [DATA,SIZE=4]
        EXPORT state_in_process [DATA,SIZE=4]
        EXPORT num_botton_menu [DATA,SIZE=1]
        EXPORT num_bars_menu [DATA,SIZE=1]
        EXPORT type_bar [DATA,SIZE=4]
        EXPORT draw_flag [DATA,SIZE=4]
        EXPORT screen_flag [DATA,SIZE=4]
        EXPORT state [DATA,SIZE=4]
        EXPORT man_auto [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT Window [CODE]
        IMPORT LCD_Clear [CODE]
        IMPORT GUI_Text [CODE]
        IMPORT DrawCross [CODE]
        IMPORT delay_us [CODE]
        IMPORT Read_Ads7846 [CODE]
        IMPORT getDisplayPoint [CODE]
        IMPORT DetectRectangle [CODE]
        IMPORT pass [DATA]
        IMPORT delay_only [DATA]
        IMPORT Ptr [DATA]
        IMPORT matrix [DATA]
        IMPORT display [DATA]
        IMPORT TextButton [CODE]
        IMPORT read_type [DATA]
        IMPORT __aeabi_fmul [CODE]
        IMPORT __aeabi_f2uiz [CODE]
        IMPORT DrawCalibrationBar [CODE]
        IMPORT Get_CalibrationValue [CODE]
        IMPORT UpdateBar [CODE]
        IMPORT __aeabi_ui2f [CODE]
        IMPORT __aeabi_fdiv [CODE]
        IMPORT Vd_OV7670 [DATA]
        IMPORT Vx_OV7670 [DATA]
        IMPORT umbral_x [DATA]
        IMPORT Calibration_vars [DATA]
        IMPORT umbral_y [DATA]
        IMPORT __aeabi_f2d [CODE]
        IMPORT __aeabi_dadd [CODE]
        IMPORT __aeabi_d2f [CODE]
        IMPORT __aeabi_cfcmpeq [CODE]
        IMPORT __aeabi_dsub [CODE]
        IMPORT cons_pro_x [DATA]
        IMPORT cons_dif_x [DATA]
        IMPORT cons_pro_y [DATA]
        IMPORT cons_dif_y [DATA]
        IMPORT DrawArrow [CODE]
        IMPORT reset_OV7670 [CODE]
        IMPORT getOV7670_BriConLum [CODE]
        IMPORT OV7670_BriConLum [CODE]
        IMPORT OV7670bright [DATA]
        IMPORT OV7670contrast [DATA]
        IMPORT OV7670luminis [DATA]
        IMPORT OV7670_FPS [CODE]
        IMPORT conversor_IaS [CODE]
        IMPORT OV7670fps [DATA]
        IMPORT OV7670_AWBmode [CODE]
        IMPORT getOV7670_RGBgain [CODE]
        IMPORT OV7670_RGBgain [CODE]
        IMPORT OV7670R_gain [DATA]
        IMPORT OV7670G_gain [DATA]
        IMPORT OV7670B_gain [DATA]
        IMPORT upd_display [CODE]
        IMPORT LCDupdate [DATA]
        IMPORT umbral [DATA]
        IMPORT LCD_DrawLine [CODE]
        IMPORT DrawRectangle [CODE]
        IMPORT GetColor [CODE]
        IMPORT color_detect [DATA]
        IMPORT Capt_flag [DATA]
        IMPORT modo [DATA]
        IMPORT periodic_signal2_ms [CODE]
        IMPORT newGame [DATA]
        IMPORT game [DATA]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
