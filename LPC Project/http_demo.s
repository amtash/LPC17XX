; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--debug -c --asm -ohttp_demo.o --depend=http_demo.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=http_demo.crf WEBSERVER\Configuration_files\HTTP_demo.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

        REQUIRE _printf_percent
        REQUIRE _printf_d
        REQUIRE _printf_int_dec
init_TCP PROC
        PUSH     {r4,lr}
        BL       init_TcpNet
        LDR      r0,|L1.612|
        LDR      r0,[r0,#0]  ; SystemCoreClock
        MOV      r1,#0xa
        UDIV     r0,r0,r1
        SUB      r0,r0,#1
        MOV      r1,#0xe000e000
        STR      r0,[r1,#0x14]
        MOV      r0,#5
        STR      r0,[r1,#0x10]
        MOV      r0,#1
        LDR      r1,|L1.616|
        STR      r0,[r1,#0]  ; LEDrun
        MOV      r0,#0x32
        LDR      r1,|L1.620|
        STR      r0,[r1,#0]  ; dhcp_tout
        POP      {r4,pc}
        ENDP

timer_poll PROC
        PUSH     {r4,lr}
        MOV      r0,#0xe000e000
        LDR      r0,[r0,#0x10]
        TST      r0,#0x10000
        BEQ      |L1.78|
        BL       timer_tick
        MOV      r0,#1
        LDR      r1,|L1.624|
        STR      r0,[r1,#0]  ; tick
|L1.78|
        POP      {r4,pc}
        ENDP

fputc PROC
        CMP      r0,#0xa
        BNE      |L1.104|
        NOP      
|L1.86|
        LDR      r2,|L1.628|
        LDRB     r2,[r2,#0x14]
        TST      r2,#0x20
        BEQ      |L1.86|
        MOV      r2,#0xd
        LDR      r3,|L1.628|
        STRB     r2,[r3,#0]
|L1.104|
        NOP      
|L1.106|
        LDR      r2,|L1.628|
        LDRB     r2,[r2,#0x14]
        TST      r2,#0x20
        BEQ      |L1.106|
        LDR      r3,|L1.628|
        STRB     r0,[r3,#0]
        BX       lr
        ENDP

upd_display PROC
        PUSH     {r3,lr}
        LDR      r0,|L1.632|
        LDR      r0,[r0,#0]  ; LCDupdate
        CMP      r0,#1
        BNE      |L1.234|
        MOV      r0,#0x2595
        MOVS     r3,#0x78
        MOV      r2,#0x104
        MOVS     r1,#0x50
        STR      r0,[sp,#0]
        MOVS     r0,#0x28
        BL       DrawRectangle
        MOV      r0,#0x2595
        MOVS     r3,#0
        LDR      r2,|L1.636|
        MOVS     r1,#0x90
        STR      r0,[sp,#0]
        MOVS     r0,#0x3c
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        LDR      r2,|L1.636|
        ADDS     r2,r2,#0x11
        MOVS     r1,#0xa0
        STR      r0,[sp,#0]
        MOVS     r0,#0x34
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.640|
        MOVS     r1,#0x50
        STR      r0,[sp,#0]
        MOVS     r0,#0x3c
        BL       GUI_Text
        MOV      r0,#0x2595
        MOVS     r3,#0
        ADR      r2,|L1.652|
        MOVS     r1,#0x62
        STR      r0,[sp,#0]
        MOVS     r0,#0x3c
        BL       GUI_Text
        MOV      r0,#0
        LDR      r1,|L1.632|
        STR      r0,[r1,#0]  ; LCDupdate
|L1.234|
        POP      {r3,pc}
        ENDP

dhcp_check PROC
        PUSH     {r2-r4,lr}
        LDR      r0,|L1.624|
        LDR      r0,[r0,#0]  ; tick
        CBZ      r0,|L1.250|
        LDR      r0,|L1.620|
        LDR      r0,[r0,#0]  ; dhcp_tout
        CBNZ     r0,|L1.252|
|L1.250|
        POP      {r2-r4,pc}
|L1.252|
        MOVS     r2,#4
        MOVS     r1,#0
        LDR      r0,|L1.668|
        BL       mem_test
        CBNZ     r0,|L1.328|
        LDR      r0,|L1.620|
        LDR      r0,[r0,#0]  ; dhcp_tout
        TST      r0,#0x80000000
        BNE      |L1.328|
        MOV      r0,#0
        LDR      r1,|L1.620|
        STR      r0,[r1,#0]  ; dhcp_tout
        ADR      r1,|L1.672|
        LDR      r0,|L1.636|
        BL       __2sprintf
        LDR      r0,|L1.668|
        LDRB     r0,[r0,#3]  ; localm
        LDR      r1,|L1.668|
        LDRB     r1,[r1,#2]  ; localm
        STRD     r1,r0,[sp,#0]
        LDR      r0,|L1.668|
        LDRB     r3,[r0,#1]  ; localm
        LDRB     r2,[r0,#0]  ; localm
        ADR      r1,|L1.688|
        LDR      r0,|L1.636|
        ADDS     r0,r0,#0x11
        BL       __2sprintf
        MOV      r0,#1
        LDR      r1,|L1.632|
        STR      r0,[r1,#0]  ; LCDupdate
        B        |L1.250|
|L1.328|
        LDR      r0,|L1.620|
        LDR      r0,[r0,#0]  ; dhcp_tout
        SUBS     r0,r0,#1
        LDR      r1,|L1.620|
        STR      r0,[r1,#0]  ; dhcp_tout
        BNE      |L1.370|
        BL       dhcp_disable
        ADR      r1,|L1.704|
        LDR      r0,|L1.636|
        ADDS     r0,r0,#0x11
        BL       __2sprintf
        MOV      r0,#1
        LDR      r1,|L1.632|
        STR      r0,[r1,#0]  ; LCDupdate
        LDR      r0,|L1.720|
        LDR      r1,|L1.620|
        STR      r0,[r1,#0]  ; dhcp_tout
        B        |L1.250|
|L1.370|
        LDR      r0,|L1.620|
        LDR      r0,[r0,#0]  ; dhcp_tout
        CMP      r0,#0x80000000
        BNE      |L1.432|
        MOV      r0,#0
        LDR      r1,|L1.620|
        STR      r0,[r1,#0]  ; dhcp_tout
        ADR      r1,|L1.672|
        LDR      r0,|L1.636|
        BL       __2sprintf
        LDR      r0,|L1.668|
        LDRB     r0,[r0,#3]  ; localm
        LDR      r1,|L1.668|
        LDRB     r1,[r1,#2]  ; localm
        STRD     r1,r0,[sp,#0]
        LDR      r0,|L1.668|
        LDRB     r3,[r0,#1]  ; localm
        LDRB     r2,[r0,#0]  ; localm
        ADR      r1,|L1.688|
        LDR      r0,|L1.636|
        ADDS     r0,r0,#0x11
        BL       __2sprintf
        MOV      r0,#1
        LDR      r1,|L1.632|
        STR      r0,[r1,#0]  ; LCDupdate
|L1.432|
        NOP      
        B        |L1.250|
        ENDP

LED_out PROC
        PUSH     {r2-r4,lr}
        MOV      r2,r0
        ADR      r4,|L1.724|
        LDM      r4,{r3,r4}
        STRD     r3,r4,[sp,#0]
        MOV      r0,#0
        B        |L1.508|
|L1.454|
        LDRB     r4,[sp,r0]
        MOV      r3,#1
        LSL      r1,r3,r4
        LSL      r3,r3,r0
        TST      r3,r2
        BEQ      |L1.490|
        CMP      r0,#3
        BCS      |L1.484|
        LDR      r3,|L1.732|
        STR      r1,[r3,#0x38]
        B        |L1.504|
|L1.484|
        LDR      r3,|L1.732|
        STR      r1,[r3,#0x58]
        B        |L1.504|
|L1.490|
        CMP      r0,#3
        BCS      |L1.500|
        LDR      r3,|L1.732|
        STR      r1,[r3,#0x3c]
        B        |L1.504|
|L1.500|
        LDR      r3,|L1.732|
        STR      r1,[r3,#0x5c]
|L1.504|
        ADD      r0,r0,#1
|L1.508|
        CMP      r0,#8
        BCC      |L1.454|
        POP      {r2-r4,pc}
        ENDP

blink_led PROC
        PUSH     {r0-r4,lr}
        ADR      r3,|L1.736|
        LDM      r3,{r0-r3}
        STM      sp,{r0-r3}
        LDR      r0,|L1.624|
        LDR      r0,[r0,#0]  ; tick
        CMP      r0,#1
        BNE      |L1.592|
        MOV      r0,#0
        LDR      r1,|L1.624|
        STR      r0,[r1,#0]  ; tick
        LDR      r0,|L1.616|
        LDR      r0,[r0,#0]  ; LEDrun
        CMP      r0,#1
        BNE      |L1.580|
        LDR      r2,|L1.752|
        LDR      r2,[r2,#0]  ; cnt
        LDRB     r0,[sp,r2]
        BL       LED_out
        LDR      r0,|L1.752|
        LDR      r0,[r0,#0]  ; cnt
        ADDS     r0,r0,#1
        LDR      r1,|L1.752|
        STR      r0,[r1,#0]  ; cnt
        CMP      r0,#0x10
        BCC      |L1.580|
        MOV      r0,#0
        STR      r0,[r1,#0]  ; cnt
|L1.580|
        LDR      r0,|L1.632|
        LDR      r0,[r0,#0]  ; LCDupdate
        CMP      r0,#1
        BNE      |L1.592|
        BL       upd_display
|L1.592|
        POP      {r0-r4,pc}
        ENDP

check_webserver PROC
        PUSH     {r4,lr}
        BL       timer_poll
        BL       main_TcpNet
        BL       dhcp_check
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L1.612|
        DCD      SystemCoreClock
|L1.616|
        DCD      LEDrun
|L1.620|
        DCD      dhcp_tout
|L1.624|
        DCD      tick
|L1.628|
        DCD      0x4000c000
|L1.632|
        DCD      LCDupdate
|L1.636|
        DCD      lcd_text
|L1.640|
        DCB      "User: admin",0
|L1.652|
        DCB      "Password: admin",0
|L1.668|
        DCD      localm
|L1.672|
        DCB      " Direccion IP:",0
        DCB      0
|L1.688|
        DCB      " %d.%d.%d.%d",0
        DCB      0
        DCB      0
        DCB      0
|L1.704|
        DCB      " Trying DHCP ",0
        DCB      0
        DCB      0
|L1.720|
        DCD      0x8000001e
|L1.724|
        DCB      28,29,31,2,3,4,5,6
|L1.732|
        DCD      0x2009c000
|L1.736|
        DCB      "H",136,132,"DB""!",17,18,"\n\f",20,24,"(0P"
|L1.752|
        DCD      ||cnt||

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

lcd_text
        DCB      0x20,0x00,0x00,0x00
        %        12
        DCB      0x00,0x57,0x61,0x69
        DCB      0x74,0x69,0x6e,0x67
        DCB      0x20,0x66,0x6f,0x72
        DCB      0x20,0x44,0x48,0x43
        DCB      0x50,0x00,0x00,0x00
||cnt||
        DCD      0x00000000
LEDrun
        DCD      0x00000000
LCDupdate
        DCD      0x00000000
tick
        DCD      0x00000000
dhcp_tout
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "WEBSERVER\\Configuration_files\\HTTP_demo.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___11_HTTP_demo_c_lcd_text____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_HTTP_demo_c_lcd_text____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___11_HTTP_demo_c_lcd_text____REVSH|
#line 128
|__asm___11_HTTP_demo_c_lcd_text____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT init_TCP [CODE]
        EXPORT timer_poll [CODE]
        EXPORT fputc [CODE]
        EXPORT upd_display [CODE]
        EXPORT dhcp_check [CODE]
        EXPORT LED_out [CODE]
        EXPORT blink_led [CODE]
        EXPORT check_webserver [CODE]
        EXPORT lcd_text [DATA,SIZE=34]
        EXPORT LEDrun [DATA,SIZE=4]
        EXPORT LCDupdate [DATA,SIZE=4]
        EXPORT tick [DATA,SIZE=4]
        EXPORT dhcp_tout [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT init_TcpNet [CODE]
        IMPORT SystemCoreClock [DATA]
        IMPORT timer_tick [CODE]
        IMPORT DrawRectangle [CODE]
        IMPORT GUI_Text [CODE]
        IMPORT mem_test [CODE]
        IMPORT __2sprintf [CODE]
        IMPORT _printf_percent [CODE]
        IMPORT _printf_d [CODE]
        IMPORT _printf_int_dec [CODE]
        IMPORT dhcp_disable [CODE]
        IMPORT localm [DATA]
        IMPORT main_TcpNet [CODE]

        KEEP ||cnt||

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
