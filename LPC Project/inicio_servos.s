; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--debug -c --asm -oinicio_servos.o --depend=inicio_servos.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=inicio_servos.crf SERVOS\Inicio_servos.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=1

Init_Servos PROC
        PUSH     {r4,lr}
        BL       Init_PWM
        BL       Init_ADC
        POP      {r4,pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

ADC_value_Alt
        DCFS     0x00000000 ; 0
ADC_value_Azim
        DCFS     0x00000000 ; 0
x
        DCFS     0x00000000 ; 0
y
        DCFS     0x00000000 ; 0
x_ant
        DCFS     0x00000000 ; 0
y_ant
        DCFS     0x00000000 ; 0
umbral_x
        DCFS     0x3f23d70a ; 0.63999998569488525
umbral_y
        DCFS     0x3ee66666 ; 0.44999998807907104
modo
        DCB      0x01,0x00,0x00,0x00
ADC_x
        DCFS     0x3f000000 ; 0.5
ADC_y
        DCFS     0x3f000000 ; 0.5
cons_pro_x
        DCFS     0x40000000 ; 2
cons_pro_y
        DCFS     0x40000000 ; 2
cons_pro_x_cam
        DCFS     0x3f333333 ; 0.69999998807907104
cons_pro_y_cam
        DCFS     0x3f000000 ; 0.5
cons_dif_x
        DCFS     0x3f19999a ; 0.60000002384185791
cons_dif_y
        DCFS     0x3f19999a ; 0.60000002384185791
cons_int_x
        DCFS     0x3dcccccd ; 0.10000000149011612
cons_int_y
        DCFS     0x3dcccccd ; 0.10000000149011612
resul_1
        DCD      0x00000000
resul_2
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "SERVOS\\Inicio_servos.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_Inicio_servos_c_fe7a1121____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_Inicio_servos_c_fe7a1121____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___15_Inicio_servos_c_fe7a1121____REVSH|
#line 128
|__asm___15_Inicio_servos_c_fe7a1121____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT Init_Servos [CODE]
        EXPORT ADC_value_Alt [DATA,SIZE=4]
        EXPORT ADC_value_Azim [DATA,SIZE=4]
        EXPORT x [DATA,SIZE=4]
        EXPORT y [DATA,SIZE=4]
        EXPORT x_ant [DATA,SIZE=4]
        EXPORT y_ant [DATA,SIZE=4]
        EXPORT umbral_x [DATA,SIZE=4]
        EXPORT umbral_y [DATA,SIZE=4]
        EXPORT modo [DATA,SIZE=1]
        EXPORT ADC_x [DATA,SIZE=4]
        EXPORT ADC_y [DATA,SIZE=4]
        EXPORT cons_pro_x [DATA,SIZE=4]
        EXPORT cons_pro_y [DATA,SIZE=4]
        EXPORT cons_pro_x_cam [DATA,SIZE=4]
        EXPORT cons_pro_y_cam [DATA,SIZE=4]
        EXPORT cons_dif_x [DATA,SIZE=4]
        EXPORT cons_dif_y [DATA,SIZE=4]
        EXPORT cons_int_x [DATA,SIZE=4]
        EXPORT cons_int_y [DATA,SIZE=4]
        EXPORT resul_1 [DATA,SIZE=4]
        EXPORT resul_2 [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT Init_PWM [CODE]
        IMPORT Init_ADC [CODE]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
