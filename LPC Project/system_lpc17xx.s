; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--debug -c --asm -osystem_lpc17xx.o --depend=system_lpc17xx.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=system_lpc17xx.crf system_LPC17xx.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

SystemCoreClockUpdate PROC
        PUSH     {r4-r10,lr}
        LDR      r0,|L1.728|
        LDR      r0,[r0,#0]
        UBFX     r0,r0,#24,#2
        CMP      r0,#3
        BNE      |L1.266|
        LDR      r0,|L1.728|
        ADDS     r0,r0,#0x84
        LDR      r0,[r0,#0]
        ANDS     r0,r0,#3
        BEQ      |L1.42|
        CMP      r0,#1
        BEQ      |L1.138|
        CMP      r0,#2
        BEQ      |L1.230|
        CMP      r0,#3
        BNE      |L1.136|
        B        |L1.44|
|L1.42|
        NOP      
|L1.44|
        LDR      r0,|L1.728|
        LDR      r0,[r0,#0]
        UBFX     r0,r0,#16,#8
        ADD      r12,r0,#1
        MOV      r1,#2
        LDR      r0,|L1.732|
        LDR      r0,[r0,#0x88]
        UBFX     r0,r0,#0,#15
        ADD      r0,r0,#1
        UMULL    r0,r2,r1,r0
        LDR      r3,|L1.736|
        MOV      r1,#0
        UMULL    r6,r9,r0,r3
        MLA      r2,r2,r3,r9
        MLA      r7,r0,r1,r2
        MOV      r2,r12
        MOV      r3,r1
        MOV      r0,r6
        MOV      r1,r7
        BL       __aeabi_uldivmod
        MOV      r4,r0
        LDR      r0,|L1.740|
        LDR      r0,[r0,#0]
        UXTB     r0,r0
        ADD      r6,r0,#1
        MOV      r2,r6
        MOV      r3,#0
        MOV      r0,r4
        BL       __aeabi_uldivmod
        LDR      r1,|L1.744|
        STR      r0,[r1,#0]  ; SystemCoreClock
|L1.136|
        B        |L1.326|
|L1.138|
        LDR      r0,|L1.728|
        LDR      r0,[r0,#0]
        UBFX     r0,r0,#16,#8
        ADD      r12,r0,#1
        MOV      r1,#2
        LDR      r0,|L1.732|
        LDR      r0,[r0,#0x88]
        UBFX     r0,r0,#0,#15
        ADD      r0,r0,#1
        UMULL    r1,r2,r1,r0
        LDR      r3,|L1.748|
        MOV      r0,#0
        UMULL    r6,r9,r1,r3
        MLA      r2,r2,r3,r9
        MLA      r1,r1,r0,r2
        MOV      r2,r12
        MOV      r3,r0
        MOV      r0,r6
        BL       __aeabi_uldivmod
        MOV      r4,r0
        LDR      r0,|L1.740|
        LDR      r0,[r0,#0]
        UXTB     r0,r0
        ADD      r6,r0,#1
        MOV      r2,r6
        MOV      r3,#0
        MOV      r0,r4
        BL       __aeabi_uldivmod
        LDR      r1,|L1.744|
        STR      r0,[r1,#0]  ; SystemCoreClock
        B        |L1.326|
|L1.230|
        LDR      r0,|L1.728|
        LDR      r0,[r0,#0]
        UBFX     r0,r0,#16,#8
        ADD      r12,r0,#1
        MOV      r1,#2
        LDR      r0,|L1.732|
        LDR      r0,[r0,#0x88]
        UBFX     r0,r0,#0,#15
        ADD      r0,r0,#1
        UMULL    r1,r2,r1,r0
        B        |L1.268|
|L1.266|
        B        |L1.328|
|L1.268|
        MOV      r3,#0x8000
        MOV      r8,#0
        UMULL    r6,r9,r1,r3
        MLA      r2,r2,r3,r9
        MLA      r1,r1,r8,r2
        MOV      r2,r12
        MOV      r3,r8
        MOV      r0,r6
        BL       __aeabi_uldivmod
        MOV      r4,r0
        LDR      r0,|L1.740|
        LDR      r0,[r0,#0]
        UXTB     r0,r0
        ADD      r6,r0,#1
        MOV      r2,r6
        MOV      r3,r8
        MOV      r0,r4
        BL       __aeabi_uldivmod
        LDR      r1,|L1.744|
        STR      r0,[r1,#0]  ; SystemCoreClock
        NOP      
|L1.326|
        B        |L1.426|
|L1.328|
        LDR      r0,|L1.740|
        ADDS     r0,r0,#8
        LDR      r0,[r0,#0]
        ANDS     r0,r0,#3
        BEQ      |L1.354|
        CMP      r0,#1
        BEQ      |L1.378|
        CMP      r0,#2
        BEQ      |L1.400|
        CMP      r0,#3
        BNE      |L1.424|
        B        |L1.356|
|L1.354|
        NOP      
|L1.356|
        LDR      r0,|L1.740|
        LDR      r0,[r0,#0]
        UXTB     r0,r0
        ADD      r0,r0,#1
        LDR      r1,|L1.736|
        UDIV     r0,r1,r0
        LDR      r1,|L1.744|
        STR      r0,[r1,#0]  ; SystemCoreClock
        B        |L1.424|
|L1.378|
        LDR      r0,|L1.740|
        LDR      r0,[r0,#0]
        UXTB     r0,r0
        ADD      r0,r0,#1
        LDR      r1,|L1.748|
        UDIV     r0,r1,r0
        LDR      r1,|L1.744|
        STR      r0,[r1,#0]  ; SystemCoreClock
        B        |L1.424|
|L1.400|
        LDR      r0,|L1.740|
        LDR      r0,[r0,#0]
        UXTB     r0,r0
        ADD      r0,r0,#1
        MOV      r1,#0x8000
        UDIV     r0,r1,r0
        LDR      r1,|L1.744|
        STR      r0,[r1,#0]  ; SystemCoreClock
        NOP      
|L1.424|
        NOP      
|L1.426|
        POP      {r4-r10,pc}
        ENDP

SystemInit PROC
        MOV      r0,#0x20
        LDR      r1,|L1.752|
        STR      r0,[r1,#0]
        LDR      r0,|L1.732|
        LDR      r0,[r0,#0x1a0]
        TST      r0,#0x20
        BEQ      |L1.462|
        NOP      
|L1.452|
        LDR      r0,|L1.752|
        LDR      r0,[r0,#0]
        TST      r0,#0x40
        BEQ      |L1.452|
|L1.462|
        MOV      r0,#3
        LDR      r1,|L1.740|
        STR      r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.732|
        STR      r0,[r1,#0x1a8]
        LDR      r1,|L1.756|
        STR      r0,[r1,#0]
        MOV      r0,#1
        LDR      r1,|L1.760|
        STR      r0,[r1,#0]
        LDR      r0,|L1.764|
        LDR      r1,|L1.768|
        STR      r0,[r1,#0]
        MOV      r0,#0xaa
        LDR      r1,|L1.772|
        STR      r0,[r1,#0]
        MOV      r0,#0x55
        STR      r0,[r1,#0]
        MOV      r0,#1
        LDR      r1,|L1.776|
        STR      r0,[r1,#0]
        MOV      r0,#0xaa
        LDR      r1,|L1.772|
        STR      r0,[r1,#0]
        MOV      r0,#0x55
        LDR      r1,|L1.732|
        STR      r0,[r1,#0x8c]
        NOP      
|L1.540|
        LDR      r0,|L1.728|
        LDR      r0,[r0,#0]
        TST      r0,#0x4000000
        BEQ      |L1.540|
        MOV      r0,#3
        LDR      r1,|L1.776|
        STR      r0,[r1,#0]
        MOV      r0,#0xaa
        LDR      r1,|L1.732|
        STR      r0,[r1,#0x8c]
        MOV      r0,#0x55
        LDR      r1,|L1.772|
        STR      r0,[r1,#0]
        NOP      
|L1.578|
        LDR      r0,|L1.728|
        LDR      r0,[r0,#0]
        TST      r0,#0x3000000
        BEQ      |L1.578|
        MOV      r0,#0x23
        LDR      r1,|L1.780|
        STR      r0,[r1,#0]
        MOV      r0,#0xaa
        LDR      r1,|L1.732|
        STR      r0,[r1,#0xac]
        MOV      r0,#0x55
        LDR      r1,|L1.784|
        STR      r0,[r1,#0]
        MOV      r0,#1
        LDR      r1,|L1.788|
        STR      r0,[r1,#0]
        MOV      r0,#0xaa
        LDR      r1,|L1.784|
        STR      r0,[r1,#0]
        MOV      r0,#0x55
        LDR      r1,|L1.732|
        STR      r0,[r1,#0xac]
        NOP      
|L1.642|
        LDR      r0,|L1.780|
        ADDS     r0,r0,#4
        LDR      r0,[r0,#0]
        TST      r0,#0x400
        BEQ      |L1.642|
        MOV      r0,#3
        LDR      r1,|L1.788|
        STR      r0,[r1,#0]
        MOV      r0,#0xaa
        LDR      r1,|L1.732|
        STR      r0,[r1,#0xac]
        MOV      r0,#0x55
        LDR      r1,|L1.784|
        STR      r0,[r1,#0]
        NOP      
|L1.682|
        LDR      r0,|L1.780|
        ADDS     r0,r0,#4
        LDR      r0,[r0,#0]
        TST      r0,#0x300
        BEQ      |L1.682|
        LDR      r0,|L1.792|
        LDR      r1,|L1.796|
        STR      r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.732|
        STR      r0,[r1,#0x1c8]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0xf000
        ORR      r0,r0,#0x4000
        STR      r0,[r1,#0]
        BX       lr
        ENDP

        DCW      0x0000
|L1.728|
        DCD      0x400fc088
|L1.732|
        DCD      0x400fc000
|L1.736|
        DCD      0x003d0900
|L1.740|
        DCD      0x400fc104
|L1.744|
        DCD      SystemCoreClock
|L1.748|
        DCD      0x00b71b00
|L1.752|
        DCD      0x400fc1a0
|L1.756|
        DCD      0x400fc1ac
|L1.760|
        DCD      0x400fc10c
|L1.764|
        DCD      0x00050063
|L1.768|
        DCD      0x400fc084
|L1.772|
        DCD      0x400fc08c
|L1.776|
        DCD      0x400fc080
|L1.780|
        DCD      0x400fc0a4
|L1.784|
        DCD      0x400fc0ac
|L1.788|
        DCD      0x400fc0a0
|L1.792|
        DCD      0x042887de
|L1.796|
        DCD      0x400fc0c4

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

SystemCoreClock
        DCD      0x05f5e100

;*** Start embedded assembler ***

#line 1 "system_LPC17xx.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_system_LPC17xx_c_5d646a67____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_system_LPC17xx_c_5d646a67____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_system_LPC17xx_c_5d646a67____REVSH|
#line 128
|__asm___16_system_LPC17xx_c_5d646a67____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT SystemCoreClockUpdate [CODE]
        EXPORT SystemInit [CODE]
        EXPORT SystemCoreClock [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_uldivmod [CODE]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
