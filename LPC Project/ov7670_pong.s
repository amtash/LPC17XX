; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--debug -c --asm -oov7670_pong.o --depend=ov7670_pong.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=ov7670_pong.crf OV7670\OV7670_PONG.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

masscentre_detect_players PROC
        PUSH     {r4,lr}
        MOV      r2,#0
        MOV      r3,r2
        LDR      r4,|L1.1028|
        STR      r3,[r4,#0]  ; total_mass
        MOV      r0,r2
        B        |L1.72|
|L1.16|
        MOV      r1,#1
        B        |L1.62|
|L1.22|
        LDR      r3,|L1.1032|
        ADD      r3,r3,r0,LSL #5
        LDRH     r3,[r3,r1,LSL #1]
        MLA      r2,r3,r0,r2
        LDR      r3,|L1.1032|
        ADD      r3,r3,r0,LSL #5
        LDRH     r3,[r3,r1,LSL #1]
        LDR      r4,|L1.1028|
        LDR      r4,[r4,#0]  ; total_mass
        ADD      r3,r3,r4
        LDR      r4,|L1.1028|
        STR      r3,[r4,#0]  ; total_mass
        ADD      r3,r1,#1
        UXTH     r1,r3
|L1.62|
        CMP      r1,#6
        BLT      |L1.22|
        ADD      r3,r0,#1
        UXTH     r0,r3
|L1.72|
        CMP      r0,#0xc
        BLT      |L1.16|
        ADD      r3,r2,r2,LSL #2
        LSL      r3,r3,#6
        LSR      r3,r3,#4
        LDR      r4,|L1.1028|
        LDR      r4,[r4,#0]  ; total_mass
        UDIV     r3,r3,r4
        LDR      r4,|L1.1036|
        STRH     r3,[r4,#0]
        MOV      r2,#0
        MOV      r3,r2
        LDR      r4,|L1.1028|
        STR      r3,[r4,#0]  ; total_mass
        MOV      r0,r2
        B        |L1.170|
|L1.114|
        MOV      r1,#0xa
        B        |L1.160|
|L1.120|
        LDR      r3,|L1.1032|
        ADD      r3,r3,r0,LSL #5
        LDRH     r3,[r3,r1,LSL #1]
        MLA      r2,r3,r0,r2
        LDR      r3,|L1.1032|
        ADD      r3,r3,r0,LSL #5
        LDRH     r3,[r3,r1,LSL #1]
        LDR      r4,|L1.1028|
        LDR      r4,[r4,#0]  ; total_mass
        ADD      r3,r3,r4
        LDR      r4,|L1.1028|
        STR      r3,[r4,#0]  ; total_mass
        ADD      r3,r1,#1
        UXTH     r1,r3
|L1.160|
        CMP      r1,#0xf
        BLT      |L1.120|
        ADD      r3,r0,#1
        UXTH     r0,r3
|L1.170|
        CMP      r0,#0xc
        BLT      |L1.114|
        ADD      r3,r2,r2,LSL #2
        LSL      r3,r3,#6
        LSR      r3,r3,#4
        LDR      r4,|L1.1028|
        LDR      r4,[r4,#0]  ; total_mass
        UDIV     r3,r3,r4
        LDR      r4,|L1.1040|
        STRH     r3,[r4,#0]
        POP      {r4,pc}
        ENDP

hitTest PROC
        PUSH     {r0-r7,lr}
        MOV      r0,#0
        MOV      r1,r0
        B        |L1.328|
|L1.210|
        MOV      r4,r1
        ADD      r5,r1,r4,LSR #31
        ASR      r5,r5,#1
        SUB      r5,r1,r5,LSL #1
        LDRH     r6,[sp,#4]
        LDRH     r7,[sp,#0]
        MLA      r5,r5,r6,r7
        UXTH     r2,r5
        ADD      r4,r1,#1
        MOV      r5,#3
        SDIV     r4,r4,r5
        LDRH     r5,[sp,#6]
        LDRH     r6,[sp,#2]
        MLA      r4,r4,r5,r6
        UXTH     r3,r4
        LDRH     r4,[sp,#8]
        CMP      r4,r2
        BGT      |L1.322|
        LDRH     r4,[sp,#8]
        LDRH     r5,[sp,#0xc]
        ADD      r4,r4,r5
        CMP      r4,r2
        BLT      |L1.322|
        LDRH     r4,[sp,#0xa]
        CMP      r4,r3
        BGT      |L1.322|
        LDRH     r4,[sp,#0xa]
        LDRH     r5,[sp,#0xe]
        ADD      r4,r4,r5
        CMP      r4,r3
        BLT      |L1.322|
        MOV      r4,#1
        LSL      r4,r4,r1
        ORR      r4,r4,r0
        UXTB     r0,r4
|L1.322|
        ADD      r4,r1,#1
        UXTB     r1,r4
|L1.328|
        CMP      r1,#4
        BLT      |L1.210|
        ADD      sp,sp,#0x10
        POP      {r4-r7,pc}
        ENDP

Detect_for_games PROC
        PUSH     {r4-r10,lr}
        MOV      r7,r0
        MOV      r4,#0
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,#0
        MOV      r0,r1
        BL       Window
        MOVS     r1,#0
        MOV      r0,r1
        BL       LCD_SetCursor
        LDR      r0,|L1.1044|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#0x20000000
        LDR      r1,|L1.1044|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#0x40000000
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#0x1000000
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x20000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x20000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#0x20000000
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#0x40000000
        STR      r0,[r1,#0x10]
        LDR      r0,|L1.1048|
        LDR      r0,[r0,#0]  ; fps_aux
        ADD      r0,r0,#1
        LDR      r1,|L1.1048|
        STR      r0,[r1,#0]  ; fps_aux
        MOV      r8,r4
        B        |L1.542|
|L1.510|
        MOV      r5,#0
        B        |L1.534|
|L1.516|
        MOV      r0,#0
        LDR      r1,|L1.1032|
        ADD      r1,r1,r8,LSL #5
        STRH     r0,[r1,r5,LSL #1]
        ADD      r5,r5,#1
|L1.534|
        CMP      r5,#0x10
        BCC      |L1.516|
        ADD      r8,r8,#1
|L1.542|
        CMP      r8,#0xc
        BCC      |L1.510|
        MOV      r6,#0
        B.W      |L1.5380|
|L1.556|
        MOV      r9,#0
        B.W      |L1.5368|
|L1.564|
        MOV      r5,#0
        B.W      |L1.5358|
|L1.572|
        RSB      r1,r5,#0xf
        MOV      r0,#1
        LSL      r0,r0,r1
        LDR      r1,|L1.1052|
        LDRH     r1,[r1,#0]  ; detect_width_zone
        TST      r0,r1
        BEQ      |L1.844|
        LDR      r0,|L1.1044|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.1044|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.1056|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.672|
        MOV      r3,r2
        B        |L1.674|
|L1.672|
        RSBS     r3,r2,#0
|L1.674|
        LDR      r12,|L1.1060|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.782|
        LDR      r3,|L1.1064|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.704|
        MOV      r3,r1
        B        |L1.706|
|L1.704|
        RSBS     r3,r1,#0
|L1.706|
        LDR      r12,|L1.1060|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.782|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.1068|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.744|
        MOV      r3,r0
        B        |L1.746|
|L1.744|
        RSBS     r3,r0,#0
|L1.746|
        LDR      r12,|L1.1060|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.782|
        LDR      r0,|L1.1032|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.1032|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.782|
        LDR      r0,|L1.1044|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.1044|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        B        |L1.846|
|L1.844|
        B        |L1.2872|
|L1.846|
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.1056|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.866|
        MOV      r3,r2
        B        |L1.868|
|L1.866|
        RSBS     r3,r2,#0
|L1.868|
        LDR      r12,|L1.1060|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.976|
        LDR      r3,|L1.1064|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.898|
        MOV      r3,r1
        B        |L1.900|
|L1.898|
        RSBS     r3,r1,#0
|L1.900|
        LDR      r12,|L1.1060|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.976|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.1068|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.938|
        MOV      r3,r0
        B        |L1.940|
|L1.938|
        RSBS     r3,r0,#0
|L1.940|
        LDR      r12,|L1.1060|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.976|
        LDR      r0,|L1.1032|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.1032|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.976|
        LDR      r0,|L1.1044|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.1044|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        B        |L1.1072|
        DCW      0x0000
|L1.1028|
        DCD      total_mass
|L1.1032|
        DCD      scn_zone
|L1.1036|
        DCD      player1_y
|L1.1040|
        DCD      player2_y
|L1.1044|
        DCD      0x2009c000
|L1.1048|
        DCD      fps_aux
|L1.1052|
        DCD      detect_width_zone
|L1.1056|
        DCD      cd_R
|L1.1060|
        DCD      umbral
|L1.1064|
        DCD      cd_G
|L1.1068|
        DCD      cd_B
|L1.1072|
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.2088|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.1104|
        MOV      r3,r2
        B        |L1.1106|
|L1.1104|
        RSBS     r3,r2,#0
|L1.1106|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.1214|
        LDR      r3,|L1.2096|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.1136|
        MOV      r3,r1
        B        |L1.1138|
|L1.1136|
        RSBS     r3,r1,#0
|L1.1138|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.1214|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.2100|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.1176|
        MOV      r3,r0
        B        |L1.1178|
|L1.1176|
        RSBS     r3,r0,#0
|L1.1178|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.1214|
        LDR      r0,|L1.2104|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.2104|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.1214|
        LDR      r0,|L1.2108|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.2108|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.2088|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.1294|
        MOV      r3,r2
        B        |L1.1296|
|L1.1294|
        RSBS     r3,r2,#0
|L1.1296|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.1404|
        LDR      r3,|L1.2096|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.1326|
        MOV      r3,r1
        B        |L1.1328|
|L1.1326|
        RSBS     r3,r1,#0
|L1.1328|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.1404|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.2100|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.1366|
        MOV      r3,r0
        B        |L1.1368|
|L1.1366|
        RSBS     r3,r0,#0
|L1.1368|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.1404|
        LDR      r0,|L1.2104|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.2104|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.1404|
        LDR      r0,|L1.2108|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.2108|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.2088|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.1484|
        MOV      r3,r2
        B        |L1.1486|
|L1.1484|
        RSBS     r3,r2,#0
|L1.1486|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.1594|
        LDR      r3,|L1.2096|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.1516|
        MOV      r3,r1
        B        |L1.1518|
|L1.1516|
        RSBS     r3,r1,#0
|L1.1518|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.1594|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.2100|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.1556|
        MOV      r3,r0
        B        |L1.1558|
|L1.1556|
        RSBS     r3,r0,#0
|L1.1558|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.1594|
        LDR      r0,|L1.2104|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.2104|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.1594|
        LDR      r0,|L1.2108|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.2108|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.2088|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.1674|
        MOV      r3,r2
        B        |L1.1676|
|L1.1674|
        RSBS     r3,r2,#0
|L1.1676|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.1784|
        LDR      r3,|L1.2096|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.1706|
        MOV      r3,r1
        B        |L1.1708|
|L1.1706|
        RSBS     r3,r1,#0
|L1.1708|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.1784|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.2100|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.1746|
        MOV      r3,r0
        B        |L1.1748|
|L1.1746|
        RSBS     r3,r0,#0
|L1.1748|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.1784|
        LDR      r0,|L1.2104|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.2104|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.1784|
        LDR      r0,|L1.2108|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.2108|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.2088|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.1864|
        MOV      r3,r2
        B        |L1.1866|
|L1.1864|
        RSBS     r3,r2,#0
|L1.1866|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.1974|
        LDR      r3,|L1.2096|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.1896|
        MOV      r3,r1
        B        |L1.1898|
|L1.1896|
        RSBS     r3,r1,#0
|L1.1898|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.1974|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.2100|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.1936|
        MOV      r3,r0
        B        |L1.1938|
|L1.1936|
        RSBS     r3,r0,#0
|L1.1938|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.1974|
        LDR      r0,|L1.2104|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.2104|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.1974|
        LDR      r0,|L1.2108|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.2108|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.2088|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.2054|
        MOV      r3,r2
        B        |L1.2056|
|L1.2054|
        RSBS     r3,r2,#0
|L1.2056|
        LDR      r12,|L1.2092|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.2190|
        LDR      r3,|L1.2096|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.2112|
        MOV      r3,r1
        B        |L1.2114|
        DCW      0x0000
|L1.2088|
        DCD      cd_R
|L1.2092|
        DCD      umbral
|L1.2096|
        DCD      cd_G
|L1.2100|
        DCD      cd_B
|L1.2104|
        DCD      scn_zone
|L1.2108|
        DCD      0x2009c000
|L1.2112|
        RSBS     r3,r1,#0
|L1.2114|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.2190|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.3180|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.2152|
        MOV      r3,r0
        B        |L1.2154|
|L1.2152|
        RSBS     r3,r0,#0
|L1.2154|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.2190|
        LDR      r0,|L1.3184|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.3184|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.2190|
        LDR      r0,|L1.3188|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.3188|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.3192|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.2270|
        MOV      r3,r2
        B        |L1.2272|
|L1.2270|
        RSBS     r3,r2,#0
|L1.2272|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.2380|
        LDR      r3,|L1.3196|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.2302|
        MOV      r3,r1
        B        |L1.2304|
|L1.2302|
        RSBS     r3,r1,#0
|L1.2304|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.2380|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.3180|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.2342|
        MOV      r3,r0
        B        |L1.2344|
|L1.2342|
        RSBS     r3,r0,#0
|L1.2344|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.2380|
        LDR      r0,|L1.3184|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.3184|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.2380|
        LDR      r0,|L1.3188|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.3188|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.3192|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.2460|
        MOV      r3,r2
        B        |L1.2462|
|L1.2460|
        RSBS     r3,r2,#0
|L1.2462|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.2570|
        LDR      r3,|L1.3196|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.2492|
        MOV      r3,r1
        B        |L1.2494|
|L1.2492|
        RSBS     r3,r1,#0
|L1.2494|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.2570|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.3180|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.2532|
        MOV      r3,r0
        B        |L1.2534|
|L1.2532|
        RSBS     r3,r0,#0
|L1.2534|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.2570|
        LDR      r0,|L1.3184|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.3184|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.2570|
        LDR      r0,|L1.3188|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.3188|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.3192|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.2650|
        MOV      r3,r2
        B        |L1.2652|
|L1.2650|
        RSBS     r3,r2,#0
|L1.2652|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.2760|
        LDR      r3,|L1.3196|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.2682|
        MOV      r3,r1
        B        |L1.2684|
|L1.2682|
        RSBS     r3,r1,#0
|L1.2684|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.2760|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.3180|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.2722|
        MOV      r3,r0
        B        |L1.2724|
|L1.2722|
        RSBS     r3,r0,#0
|L1.2724|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.2760|
        LDR      r0,|L1.3184|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.3184|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.2760|
        LDR      r0,|L1.3188|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.3188|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.3192|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.2840|
        MOV      r3,r2
        B        |L1.2842|
|L1.2840|
        RSBS     r3,r2,#0
|L1.2842|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.2952|
        LDR      r3,|L1.3196|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.2874|
        MOV      r3,r1
        B        |L1.2876|
|L1.2872|
        B        |L1.4526|
|L1.2874|
        RSBS     r3,r1,#0
|L1.2876|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.2952|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.3180|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.2914|
        MOV      r3,r0
        B        |L1.2916|
|L1.2914|
        RSBS     r3,r0,#0
|L1.2916|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.2952|
        LDR      r0,|L1.3184|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.3184|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.2952|
        LDR      r0,|L1.3188|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.3188|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.3192|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.3032|
        MOV      r3,r2
        B        |L1.3034|
|L1.3032|
        RSBS     r3,r2,#0
|L1.3034|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.3142|
        LDR      r3,|L1.3196|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.3064|
        MOV      r3,r1
        B        |L1.3066|
|L1.3064|
        RSBS     r3,r1,#0
|L1.3066|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.3142|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.3180|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.3104|
        MOV      r3,r0
        B        |L1.3106|
|L1.3104|
        RSBS     r3,r0,#0
|L1.3106|
        LDR      r12,|L1.3176|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.3142|
        LDR      r0,|L1.3184|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.3184|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.3142|
        LDR      r0,|L1.3188|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.3188|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        B        |L1.3200|
|L1.3176|
        DCD      umbral
|L1.3180|
        DCD      cd_B
|L1.3184|
        DCD      scn_zone
|L1.3188|
        DCD      0x2009c000
|L1.3192|
        DCD      cd_R
|L1.3196|
        DCD      cd_G
|L1.3200|
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.4232|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.3248|
        MOV      r3,r2
        B        |L1.3250|
|L1.3248|
        RSBS     r3,r2,#0
|L1.3250|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.3358|
        LDR      r3,|L1.4240|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.3280|
        MOV      r3,r1
        B        |L1.3282|
|L1.3280|
        RSBS     r3,r1,#0
|L1.3282|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.3358|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.4244|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.3320|
        MOV      r3,r0
        B        |L1.3322|
|L1.3320|
        RSBS     r3,r0,#0
|L1.3322|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.3358|
        LDR      r0,|L1.4248|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.4248|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.3358|
        LDR      r0,|L1.4252|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.4252|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.4232|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.3438|
        MOV      r3,r2
        B        |L1.3440|
|L1.3438|
        RSBS     r3,r2,#0
|L1.3440|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.3548|
        LDR      r3,|L1.4240|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.3470|
        MOV      r3,r1
        B        |L1.3472|
|L1.3470|
        RSBS     r3,r1,#0
|L1.3472|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.3548|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.4244|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.3510|
        MOV      r3,r0
        B        |L1.3512|
|L1.3510|
        RSBS     r3,r0,#0
|L1.3512|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.3548|
        LDR      r0,|L1.4248|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.4248|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.3548|
        LDR      r0,|L1.4252|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.4252|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.4232|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.3628|
        MOV      r3,r2
        B        |L1.3630|
|L1.3628|
        RSBS     r3,r2,#0
|L1.3630|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.3738|
        LDR      r3,|L1.4240|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.3660|
        MOV      r3,r1
        B        |L1.3662|
|L1.3660|
        RSBS     r3,r1,#0
|L1.3662|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.3738|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.4244|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.3700|
        MOV      r3,r0
        B        |L1.3702|
|L1.3700|
        RSBS     r3,r0,#0
|L1.3702|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.3738|
        LDR      r0,|L1.4248|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.4248|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.3738|
        LDR      r0,|L1.4252|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.4252|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.4232|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.3818|
        MOV      r3,r2
        B        |L1.3820|
|L1.3818|
        RSBS     r3,r2,#0
|L1.3820|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.3928|
        LDR      r3,|L1.4240|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.3850|
        MOV      r3,r1
        B        |L1.3852|
|L1.3850|
        RSBS     r3,r1,#0
|L1.3852|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.3928|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.4244|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.3890|
        MOV      r3,r0
        B        |L1.3892|
|L1.3890|
        RSBS     r3,r0,#0
|L1.3892|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.3928|
        LDR      r0,|L1.4248|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.4248|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.3928|
        LDR      r0,|L1.4252|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.4252|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.4232|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.4008|
        MOV      r3,r2
        B        |L1.4010|
|L1.4008|
        RSBS     r3,r2,#0
|L1.4010|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.4118|
        LDR      r3,|L1.4240|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.4040|
        MOV      r3,r1
        B        |L1.4042|
|L1.4040|
        RSBS     r3,r1,#0
|L1.4042|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.4118|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.4244|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.4080|
        MOV      r3,r0
        B        |L1.4082|
|L1.4080|
        RSBS     r3,r0,#0
|L1.4082|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.4118|
        LDR      r0,|L1.4248|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.4248|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.4118|
        LDR      r0,|L1.4252|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.4252|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.4232|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.4198|
        MOV      r3,r2
        B        |L1.4200|
|L1.4198|
        RSBS     r3,r2,#0
|L1.4200|
        LDR      r12,|L1.4236|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.4334|
        LDR      r3,|L1.4240|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.4256|
        MOV      r3,r1
        B        |L1.4258|
        DCW      0x0000
|L1.4232|
        DCD      cd_R
|L1.4236|
        DCD      umbral
|L1.4240|
        DCD      cd_G
|L1.4244|
        DCD      cd_B
|L1.4248|
        DCD      scn_zone
|L1.4252|
        DCD      0x2009c000
|L1.4256|
        RSBS     r3,r1,#0
|L1.4258|
        LDR      r12,|L1.5320|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.4334|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.5324|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.4296|
        MOV      r3,r0
        B        |L1.4298|
|L1.4296|
        RSBS     r3,r0,#0
|L1.4298|
        LDR      r12,|L1.5320|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.4334|
        LDR      r0,|L1.5328|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.5328|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.4334|
        LDR      r0,|L1.5332|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.5332|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        LSL      r4,r0,#8
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x34]
        UBFX     r0,r0,#18,#8
        ORR      r4,r0,r4
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        LDR      r3,|L1.5336|
        LDRB     r3,[r3,#0]  ; cd_R
        SUBS     r2,r3,r4,LSR #11
        BMI      |L1.4414|
        MOV      r3,r2
        B        |L1.4416|
|L1.4414|
        RSBS     r3,r2,#0
|L1.4416|
        LDR      r12,|L1.5320|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
|L1.4426|
        BGE      |L1.4524|
        LDR      r3,|L1.5340|
        LDRB     r3,[r3,#0]  ; cd_G
        UBFX     r12,r4,#5,#6
        SUBS     r1,r3,r12
        BMI      |L1.4446|
        MOV      r3,r1
        B        |L1.4448|
|L1.4446|
        RSBS     r3,r1,#0
|L1.4448|
        LDR      r12,|L1.5320|
        LDRB     r12,[r12,#0]  ; umbral
        LSL      r12,r12,#1
        CMP      r3,r12
        BGE      |L1.4426|
        AND      r3,r4,#0x1f
        LDR      r12,|L1.5324|
        LDRB     r12,[r12,#0]  ; cd_B
        SUBS     r0,r12,r3
        BMI      |L1.4486|
        MOV      r3,r0
        B        |L1.4488|
|L1.4486|
        RSBS     r3,r0,#0
|L1.4488|
        LDR      r12,|L1.5320|
        LDRB     r12,[r12,#0]  ; umbral
        CMP      r3,r12
        BGE      |L1.4426|
        LDR      r0,|L1.5328|
        ADD      r0,r0,r6,LSL #5
        LDRH     r0,[r0,r5,LSL #1]
        ADD      r0,r0,#1
        LDR      r1,|L1.5328|
        ADD      r1,r1,r6,LSL #5
        STRH     r0,[r1,r5,LSL #1]
|L1.4524|
        B        |L1.5354|
|L1.4526|
        LDR      r0,|L1.5332|
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        LDR      r1,|L1.5332|
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x18]
        B        |L1.5344|
|L1.5320|
        DCD      umbral
|L1.5324|
        DCD      cd_B
|L1.5328|
        DCD      scn_zone
|L1.5332|
        DCD      0x2009c000
|L1.5336|
        DCD      cd_R
|L1.5340|
        DCD      cd_G
|L1.5344|
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0x1c]
|L1.5354|
        ADD      r5,r5,#1
|L1.5358|
        CMP      r5,#0x10
        BCC      |L1.572|
        ADD      r9,r9,#1
|L1.5368|
        CMP      r9,#0x14
        BCC      |L1.564|
        ADD      r6,r6,#1
|L1.5380|
        CMP      r6,#0xc
        BCC      |L1.556|
        CBNZ     r7,|L1.5394|
        BL       masscentre_detect_players
        B        |L1.5402|
|L1.5394|
        CMP      r7,#1
        BNE      |L1.5402|
        BL       masscentre_detect
|L1.5402|
        LDR      r0,|L1.6420|
        LDRH     r0,[r0,#0]  ; color_detect
        UBFX     r0,r0,#5,#6
        LDR      r1,|L1.6424|
        STRB     r0,[r1,#0]
        LDR      r0,|L1.6420|
        LDRH     r0,[r0,#0]  ; color_detect
        AND      r0,r0,#0x1f
        LDR      r1,|L1.6428|
        STRB     r0,[r1,#0]
        POP      {r4-r10,pc}
        ENDP

init_PONG PROC
        PUSH     {r4,lr}
        LDR      r0,|L1.6432|
        LDRH     r0,[r0,#0]  ; bgColor
        BL       LCD_Clear
        MOV      r0,#0
        LDR      r1,|L1.6436|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.6440|
        STRH     r0,[r1,#0]
        LDR      r1,|L1.6444|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.6448|
        STRB     r0,[r1,#0]
        MOV      r0,#0xc
        LDR      r1,|L1.6452|
        STRH     r0,[r1,#4]
        STRH     r0,[r1,#6]
        LDRH     r0,[r1,#4]  ; ball
        ADD      r1,r0,r0,LSR #31
        ASR      r1,r1,#1
        RSB      r1,r1,#0xa0
        LDR      r2,|L1.6452|
        STRH     r1,[r2,#0]
        MOV      r1,r2
        LDRH     r0,[r1,#6]  ; ball
        ADD      r1,r0,r0,LSR #31
        ASR      r1,r1,#1
        RSB      r1,r1,#0x78
        STRH     r1,[r2,#2]
        MOV      r0,#0xf
        LDR      r1,|L1.6456|
        STRH     r0,[r1,#4]
        MOV      r0,#0x3c
        STRH     r0,[r1,#6]
        MOV      r0,#0x28
        STRH     r0,[r1,#0]
        MOV      r0,#0xf
        LDR      r1,|L1.6460|
        STRH     r0,[r1,#4]
        MOV      r0,#0x3c
        STRH     r0,[r1,#6]
        MOV      r0,#0x10e
        STRH     r0,[r1,#0]
        POP      {r4,pc}
        ENDP

PONG PROC
        PUSH     {r0-r12,lr}
        LDR      r0,|L1.6464|
        LDRB     r0,[r0,#0]  ; newGame
        CMP      r0,#1
        BNE      |L1.5572|
        BL       init_PONG
        MOV      r0,#0
        LDR      r1,|L1.6464|
        STRB     r0,[r1,#0]
|L1.5572|
        LDR      r1,|L1.6468|
        LDR      r0,|L1.6444|
        LDRB     r0,[r0,#0]  ; score1
        BL       conversor_IaS
        MOV      r0,#0xffff
        MOVS     r3,#0
        LDR      r2,|L1.6468|
        MOVS     r1,#0x14
        STR      r0,[sp,#0]
        MOVS     r0,#0x8c
        BL       GUI_Text
        LDR      r1,|L1.6468|
        LDR      r0,|L1.6448|
        LDRB     r0,[r0,#0]  ; score2
        BL       conversor_IaS
        MOV      r0,#0xffff
        MOVS     r3,#0
        LDR      r2,|L1.6468|
        MOVS     r1,#0x14
        STR      r0,[sp,#0]
        MOVS     r0,#0xb4
        BL       GUI_Text
        MOVS     r0,#0
        MOVS     r3,#0xef
        MOVS     r2,#0xa0
        MOV      r1,r0
        STR      r0,[sp,#0]
        MOV      r0,r2
        BL       LCD_DrawLine
        LDR      r0,|L1.6432|
        LDRH     r0,[r0,#0]  ; bgColor
        LDR      r4,|L1.6456|
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]  ; pl1
        LDRH     r2,[r4,#4]  ; pl1
        LDRH     r1,[r4,#2]  ; pl1
        LDRH     r0,[r4,#0]  ; pl1
        BL       DrawRectangle
        LDR      r0,|L1.6432|
        LDRH     r0,[r0,#0]  ; bgColor
        LDR      r4,|L1.6460|
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]  ; pl2
        LDRH     r2,[r4,#4]  ; pl2
        LDRH     r1,[r4,#2]  ; pl2
        LDRH     r0,[r4,#0]  ; pl2
        BL       DrawRectangle
        LDR      r0,|L1.6432|
        LDRH     r0,[r0,#0]  ; bgColor
        LDR      r4,|L1.6452|
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]  ; ball
        LDRH     r2,[r4,#4]  ; ball
        LDRH     r1,[r4,#2]  ; ball
        LDRH     r0,[r4,#0]  ; ball
        BL       DrawRectangle
        LDR      r0,|L1.6436|
        LDRB     r0,[r0,#0]  ; time_pong
        BL       __aeabi_ui2f
        MOV      r11,r0
        LDR      r1,|L1.6472|
        BL       __aeabi_fdiv
        MOV      r10,r0
        BL       __aeabi_f2d
        MOVS     r2,#0
        LDR      r3,|L1.6476|
        STRD     r0,r1,[sp,#8]
        BL       __aeabi_dadd
        MOV      r6,r0
        MOV      r7,r1
        LDR      r0,|L1.6480|
        LDR      r0,[r0,#0]  ; vel_x
        BL       __aeabi_i2d
        MOV      r8,r0
        MOV      r2,r6
        MOV      r3,r7
        BL       __aeabi_dmul
        MOV      r4,r0
        BL       __aeabi_d2iz
        LDR      r1,|L1.6484|
        STR      r0,[r1,#0]  ; desp_x
        LDR      r0,|L1.6436|
        LDRB     r0,[r0,#0]  ; time_pong
        BL       __aeabi_ui2f
        LDR      r1,|L1.6472|
        STR      r0,[sp,#8]
        BL       __aeabi_fdiv
        STR      r0,[sp,#0xc]
        BL       __aeabi_f2d
        MOV      r6,r0
        MOVS     r2,#0
        LDR      r3,|L1.6476|
        BL       __aeabi_dadd
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,|L1.6488|
        LDR      r0,[r0,#0]  ; vel_y
        BL       __aeabi_i2d
        MOV      r8,r0
        MOV      r2,r4
        MOV      r3,r5
        BL       __aeabi_dmul
        MOV      r10,r0
        BL       __aeabi_d2iz
        LDR      r1,|L1.6492|
        STR      r0,[r1,#0]  ; desp_y
        LDR      r0,|L1.6452|
        LDRH     r0,[r0,#2]  ; ball
        LDR      r1,[r1,#0]  ; desp_y
        ADDS     r0,r0,r1
        BPL      |L1.5854|
        MOV      r0,#0
        LDR      r1,|L1.6452|
        STRH     r0,[r1,#2]
        B        |L1.5868|
|L1.5854|
        LDR      r0,|L1.6452|
        LDRH     r0,[r0,#2]  ; ball
        LDR      r1,|L1.6492|
        LDR      r1,[r1,#0]  ; desp_y
        ADD      r0,r0,r1
        LDR      r1,|L1.6452|
        STRH     r0,[r1,#2]
|L1.5868|
        LDR      r0,|L1.6452|
        LDRH     r0,[r0,#0]  ; ball
        LDR      r1,|L1.6484|
        LDR      r1,[r1,#0]  ; desp_x
        ADDS     r0,r0,r1
        BPL      |L1.5890|
        MOV      r0,#0
        LDR      r1,|L1.6452|
        STRH     r0,[r1,#0]
        B        |L1.5904|
|L1.5890|
        LDR      r0,|L1.6452|
        LDRH     r0,[r0,#0]  ; ball
        LDR      r1,|L1.6484|
        LDR      r1,[r1,#0]  ; desp_x
        ADD      r0,r0,r1
        LDR      r1,|L1.6452|
        STRH     r0,[r1,#0]
|L1.5904|
        LDR      r1,|L1.6456|
        LDRH     r0,[r1,#6]  ; pl1
        ADD      r1,r0,r0,LSR #31
        ASRS     r1,r1,#1
        ADDS     r1,r1,#1
        LDR      r2,|L1.6496|
        LDRH     r2,[r2,#0]  ; player1_y
        SUBS     r1,r2,r1
        CMP      r1,#0
        BLE      |L1.5956|
        LDR      r1,|L1.6456|
        LDRH     r0,[r1,#6]  ; pl1
        ADD      r1,r0,r0,LSR #31
        ASR      r1,r1,#1
        ADD      r1,r1,#1
        LDR      r2,|L1.6496|
        LDRH     r2,[r2,#0]  ; player1_y
        SUB      r1,r2,r1
        LDR      r2,|L1.6456|
        STRH     r1,[r2,#2]
        B        |L1.5964|
|L1.5956|
        MOV      r0,#1
        LDR      r1,|L1.6456|
        STRH     r0,[r1,#2]
|L1.5964|
        LDR      r1,|L1.6460|
        LDRH     r0,[r1,#6]  ; pl2
        ADD      r1,r0,r0,LSR #31
        ASRS     r1,r1,#1
        ADDS     r1,r1,#1
        LDR      r2,|L1.6500|
        LDRH     r2,[r2,#0]  ; player2_y
        SUBS     r1,r2,r1
        CMP      r1,#0
        BLE      |L1.6016|
        LDR      r1,|L1.6460|
        LDRH     r0,[r1,#6]  ; pl2
        ADD      r1,r0,r0,LSR #31
        ASR      r1,r1,#1
        ADD      r1,r1,#1
        LDR      r2,|L1.6500|
        LDRH     r2,[r2,#0]  ; player2_y
        SUB      r1,r2,r1
        LDR      r2,|L1.6460|
        STRH     r1,[r2,#2]
        B        |L1.6024|
|L1.6016|
        MOV      r0,#1
        LDR      r1,|L1.6460|
        STRH     r0,[r1,#2]
|L1.6024|
        LDR      r0,|L1.6460|
        LDR      r1,[r0,#0]  ; pl2
        STR      r1,[sp,#8]
        LDR      r0,[r0,#4]  ; pl2
        STR      r0,[sp,#0xc]
        LDR      r0,|L1.6452|
        LDR      r1,[r0,#0]  ; ball
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; ball
        STR      r0,[sp,#4]
        MOV      r1,r0
        LDRD     r2,r3,[sp,#8]
        LDR      r0,[sp,#0]
        BL       hitTest
        CBZ      r0,|L1.6140|
        MOV      r0,#0xffff
        LDR      r1,|L1.6504|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.6508|
        LDRB     r0,[r0,#0]  ; vel_x_base
        RSB      r0,r0,#0
        LDR      r1,|L1.6480|
        STR      r0,[r1,#0]  ; vel_x
        LDR      r2,|L1.6452|
        LDRH     r1,[r2,#6]  ; ball
        ADD      r2,r1,r1,LSR #31
        LDR      r3,|L1.6452|
        LDRH     r3,[r3,#2]  ; ball
        ADD      r2,r3,r2,ASR #1
        LDR      r3,|L1.6460|
        LDRH     r0,[r3,#6]  ; pl2
        ADD      r3,r0,r0,LSR #31
        LDR      r4,|L1.6460|
        LDRH     r4,[r4,#2]  ; pl2
        ADD      r3,r4,r3,ASR #1
        SUB      r2,r2,r3
        LDR      r3,|L1.6512|
        LDRB     r3,[r3,#0]  ; vel_y_base
        SDIV     r2,r2,r3
        LDR      r3,|L1.6488|
        STR      r2,[r3,#0]  ; vel_y
        MOV      r2,#0xad0
        LDR      r1,|L1.6516|
        MOV      r0,#0
        BL       DMA_DAC_audio_Channel_Init
|L1.6140|
        LDR      r0,|L1.6456|
        LDR      r1,[r0,#0]  ; pl1
        STR      r1,[sp,#8]
        LDR      r0,[r0,#4]  ; pl1
        STR      r0,[sp,#0xc]
        LDR      r0,|L1.6452|
        LDR      r1,[r0,#0]  ; ball
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; ball
        STR      r0,[sp,#4]
        MOV      r1,r0
        LDRD     r2,r3,[sp,#8]
        LDR      r0,[sp,#0]
        BL       hitTest
        CBZ      r0,|L1.6252|
        MOV      r0,#0xffff
        LDR      r1,|L1.6504|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.6508|
        LDRB     r0,[r0,#0]  ; vel_x_base
        LDR      r1,|L1.6480|
        STR      r0,[r1,#0]  ; vel_x
        LDR      r2,|L1.6452|
        LDRH     r1,[r2,#6]  ; ball
        ADD      r2,r1,r1,LSR #31
        LDR      r3,|L1.6452|
        LDRH     r3,[r3,#2]  ; ball
        ADD      r2,r3,r2,ASR #1
        LDR      r3,|L1.6456|
        LDRH     r0,[r3,#6]  ; pl1
        ADD      r3,r0,r0,LSR #31
        LDR      r4,|L1.6456|
        LDRH     r4,[r4,#2]  ; pl1
        ADD      r3,r4,r3,ASR #1
        SUB      r2,r2,r3
        LDR      r3,|L1.6512|
        LDRB     r3,[r3,#0]  ; vel_y_base
        SDIV     r2,r2,r3
        LDR      r3,|L1.6488|
        STR      r2,[r3,#0]  ; vel_y
        MOV      r2,#0xad0
        LDR      r1,|L1.6516|
        MOV      r0,#0
        BL       DMA_DAC_audio_Channel_Init
|L1.6252|
        LDR      r0,|L1.6452|
        LDRH     r0,[r0,#0]  ; ball
        LDR      r1,|L1.6520|
        LDRB     r1,[r1,#0]  ; border_field
        CMP      r0,r1
        BGE      |L1.6340|
        LDR      r0,|L1.6508|
        LDRB     r0,[r0,#0]  ; vel_x_base
        LDR      r1,|L1.6480|
        STR      r0,[r1,#0]  ; vel_x
        MOV      r0,#0
        LDR      r1,|L1.6488|
        STR      r0,[r1,#0]  ; vel_y
        LDR      r1,|L1.6452|
        LDRH     r0,[r1,#4]  ; ball
        ADD      r1,r0,r0,LSR #31
        ASR      r1,r1,#1
        RSB      r1,r1,#0xa0
        LDR      r2,|L1.6452|
        STRH     r1,[r2,#0]
        MOV      r1,r2
        LDRH     r0,[r1,#6]  ; ball
        ADD      r1,r0,r0,LSR #31
        ASR      r1,r1,#1
        RSB      r1,r1,#0x78
        STRH     r1,[r2,#2]
        LDR      r0,|L1.6448|
        LDRB     r0,[r0,#0]  ; score2
        ADD      r0,r0,#1
        LDR      r1,|L1.6448|
        STRB     r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.6436|
        STRB     r0,[r1,#0]
        B        |L1.6554|
|L1.6340|
        LDR      r0,|L1.6452|
        LDRH     r1,[r0,#0]  ; ball
        LDRH     r0,[r0,#4]  ; ball
        ADDS     r0,r0,#1
        LDR      r2,|L1.6520|
        LDRB     r2,[r2,#0]  ; border_field
        ADD      r0,r0,r2
        LDR      r2,|L1.6524|
        LDRH     r2,[r2,#0]  ; MAX_X
        SUBS     r0,r2,r0
        CMP      r1,r0
        BLE      |L1.6554|
        LDR      r0,|L1.6508|
        LDRB     r0,[r0,#0]  ; vel_x_base
        RSB      r0,r0,#0
        LDR      r1,|L1.6480|
        STR      r0,[r1,#0]  ; vel_x
        MOV      r0,#0
        LDR      r1,|L1.6488|
        STR      r0,[r1,#0]  ; vel_y
        LDR      r1,|L1.6452|
        LDRH     r0,[r1,#4]  ; ball
        ADD      r1,r0,r0,LSR #31
        ASR      r1,r1,#1
        RSB      r1,r1,#0xa0
        LDR      r2,|L1.6452|
        STRH     r1,[r2,#0]
        MOV      r1,r2
        LDRH     r0,[r1,#6]  ; ball
        ADD      r1,r0,r0,LSR #31
        ASR      r1,r1,#1
        B        |L1.6528|
        DCW      0x0000
|L1.6420|
        DCD      color_detect
|L1.6424|
        DCD      cd_G
|L1.6428|
        DCD      cd_B
|L1.6432|
        DCD      bgColor
|L1.6436|
        DCD      time_pong
|L1.6440|
        DCD      time_game
|L1.6444|
        DCD      score1
|L1.6448|
        DCD      score2
|L1.6452|
        DCD      ball
|L1.6456|
        DCD      pl1
|L1.6460|
        DCD      pl2
|L1.6464|
        DCD      newGame
|L1.6468|
        DCD      delay_read
|L1.6472|
        DCD      0x41200000
|L1.6476|
        DCD      0x3ff00000
|L1.6480|
        DCD      vel_x
|L1.6484|
        DCD      desp_x
|L1.6488|
        DCD      vel_y
|L1.6492|
        DCD      desp_y
|L1.6496|
        DCD      player1_y
|L1.6500|
        DCD      player2_y
|L1.6504|
        DCD      color_ball
|L1.6508|
        DCD      vel_x_base
|L1.6512|
        DCD      vel_y_base
|L1.6516|
        DCD      muelle
|L1.6520|
        DCD      border_field
|L1.6524|
        DCD      MAX_X
|L1.6528|
        RSB      r1,r1,#0x78
        STRH     r1,[r2,#2]
        LDR      r0,|L1.7552|
        LDRB     r0,[r0,#0]  ; score1
        ADD      r0,r0,#1
        LDR      r1,|L1.7552|
        STRB     r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.7556|
        STRB     r0,[r1,#0]
|L1.6554|
        LDR      r0,|L1.7560|
        LDRH     r0,[r0,#2]  ; ball
        LDR      r1,|L1.7564|
        LDRB     r1,[r1,#0]  ; border_field
        CMP      r0,r1
        BGE      |L1.6608|
        LDR      r1,|L1.7568|
        LDR      r0,[r1,#0]  ; vel_y
        CMP      r0,#0
        BLT      |L1.6578|
        MOV      r1,r0
        B        |L1.6582|
|L1.6578|
        RSB      r1,r0,#0
|L1.6582|
        LDR      r2,|L1.7568|
        STR      r1,[r2,#0]  ; vel_y
        LDR      r0,|L1.7560|
        LDRH     r1,[r0,#2]  ; ball
        LDRH     r0,[r0,#2]  ; ball
        LDR      r2,|L1.7564|
        LDRB     r2,[r2,#0]  ; border_field
        SUB      r0,r2,r0
        ADD      r0,r0,r1
        LDR      r1,|L1.7560|
        STRH     r0,[r1,#2]
        B        |L1.6696|
|L1.6608|
        LDR      r0,|L1.7560|
        LDRH     r1,[r0,#2]  ; ball
        LDRH     r0,[r0,#6]  ; ball
        ADDS     r0,r0,#1
        LDR      r2,|L1.7564|
        LDRB     r2,[r2,#0]  ; border_field
        ADD      r0,r0,r2
        LDR      r2,|L1.7572|
        LDRH     r2,[r2,#0]  ; MAX_Y
        SUBS     r0,r2,r0
        CMP      r1,r0
        BLE      |L1.6696|
        LDR      r1,|L1.7568|
        LDR      r0,[r1,#0]  ; vel_y
        CMP      r0,#0
        BLT      |L1.6644|
        MOV      r1,r0
        B        |L1.6648|
|L1.6644|
        RSB      r1,r0,#0
|L1.6648|
        RSB      r1,r1,#0
        LDR      r2,|L1.7568|
        STR      r1,[r2,#0]  ; vel_y
        LDR      r0,|L1.7560|
        LDRH     r1,[r0,#2]  ; ball
        LDRH     r0,[r0,#6]  ; ball
        ADD      r0,r0,#1
        LDR      r2,|L1.7564|
        LDRB     r2,[r2,#0]  ; border_field
        ADD      r0,r0,r2
        LDR      r2,|L1.7572|
        LDRH     r2,[r2,#0]  ; MAX_Y
        SUB      r0,r2,r0
        SUB      r0,r1,r0
        LDR      r1,|L1.7560|
        LDRH     r1,[r1,#2]  ; ball
        SUB      r0,r1,r0
        LDR      r1,|L1.7560|
        STRH     r0,[r1,#2]
|L1.6696|
        MOVS     r0,#0
        LDR      r4,|L1.7576|
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]  ; pl1
        LDRH     r2,[r4,#4]  ; pl1
        LDRH     r1,[r4,#2]  ; pl1
        LDRH     r0,[r4,#0]  ; pl1
        BL       DrawRectangle
        MOVS     r0,#0
        LDR      r4,|L1.7580|
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]  ; pl2
        LDRH     r2,[r4,#4]  ; pl2
        LDRH     r1,[r4,#2]  ; pl2
        LDRH     r0,[r4,#0]  ; pl2
        BL       DrawRectangle
        LDR      r0,|L1.7584|
        LDRH     r0,[r0,#0]  ; color_ball
        LDR      r4,|L1.7560|
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]  ; ball
        LDRH     r2,[r4,#4]  ; ball
        LDRH     r1,[r4,#2]  ; ball
        LDRH     r0,[r4,#0]  ; ball
        BL       DrawRectangle
        POP      {r0-r12,pc}
        ENDP

init_space PROC
        PUSH     {r4,lr}
        LDR      r0,|L1.7588|
        LDRH     r0,[r0,#0]  ; bgColor
        BL       LCD_Clear
        MOV      r0,#3
        LDR      r1,|L1.7592|
        STRB     r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.7556|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.7596|
        STRH     r0,[r1,#0]
        LDR      r1,|L1.7600|
        STRH     r0,[r1,#0]
        LDR      r1,|L1.7604|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.7608|
        STR      r0,[r1,#0]  ; destroyed
        MOV      r0,#0x12b
        LDR      r1,|L1.7612|
        STRH     r0,[r1,#0]
        MOV      r0,#0x14
        LDR      r1,|L1.7616|
        STRH     r0,[r1,#0]
        MOV      r0,#0xa
        LDR      r1,|L1.7560|
        STRH     r0,[r1,#4]
        MOV      r0,#6
        STRH     r0,[r1,#6]
        LDR      r0,|L1.7620|
        LDRB     r0,[r0,#0]  ; vel_x_base
        LDR      r1,|L1.7624|
        STR      r0,[r1,#0]  ; vel_x
        LDR      r0,|L1.7576|
        LDRH     r0,[r0,#0]  ; pl1
        LDR      r1,|L1.7576|
        LDRH     r1,[r1,#4]  ; pl1
        ADD      r0,r0,r1
        LDR      r1,|L1.7560|
        STRH     r0,[r1,#0]
        LDR      r2,|L1.7628|
        LDRH     r1,[r2,#6]  ; invader
        ADD      r2,r1,r1,LSR #31
        LDR      r3,|L1.7576|
        LDRH     r3,[r3,#2]  ; pl1
        ADD      r2,r3,r2,ASR #1
        LDR      r3,|L1.7560|
        LDRH     r0,[r3,#6]  ; ball
        ADD      r3,r0,r0,LSR #31
        SUB      r2,r2,r3,ASR #1
        LDR      r3,|L1.7560|
        STRH     r2,[r3,#2]
        MOV      r0,#0x11
        LDR      r1,|L1.7628|
        STRH     r0,[r1,#4]
        MOV      r0,#0x21
        STRH     r0,[r1,#6]
        MOV      r0,r1
        LDRH     r0,[r0,#4]  ; invader
        LDR      r1,|L1.7576|
        STRH     r0,[r1,#4]
        LDR      r0,|L1.7628|
        LDRH     r0,[r0,#6]  ; invader
        STRH     r0,[r1,#6]
        MOV      r0,r1
        LDRH     r0,[r0,#4]  ; pl1
        RSB      r0,r0,#0x28
        STRH     r0,[r1,#0]
        MOV      r4,#0
        B        |L1.6972|
|L1.6926|
        MOV      r0,#0
        LDR      r1,|L1.7632|
        STRH     r0,[r1,r4,LSL #3]
        ADD      r1,r1,r4,LSL #3
        STRH     r0,[r1,#2]
        MOV      r0,#0xa
        LDR      r1,|L1.7632|
        ADD      r1,r1,r4,LSL #3
        STRH     r0,[r1,#4]
        MOV      r0,#6
        LDR      r1,|L1.7632|
        ADD      r1,r1,r4,LSL #3
        STRH     r0,[r1,#6]
        ADD      r0,r4,#1
        UXTB     r4,r0
|L1.6972|
        CMP      r4,#0xa
        BLT      |L1.6926|
        POP      {r4,pc}
        ENDP

space_invaders PROC
        PUSH     {r0-r12,lr}
        LDR      r0,|L1.7636|
        LDRB     r0,[r0,#0]  ; newGame
        CMP      r0,#1
        BNE      |L1.7002|
        BL       init_space
        MOV      r0,#0
        LDR      r1,|L1.7636|
        STRB     r0,[r1,#0]
|L1.7002|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r1,|L1.7640|
        LDR      r0,|L1.7604|
        LDRB     r0,[r0,#0]  ; num_destroyed
        BL       conversor_IaS
        MOV      r0,#0xffff
        MOVS     r3,#0
        LDR      r2,|L1.7640|
        MOVS     r1,#0x14
        STR      r0,[sp,#0]
        MOVS     r0,#0x8c
        BL       GUI_Text
        LDR      r1,|L1.7640|
        LDR      r0,|L1.7592|
        LDRB     r0,[r0,#0]  ; lives
        BL       conversor_IaS
        MOV      r0,#0xffff
        MOVS     r3,#0
        LDR      r2,|L1.7640|
        MOVS     r1,#0x14
        STR      r0,[sp,#0]
        MOVS     r0,#0xb4
        BL       GUI_Text
        LDR      r0,|L1.7588|
        LDRH     r0,[r0,#0]  ; bgColor
        LDR      r4,|L1.7628|
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]  ; invader
        LDRH     r2,[r4,#4]  ; invader
        LDR      r4,|L1.7576|
        LDRH     r1,[r4,#2]  ; pl1
        LDR      r4,|L1.7628|
        LDRH     r4,[r4,#4]  ; invader
        RSB      r4,r4,#0x28
        UXTH     r0,r4
        BL       DrawRectangle
        LDR      r0,|L1.7588|
        LDRH     r0,[r0,#0]  ; bgColor
        LDR      r4,|L1.7560|
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]  ; ball
        LDRH     r2,[r4,#4]  ; ball
        LDRH     r1,[r4,#2]  ; ball
        LDRH     r0,[r4,#0]  ; ball
        BL       DrawRectangle
        MOV      r10,#0
        B        |L1.7186|
|L1.7128|
        MOVS     r0,#1
        LSL      r0,r0,r10
        LDR      r1,|L1.7600|
        LDRH     r1,[r1,#0]  ; misil_active
        TST      r0,r1
        BEQ      |L1.7182|
        LDR      r0,|L1.7588|
        LDRH     r0,[r0,#0]  ; bgColor
        LDR      r4,|L1.7632|
        ADD      r4,r4,r10,LSL #3
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]
        LDR      r4,|L1.7632|
        ADD      r4,r4,r10,LSL #3
        LDRH     r2,[r4,#4]
        LDR      r4,|L1.7632|
        ADD      r4,r4,r10,LSL #3
        LDRH     r1,[r4,#2]
        LDR      r4,|L1.7632|
        LDRH     r0,[r4,r10,LSL #3]
        BL       DrawRectangle
|L1.7182|
        ADD      r10,r10,#1
|L1.7186|
        CMP      r10,#0xa
        BLT      |L1.7128|
        LDR      r0,|L1.7556|
        LDRB     r0,[r0,#0]  ; time_pong
        BL       __aeabi_ui2f
        LDR      r1,|L1.7644|
        STR      r0,[sp,#4]
        BL       __aeabi_fdiv
        MOV      r11,r0
        BL       __aeabi_f2d
        MOVS     r2,#0
        LDR      r3,|L1.7648|
        STRD     r0,r1,[sp,#8]
        BL       __aeabi_dadd
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,|L1.7624|
        LDR      r0,[r0,#0]  ; vel_x
        BL       __aeabi_i2d
        MOV      r6,r0
        MOV      r2,r4
        MOV      r3,r5
        BL       __aeabi_dmul
        MOV      r8,r0
        BL       __aeabi_d2iz
        LDR      r1,|L1.7652|
        STR      r0,[r1,#0]  ; desp_x
        LDR      r0,|L1.7560|
        LDRH     r0,[r0,#0]  ; ball
        LDR      r1,[r1,#0]  ; desp_x
        ADDS     r0,r0,r1
        BPL      |L1.7278|
        MOV      r0,#0
        LDR      r1,|L1.7560|
        STRH     r0,[r1,#0]
        B        |L1.7292|
|L1.7278|
        LDR      r0,|L1.7560|
        LDRH     r0,[r0,#0]  ; ball
        LDR      r1,|L1.7652|
        LDR      r1,[r1,#0]  ; desp_x
        ADD      r0,r0,r1
        LDR      r1,|L1.7560|
        STRH     r0,[r1,#0]
|L1.7292|
        LDR      r1,|L1.7628|
        LDRH     r0,[r1,#6]  ; invader
        ADD      r1,r0,r0,LSR #31
        ASRS     r1,r1,#1
        ADDS     r1,r1,#1
        LDR      r2,|L1.7656|
        LDRH     r2,[r2,#0]  ; player1_y
        SUBS     r1,r2,r1
        CMP      r1,#0
        BLE      |L1.7344|
        LDR      r1,|L1.7628|
        LDRH     r0,[r1,#6]  ; invader
        ADD      r1,r0,r0,LSR #31
        ASR      r1,r1,#1
        ADD      r1,r1,#1
        LDR      r2,|L1.7656|
        LDRH     r2,[r2,#0]  ; player1_y
        SUB      r1,r2,r1
        LDR      r2,|L1.7576|
        STRH     r1,[r2,#2]
        B        |L1.7352|
|L1.7344|
        MOV      r0,#1
        LDR      r1,|L1.7576|
        STRH     r0,[r1,#2]
|L1.7352|
        LDR      r0,|L1.7628|
        LDRH     r0,[r0,#6]  ; invader
        ADDS     r0,r0,#1
        LDR      r1,|L1.7656|
        LDRH     r1,[r1,#0]  ; player1_y
        SUBS     r1,r1,r0
        LDR      r0,|L1.7572|
        LDRH     r0,[r0,#0]  ; MAX_Y
        SUBS     r0,r0,#1
        CMP      r1,r0
        BLE      |L1.7394|
        LDR      r0,|L1.7628|
        LDRH     r0,[r0,#6]  ; invader
        ADD      r0,r0,#2
        LDR      r1,|L1.7572|
        LDRH     r1,[r1,#0]  ; MAX_Y
        SUB      r0,r1,r0
        LDR      r1,|L1.7576|
        STRH     r0,[r1,#2]
|L1.7394|
        MOV      r10,#0
        B        |L1.7960|
|L1.7400|
        MOVS     r0,#1
        LSL      r0,r0,r10
        LDR      r1,|L1.7600|
        LDRH     r1,[r1,#0]  ; misil_active
        TST      r0,r1
        BEQ      |L1.7660|
        LDR      r0,|L1.7632|
        LDRH     r0,[r0,r10,LSL #3]
        SUB      r0,r0,#2
        LDR      r1,|L1.7632|
        STRH     r0,[r1,r10,LSL #3]
        MOV      r0,r1
        LDRH     r0,[r0,r10,LSL #3]
        CMP      r0,#0xa
        BGE      |L1.7500|
        LDR      r0,|L1.7588|
        LDRH     r0,[r0,#0]  ; bgColor
        MOV      r4,r1
        ADD      r4,r4,r10,LSL #3
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]
        MOV      r4,r1
        ADD      r4,r4,r10,LSL #3
        LDRH     r2,[r4,#4]
        MOV      r4,r1
        ADD      r4,r4,r10,LSL #3
        LDRH     r1,[r4,#2]
        LDR      r4,|L1.7632|
        LDRH     r0,[r4,r10,LSL #3]
        BL       DrawRectangle
        MOV      r0,#1
        LSL      r0,r0,r10
        LDR      r1,|L1.7600|
        LDRH     r1,[r1,#0]  ; misil_active
        BIC      r1,r1,r0
        LDR      r0,|L1.7600|
        STRH     r1,[r0,#0]
|L1.7500|
        LDR      r0,|L1.7632|
        ADD      r0,r0,r10,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        STR      r0,[sp,#4]
        LDR      r0,|L1.7576|
        LDR      r1,[r0,#0]  ; pl1
        STR      r1,[sp,#8]
        LDR      r0,[r0,#4]  ; pl1
        MOV      r3,r0
        MOV      r2,r1
        STR      r0,[sp,#0xc]
        LDRD     r0,r1,[sp,#0]
        BL       hitTest
        CMP      r0,#0
        BEQ      |L1.7796|
        LDR      r0,|L1.7588|
        LDRH     r0,[r0,#0]  ; bgColor
        LDR      r4,|L1.7632|
        ADD      r4,r4,r10,LSL #3
        B        |L1.7662|
|L1.7552|
        DCD      score1
|L1.7556|
        DCD      time_pong
|L1.7560|
        DCD      ball
|L1.7564|
        DCD      border_field
|L1.7568|
        DCD      vel_y
|L1.7572|
        DCD      MAX_Y
|L1.7576|
        DCD      pl1
|L1.7580|
        DCD      pl2
|L1.7584|
        DCD      color_ball
|L1.7588|
        DCD      bgColor
|L1.7592|
        DCD      lives
|L1.7596|
        DCD      time_game
|L1.7600|
        DCD      misil_active
|L1.7604|
        DCD      num_destroyed
|L1.7608|
        DCD      destroyed
|L1.7612|
        DCD      invaders_x
|L1.7616|
        DCD      invaders_y
|L1.7620|
        DCD      vel_x_base
|L1.7624|
        DCD      vel_x
|L1.7628|
        DCD      invader
|L1.7632|
        DCD      misil
|L1.7636|
        DCD      newGame
|L1.7640|
        DCD      delay_read
|L1.7644|
        DCD      0x41200000
|L1.7648|
        DCD      0x3ff00000
|L1.7652|
        DCD      desp_x
|L1.7656|
        DCD      player1_y
|L1.7660|
        B        |L1.7956|
|L1.7662|
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]
        LDR      r4,|L1.8684|
        ADD      r4,r4,r10,LSL #3
        LDRH     r2,[r4,#4]
        LDR      r4,|L1.8684|
        ADD      r4,r4,r10,LSL #3
        LDRH     r1,[r4,#2]
        LDR      r4,|L1.8684|
        LDRH     r0,[r4,r10,LSL #3]
        BL       DrawRectangle
        LDR      r0,|L1.8688|
        LDRB     r0,[r0,#0]  ; lives
        CBNZ     r0,|L1.7710|
        MOV      r0,#0
        LDR      r1,|L1.8692|
        STRB     r0,[r1,#0]
        LDR      r1,|L1.8696|
        STRB     r0,[r1,#0]
|L1.7710|
        LDR      r0,|L1.8688|
        LDRB     r0,[r0,#0]  ; lives
        SUB      r0,r0,#1
        LDR      r1,|L1.8688|
        STRB     r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.8700|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.8704|
        LDRB     r0,[r0,#0]  ; vel_x_base
        LDR      r1,|L1.8708|
        STR      r0,[r1,#0]  ; vel_x
        LDR      r0,|L1.8712|
        LDRH     r0,[r0,#0]  ; pl1
        LDR      r1,|L1.8712|
        LDRH     r1,[r1,#4]  ; pl1
        ADD      r0,r0,r1
        LDR      r1,|L1.8716|
        STRH     r0,[r1,#0]
        LDR      r2,|L1.8720|
        LDRH     r1,[r2,#6]  ; invader
        ADD      r2,r1,r1,LSR #31
        LDR      r3,|L1.8712|
        LDRH     r3,[r3,#2]  ; pl1
        ADD      r2,r3,r2,ASR #1
        LDR      r3,|L1.8716|
        LDRH     r0,[r3,#6]  ; ball
        ADD      r3,r0,r0,LSR #31
        SUB      r2,r2,r3,ASR #1
        LDR      r3,|L1.8716|
        STRH     r2,[r3,#2]
        MOV      r0,#0
        LDR      r1,|L1.8724|
        B        |L1.7794|
        B        |L1.7796|
|L1.7794|
        STRB     r0,[r1,#0]
|L1.7796|
        LDR      r0,|L1.8684|
        ADD      r0,r0,r10,LSL #3
        LDR      r1,[r0,#0]
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]
        STR      r0,[sp,#4]
        LDR      r0,|L1.8716|
        LDR      r1,[r0,#0]  ; ball
        STR      r1,[sp,#8]
        LDR      r0,[r0,#4]  ; ball
        MOV      r3,r0
        MOV      r2,r1
        STR      r0,[sp,#0xc]
        LDRD     r0,r1,[sp,#0]
        BL       hitTest
        CBZ      r0,|L1.7956|
        LDR      r0,|L1.8728|
        LDRH     r0,[r0,#0]  ; bgColor
        LDR      r4,|L1.8684|
        ADD      r4,r4,r10,LSL #3
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]
        LDR      r4,|L1.8684|
        ADD      r4,r4,r10,LSL #3
        LDRH     r2,[r4,#4]
        LDR      r4,|L1.8684|
        ADD      r4,r4,r10,LSL #3
        LDRH     r1,[r4,#2]
        LDR      r4,|L1.8684|
        LDRH     r0,[r4,r10,LSL #3]
        BL       DrawRectangle
        MOV      r0,#1
        LSL      r0,r0,r10
        LDR      r1,|L1.8700|
        LDRH     r1,[r1,#0]  ; misil_active
        BIC      r1,r1,r0
        LDR      r0,|L1.8700|
        STRH     r1,[r0,#0]
        LDR      r0,|L1.8704|
        LDRB     r0,[r0,#0]  ; vel_x_base
        LDR      r1,|L1.8708|
        STR      r0,[r1,#0]  ; vel_x
        LDR      r0,|L1.8712|
        LDRH     r0,[r0,#0]  ; pl1
        LDR      r1,|L1.8712|
        LDRH     r1,[r1,#4]  ; pl1
        ADD      r0,r0,r1
        LDR      r1,|L1.8716|
        STRH     r0,[r1,#0]
        LDR      r2,|L1.8720|
        LDRH     r1,[r2,#6]  ; invader
        ADD      r2,r1,r1,LSR #31
        LDR      r3,|L1.8712|
        LDRH     r3,[r3,#2]  ; pl1
        ADD      r2,r3,r2,ASR #1
        LDR      r3,|L1.8716|
        LDRH     r0,[r3,#6]  ; ball
        ADD      r3,r0,r0,LSR #31
        SUB      r2,r2,r3,ASR #1
        LDR      r3,|L1.8716|
        STRH     r2,[r3,#2]
        MOV      r0,#0
        LDR      r1,|L1.8724|
        STRB     r0,[r1,#0]
|L1.7956|
        ADD      r10,r10,#1
|L1.7960|
        CMP      r10,#0xa
        BLT      |L1.7400|
        LDR      r0,|L1.8716|
        LDRH     r0,[r0,#0]  ; ball
        LDR      r1,|L1.8732|
        LDRH     r1,[r1,#0]  ; lowest_invader
        CMP      r0,r1
        BLT      |L1.8232|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.8716|
        LDRH     r1,[r0,#0]  ; ball
        LDRH     r0,[r0,#4]  ; ball
        ADDS     r0,r0,#1
        LDR      r2,|L1.8736|
        LDRB     r2,[r2,#0]  ; border_field
        ADD      r0,r0,r2
        LDR      r2,|L1.8740|
        LDRH     r2,[r2,#0]  ; MAX_X
        SUBS     r0,r2,r0
        CMP      r1,r0
        BLE      |L1.8080|
        LDR      r0,|L1.8704|
        LDRB     r0,[r0,#0]  ; vel_x_base
        LDR      r1,|L1.8708|
        STR      r0,[r1,#0]  ; vel_x
        LDR      r0,|L1.8712|
        LDRH     r0,[r0,#0]  ; pl1
        LDR      r1,|L1.8712|
        LDRH     r1,[r1,#4]  ; pl1
        ADD      r0,r0,r1
        LDR      r1,|L1.8716|
        STRH     r0,[r1,#0]
        LDR      r2,|L1.8720|
        LDRH     r1,[r2,#6]  ; invader
        ADD      r2,r1,r1,LSR #31
        LDR      r3,|L1.8712|
        LDRH     r3,[r3,#2]  ; pl1
        ADD      r2,r3,r2,ASR #1
        LDR      r3,|L1.8716|
        LDRH     r0,[r3,#6]  ; ball
        ADD      r3,r0,r0,LSR #31
        SUB      r2,r2,r3,ASR #1
        LDR      r3,|L1.8716|
        STRH     r2,[r3,#2]
        MOV      r0,#0
        LDR      r1,|L1.8724|
        STRB     r0,[r1,#0]
|L1.8080|
        MOV      r10,#0
        B        |L1.8320|
|L1.8086|
        MOVS     r0,#1
        LSL      r0,r0,r10
        LDR      r1,|L1.8744|
        LDR      r1,[r1,#0]  ; destroyed
        TST      r0,r1
        BNE      |L1.8316|
        LDR      r0,|L1.8748|
        LDRB     r0,[r0,#0]  ; invadersPerRow
        SDIV     r0,r10,r0
        ADD      r0,r0,r0,LSL #2
        LDR      r1,|L1.8720|
        LDRH     r1,[r1,#4]  ; invader
        ADD      r0,r1,r0,LSL #2
        LDR      r1,|L1.8752|
        LDRH     r1,[r1,#0]  ; invaders_x
        SUB      r0,r1,r0
        LDR      r1,|L1.8720|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.8748|
        LDRB     r0,[r0,#0]  ; invadersPerRow
        SDIV     r1,r10,r0
        MLS      r0,r0,r1,r10
        ADD      r0,r0,r0,LSL #3
        LDR      r1,|L1.8756|
        LDRH     r1,[r1,#0]  ; invaders_y
        ADD      r0,r1,r0,LSL #2
        LDR      r1,|L1.8720|
        STRH     r0,[r1,#2]
        MOV      r0,r1
        LDR      r1,[r0,#0]  ; invader
        STR      r1,[sp,#8]
        LDR      r0,[r0,#4]  ; invader
        STR      r0,[sp,#0xc]
        LDR      r0,|L1.8716|
        LDR      r1,[r0,#0]  ; ball
        STR      r1,[sp,#0]
        LDR      r0,[r0,#4]  ; ball
        STR      r0,[sp,#4]
        MOV      r1,r0
        LDRD     r2,r3,[sp,#8]
        LDR      r0,[sp,#0]
        BL       hitTest
        CBZ      r0,|L1.8314|
        LDR      r0,|L1.8728|
        LDRH     r0,[r0,#0]  ; bgColor
        LDR      r4,|L1.8720|
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]  ; invader
        LDRH     r2,[r4,#4]  ; invader
        LDRH     r1,[r4,#2]  ; invader
        LDRH     r0,[r4,#0]  ; invader
        BL       DrawRectangle
        LDR      r0,|L1.8760|
        LDRB     r0,[r0,#0]  ; num_destroyed
        ADD      r0,r0,#1
        LDR      r1,|L1.8760|
        STRB     r0,[r1,#0]
        MOV      r0,#1
        B        |L1.8234|
|L1.8232|
        B        |L1.8336|
|L1.8234|
        LSL      r0,r0,r10
        LDR      r1,|L1.8744|
        LDR      r1,[r1,#0]  ; destroyed
        ORR      r0,r0,r1
        LDR      r1,|L1.8744|
        STR      r0,[r1,#0]  ; destroyed
        LDR      r0,|L1.8704|
        LDRB     r0,[r0,#0]  ; vel_x_base
        LDR      r1,|L1.8708|
        STR      r0,[r1,#0]  ; vel_x
        LDR      r0,|L1.8712|
        LDRH     r0,[r0,#0]  ; pl1
        LDR      r1,|L1.8712|
        LDRH     r1,[r1,#4]  ; pl1
        ADD      r0,r0,r1
        LDR      r1,|L1.8716|
        STRH     r0,[r1,#0]
        MOV      r2,r4
        LDRH     r1,[r2,#6]  ; invader
        ADD      r2,r1,r1,LSR #31
        LDR      r3,|L1.8712|
        LDRH     r3,[r3,#2]  ; pl1
        ADD      r2,r3,r2,ASR #1
        LDR      r3,|L1.8716|
        LDRH     r0,[r3,#6]  ; ball
        ADD      r3,r0,r0,LSR #31
        SUB      r2,r2,r3,ASR #1
        LDR      r3,|L1.8716|
        STRH     r2,[r3,#2]
        MOV      r0,#0
        LDR      r1,|L1.8724|
        STRB     r0,[r1,#0]
        B        |L1.8334|
|L1.8314|
        B        |L1.8316|
|L1.8316|
        ADD      r10,r10,#1
|L1.8320|
        LDR      r0,|L1.8764|
        LDRB     r0,[r0,#0]  ; n_invaderRows
        LDR      r1,|L1.8748|
        LDRB     r1,[r1,#0]  ; invadersPerRow
        MULS     r0,r1,r0
        CMP      r0,r10
        BGT      |L1.8086|
|L1.8334|
        NOP      
|L1.8336|
        MOV      r0,#1
        LDR      r1,|L1.8768|
        STRB     r0,[r1,#0]
        MOV      r0,#0
        LDR      r1,|L1.8728|
        LDRH     r1,[r1,#0]  ; bgColor
        STRD     r1,r0,[sp,#0]
        LDR      r0,|L1.8712|
        LDRH     r1,[r0,#2]  ; pl1
        MOV      r3,#0xffff
        MOV      r2,#7
        MOV      r0,#0x28
        BL       PutFigure
        MOV      r0,#0
        LDR      r1,|L1.8768|
        STRB     r0,[r1,#0]
        LDR      r0,|L1.8772|
        LDRH     r0,[r0,#0]  ; color_ball
        LDR      r4,|L1.8716|
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]  ; ball
        LDRH     r2,[r4,#4]  ; ball
        LDRH     r1,[r4,#2]  ; ball
        LDRH     r0,[r4,#0]  ; ball
        BL       DrawRectangle
        MOV      r10,#0
        B        |L1.8466|
|L1.8410|
        MOVS     r0,#1
        LSL      r0,r0,r10
        LDR      r1,|L1.8700|
        LDRH     r1,[r1,#0]  ; misil_active
        TST      r0,r1
        BEQ      |L1.8462|
        MOVS     r0,#0
        LDR      r4,|L1.8684|
        ADD      r4,r4,r10,LSL #3
        STR      r0,[sp,#0]
        LDRH     r3,[r4,#6]
        LDR      r4,|L1.8684|
        ADD      r4,r4,r10,LSL #3
        LDRH     r2,[r4,#4]
        LDR      r4,|L1.8684|
        ADD      r4,r4,r10,LSL #3
        LDRH     r1,[r4,#2]
        LDR      r4,|L1.8684|
        LDRH     r0,[r4,r10,LSL #3]
        BL       DrawRectangle
|L1.8462|
        ADD      r10,r10,#1
|L1.8466|
        CMP      r10,#0xa
        BLT      |L1.8410|
        POP      {r0-r12,pc}
        ENDP

DrawInvaders PROC
        PUSH     {r2-r8,lr}
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        LDR      r0,|L1.8728|
        LDRH     r0,[r0,#0]  ; bgColor
        LDR      r6,|L1.8748|
        STR      r0,[sp,#0]
        LDRB     r6,[r6,#0]  ; invadersPerRow
        ADD      r6,r6,r6,LSL #3
        LSLS     r3,r6,#2
        LDR      r6,|L1.8764|
        LDRB     r6,[r6,#0]  ; n_invaderRows
        ADD      r6,r6,r6,LSL #2
        MOVS     r7,#1
        ADD      r2,r7,r6,LSL #2
        LDR      r6,|L1.8756|
        LDRH     r6,[r6,#0]  ; invaders_y
        SUBS     r6,r6,#1
        UXTH     r1,r6
        LDR      r6,|L1.8764|
        LDRB     r6,[r6,#0]  ; n_invaderRows
        ADD      r6,r6,r6,LSL #2
        ADD      r6,r7,r6,LSL #2
        LDR      r7,|L1.8752|
        LDRH     r7,[r7,#0]  ; invaders_x
        SUBS     r6,r7,r6
        UXTH     r0,r6
        BL       DrawRectangle
        MOV      r0,#1
        LDR      r1,|L1.8768|
        STRB     r0,[r1,#0]
        LDR      r0,|L1.8748|
        LDRB     r0,[r0,#0]  ; invadersPerRow
        ADD      r0,r0,r0,LSL #3
        MOV      r1,#0xa
        ADD      r0,r1,r0,LSL #2
        LDR      r1,|L1.8776|
        LDRH     r1,[r1,#0]  ; MAX_Y
        SUB      r0,r1,r0
        LDR      r1,|L1.8756|
        LDRH     r1,[r1,#0]  ; invaders_y
        CMP      r0,r1
        BGE      |L1.8616|
        MVN      r0,#4
        LDR      r1,|L1.8780|
        STR      r0,[r1,#0]  ; vel_invaders
        LDR      r0,|L1.8752|
        LDRH     r0,[r0,#0]  ; invaders_x
        SUB      r0,r0,#5
        LDR      r1,|L1.8752|
        STRH     r0,[r1,#0]
|L1.8616|
        LDR      r0,|L1.8756|
        LDRH     r0,[r0,#0]  ; invaders_y
        CMP      r0,#0xa
        BGE      |L1.8644|
        MOV      r0,#5
        LDR      r1,|L1.8780|
        STR      r0,[r1,#0]  ; vel_invaders
        LDR      r0,|L1.8752|
        LDRH     r0,[r0,#0]  ; invaders_x
        SUB      r0,r0,#5
        LDR      r1,|L1.8752|
        STRH     r0,[r1,#0]
|L1.8644|
        LDR      r0,|L1.8756|
        LDRH     r0,[r0,#0]  ; invaders_y
        LDR      r1,|L1.8780|
        LDR      r1,[r1,#0]  ; vel_invaders
        ADD      r0,r0,r1
        LDR      r1,|L1.8756|
        STRH     r0,[r1,#0]
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,#0
        MOV      r0,r1
        BL       Window
        MOV      r4,#0
        B        |L1.8906|
        DCW      0x0000
|L1.8684|
        DCD      misil
|L1.8688|
        DCD      lives
|L1.8692|
        DCD      game
|L1.8696|
        DCD      read_type
|L1.8700|
        DCD      misil_active
|L1.8704|
        DCD      vel_x_base
|L1.8708|
        DCD      vel_x
|L1.8712|
        DCD      pl1
|L1.8716|
        DCD      ball
|L1.8720|
        DCD      invader
|L1.8724|
        DCD      time_pong
|L1.8728|
        DCD      bgColor
|L1.8732|
        DCD      lowest_invader
|L1.8736|
        DCD      border_field
|L1.8740|
        DCD      MAX_X
|L1.8744|
        DCD      destroyed
|L1.8748|
        DCD      invadersPerRow
|L1.8752|
        DCD      invaders_x
|L1.8756|
        DCD      invaders_y
|L1.8760|
        DCD      num_destroyed
|L1.8764|
        DCD      n_invaderRows
|L1.8768|
        DCD      text_mode
|L1.8772|
        DCD      color_ball
|L1.8776|
        DCD      MAX_Y
|L1.8780|
        DCD      vel_invaders
|L1.8784|
        MOV      r5,#0
        B        |L1.8894|
|L1.8790|
        LDR      r0,|L1.8928|
        LDRB     r0,[r0,#0]  ; invadersPerRow
        MLA      r1,r0,r4,r5
        MOVS     r0,#1
        LSL      r0,r0,r1
        LDR      r1,|L1.8932|
        LDR      r1,[r1,#0]  ; destroyed
        TST      r0,r1
        BNE      |L1.8890|
        MOVS     r0,#3
        SDIV     r1,r4,r0
        MLS      r0,r0,r1,r4
        LDR      r1,|L1.8936|
        LDRH     r6,[r1,#0]  ; time_game
        ADD      r1,r6,r6,LSR #31
        ASRS     r1,r1,#1
        SUB      r1,r6,r1,LSL #1
        ADD      r0,r1,r0,LSL #1
        UXTH     r7,r0
        MOVS     r0,#0
        LDR      r1,|L1.8940|
        LDRH     r1,[r1,#0]  ; bgColor
        ADD      r2,r5,r5,LSL #3
        LDR      r3,|L1.8944|
        STRD     r1,r0,[sp,#0]
        LDRH     r3,[r3,#0]  ; invaders_y
        ADD      r2,r3,r2,LSL #2
        UXTH     r1,r2
        ADD      r2,r4,r4,LSL #2
        LDR      r3,|L1.8948|
        LDRH     r3,[r3,#0]  ; invaders_x
        SUB      r2,r3,r2,LSL #2
        UXTH     r0,r2
        MOV      r3,#0xffff
        MOV      r2,r7
        BL       PutFigure
|L1.8890|
        ADD      r5,r5,#1
|L1.8894|
        LDR      r0,|L1.8928|
        LDRB     r0,[r0,#0]  ; invadersPerRow
        CMP      r5,r0
        BLT      |L1.8790|
        ADD      r4,r4,#1
|L1.8906|
        LDR      r0,|L1.8952|
        LDRB     r0,[r0,#0]  ; n_invaderRows
        CMP      r4,r0
        BLT      |L1.8784|
        MOV      r0,#0
        LDR      r1,|L1.8956|
        STRB     r0,[r1,#0]
        POP      {r2-r8,pc}
        ENDP

        DCW      0x0000
|L1.8928|
        DCD      invadersPerRow
|L1.8932|
        DCD      destroyed
|L1.8936|
        DCD      time_game
|L1.8940|
        DCD      bgColor
|L1.8944|
        DCD      invaders_y
|L1.8948|
        DCD      invaders_x
|L1.8952|
        DCD      n_invaderRows
|L1.8956|
        DCD      text_mode

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=1

misil
        %        80

        AREA ||.data||, DATA, ALIGN=2

dir_ball
        DCB      0x00,0x00,0x00,0x00
vel_x
        DCD      0x00000003
vel_y
        DCD      0x00000000
color_ball
        DCW      0xffff
border_field
        DCB      0x0a
score1
        DCB      0x00
score2
        DCB      0x00
time_pong
        DCB      0x00
detect_width_zone
        DCW      0x7c3e
bgColor
        DCW      0x2222
newGame
        DCB      0x01,0x00
lowest_invader
        DCW      0x0064
num_destroyed
        DCB      0x00,0x00
destroyed
        DCD      0x00000000
vel_invaders
        DCD      0x00000005
game
        DCB      0x00,0x00
time_game
        DCW      0x0000
n_invaderRows
        DCB      0x06
invadersPerRow
        DCB      0x05
misil_active
        DCW      0x0000
lives
        DCB      0x03
vel_x_base
        DCB      0x03
vel_y_base
        DCB      0x06,0x00
invaders_x
        DCW      0x012b
invaders_y
        DCW      0x0014
figures
        DCW      0x03c0,0x1ff8
        DCW      0x3ffc,0x399c
        DCW      0x3ffc,0x0660
        DCW      0x0db0,0x300c
        DCW      0x03c0,0x1ff8
        DCW      0x3ffc,0x399c
        DCW      0x3ffc,0x0e70
        DCW      0x1998,0x0c30
        DCW      0x0820,0x2448
        DCW      0x2fe8,0x3bb8
        DCW      0x3ff8,0x1ff0
        DCW      0x0820,0x1010
        DCW      0x0820,0x0440
        DCW      0x0fe0,0x1bb0
        DCW      0x3ff8,0x2fe8
        DCW      0x2828,0x06c0
        DCW      0x0180,0x03c0
        DCW      0x07e0,0x0db0
        DCW      0x0ff0,0x05a0
        DCW      0x0810,0x0420
        DCW      0x0180,0x03c0
        DCW      0x07e0,0x0db0
        DCW      0x0ff0,0x0240
        DCW      0x05a0,0x0a50
        DCW      0x0000,0x07e0
        DCW      0x1ff8,0x3ffc
        DCW      0x6db6,0xffff
        DCW      0x398e,0x1004
        DCW      0x0180,0x03c0
        DCW      0x07e0,0x0660
        DCW      0x07e0,0x0ff0
        DCW      0x0bd0,0x0810
player1_y
        DCB      0x00,0x00
player2_y
        DCB      0x00,0x00
pl1
        %        8
pl2
        %        8
ball
        %        8
invader
        %        8
desp_x
        DCD      0x00000000
desp_y
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "OV7670\\OV7670_PONG.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___13_OV7670_PONG_c_dir_ball____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_OV7670_PONG_c_dir_ball____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___13_OV7670_PONG_c_dir_ball____REVSH|
#line 128
|__asm___13_OV7670_PONG_c_dir_ball____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT masscentre_detect_players [CODE]
        EXPORT hitTest [CODE]
        EXPORT Detect_for_games [CODE]
        EXPORT init_PONG [CODE]
        EXPORT PONG [CODE]
        EXPORT init_space [CODE]
        EXPORT space_invaders [CODE]
        EXPORT DrawInvaders [CODE]
        EXPORT misil [DATA,SIZE=80]
        EXPORT dir_ball [DATA,SIZE=1]
        EXPORT vel_x [DATA,SIZE=4]
        EXPORT vel_y [DATA,SIZE=4]
        EXPORT color_ball [DATA,SIZE=2]
        EXPORT border_field [DATA,SIZE=1]
        EXPORT score1 [DATA,SIZE=1]
        EXPORT score2 [DATA,SIZE=1]
        EXPORT time_pong [DATA,SIZE=1]
        EXPORT detect_width_zone [DATA,SIZE=2]
        EXPORT bgColor [DATA,SIZE=2]
        EXPORT newGame [DATA,SIZE=1]
        EXPORT lowest_invader [DATA,SIZE=2]
        EXPORT num_destroyed [DATA,SIZE=1]
        EXPORT destroyed [DATA,SIZE=4]
        EXPORT vel_invaders [DATA,SIZE=4]
        EXPORT game [DATA,SIZE=1]
        EXPORT time_game [DATA,SIZE=2]
        EXPORT n_invaderRows [DATA,SIZE=1]
        EXPORT invadersPerRow [DATA,SIZE=1]
        EXPORT misil_active [DATA,SIZE=2]
        EXPORT lives [DATA,SIZE=1]
        EXPORT vel_x_base [DATA,SIZE=1]
        EXPORT vel_y_base [DATA,SIZE=1]
        EXPORT invaders_x [DATA,SIZE=2]
        EXPORT invaders_y [DATA,SIZE=2]
        EXPORT figures [DATA,SIZE=128]
        EXPORT player1_y [DATA,SIZE=2]
        EXPORT player2_y [DATA,SIZE=2]
        EXPORT pl1 [DATA,SIZE=8]
        EXPORT pl2 [DATA,SIZE=8]
        EXPORT ball [DATA,SIZE=8]
        EXPORT invader [DATA,SIZE=8]
        EXPORT desp_x [DATA,SIZE=4]
        EXPORT desp_y [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT total_mass [DATA]
        IMPORT scn_zone [DATA]
        IMPORT Window [CODE]
        IMPORT LCD_SetCursor [CODE]
        IMPORT masscentre_detect [CODE]
        IMPORT fps_aux [DATA]
        IMPORT cd_R [DATA]
        IMPORT umbral [DATA]
        IMPORT cd_G [DATA]
        IMPORT cd_B [DATA]
        IMPORT color_detect [DATA]
        IMPORT LCD_Clear [CODE]
        IMPORT conversor_IaS [CODE]
        IMPORT GUI_Text [CODE]
        IMPORT LCD_DrawLine [CODE]
        IMPORT DrawRectangle [CODE]
        IMPORT __aeabi_ui2f [CODE]
        IMPORT __aeabi_fdiv [CODE]
        IMPORT __aeabi_f2d [CODE]
        IMPORT __aeabi_dadd [CODE]
        IMPORT __aeabi_i2d [CODE]
        IMPORT __aeabi_dmul [CODE]
        IMPORT __aeabi_d2iz [CODE]
        IMPORT DMA_DAC_audio_Channel_Init [CODE]
        IMPORT delay_read [DATA]
        IMPORT muelle [DATA]
        IMPORT MAX_X [DATA]
        IMPORT MAX_Y [DATA]
        IMPORT PutFigure [CODE]
        IMPORT read_type [DATA]
        IMPORT text_mode [DATA]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
