; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--debug -c --asm -ofunciones_servos.o --depend=funciones_servos.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=funciones_servos.crf SERVOS\funciones_servos.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

NVIC_SetPriority PROC
        PUSH     {r4,lr}
        CMP      r0,#0
        BGE      |L1.28|
        LSL      r2,r1,#27
        LSR      r4,r2,#24
        LDR      r2,|L1.1032|
        AND      r3,r0,#0xf
        SUB      r3,r3,#4
        STRB     r4,[r2,r3]
        B        |L1.40|
|L1.28|
        LSL      r2,r1,#27
        LSR      r3,r2,#24
        LDR      r2,|L1.1036|
        STRB     r3,[r2,r0]
|L1.40|
        POP      {r4,pc}
        ENDP

Init_PWM PROC
        LDR      r0,|L1.1040|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x40
        LDR      r1,|L1.1044|
        STR      r0,[r1,#0xc4]
        LDR      r0,|L1.1048|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#2
        LDR      r1,|L1.1048|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x800
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#2
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#0x800
        STR      r0,[r1,#0x10]
        LDR      r0,|L1.1052|
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x300000
        LDR      r1,|L1.1052|
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0xc0000
        STR      r0,[r1,#0x1c]
        MOV      r0,#2
        LDR      r1,|L1.1056|
        STR      r0,[r1,#4]
        MOV      r0,#0x18
        STR      r0,[r1,#0xc]
        MOV      r0,#2
        STR      r0,[r1,#0x14]
        MOV      r0,#0x1770
        STR      r0,[r1,#0x18]
        MOV      r0,#0xbb8
        STR      r0,[r1,#0x24]
        STR      r0,[r1,#0x20]
        MOV      r0,r1
        LDR      r0,[r0,#0x50]
        ORR      r0,r0,#0xd
        STR      r0,[r1,#0x50]
        MOV      r0,r1
        LDR      r0,[r0,#0x4c]
        ORR      r0,r0,#0xc00
        STR      r0,[r1,#0x4c]
        MOV      r0,#9
        STR      r0,[r1,#4]
        BX       lr
        ENDP

Init_MAT PROC
        PUSH     {r4,lr}
        LDR      r0,|L1.1040|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#2
        LDR      r1,|L1.1044|
        STR      r0,[r1,#0xc4]
        MOV      r0,#0x40004000
        LDR      r0,[r0,#0x70]
        BIC      r0,r0,#3
        MOV      r1,#0x40004000
        STR      r0,[r1,#0x70]
        MOV      r0,#3
        STR      r0,[r1,#4]
        MOV      r0,#0
        STR      r0,[r1,#4]
        LDR      r0,|L1.1044|
        LDR      r0,[r0,#0x1a8]
        BIC      r0,r0,#0xc
        LDR      r1,|L1.1060|
        STR      r0,[r1,#0]
        MOV      r0,#0x18
        MOV      r1,#0x40004000
        STR      r0,[r1,#0xc]
        MOV      r1,#2
        MOV      r0,#1
        BL       NVIC_SetPriority
        MOVS     r0,#1
        BL       NVIC_EnableIRQ
        MOV      r0,#0x40004000
        LDR      r0,[r0,#0x14]
        BIC      r0,r0,#0x38
        MOV      r1,#0x40004000
        STR      r0,[r1,#0x14]
        MOV      r0,r1
        LDR      r0,[r0,#4]
        ORR      r0,r0,#1
        STR      r0,[r1,#4]
        MOV      r0,r1
        LDR      r0,[r0,#8]
        MOV      r1,#0x2710
        ADD      r0,r0,r1
        MOV      r1,#0x40004000
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#8]
        ADD      r0,r0,#0x3e8
        STR      r0,[r1,#0x20]
        MOV      r0,r1
        LDR      r0,[r0,#0x14]
        ORR      r0,r0,#0x48
        STR      r0,[r1,#0x14]
        POP      {r4,pc}
        ENDP

Init_ADC PROC
        PUSH     {r4,lr}
        LDR      r0,|L1.1040|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x1000
        LDR      r1,|L1.1044|
        STR      r0,[r1,#0xc4]
        MOV      r0,#0xa00
        LDR      r1,|L1.1064|
        STR      r0,[r1,#0]
        LDR      r0,|L1.1052|
        LDR      r0,[r0,#0xc]
        ORR      r0,r0,#0x30000000
        LDR      r1,|L1.1052|
        STR      r0,[r1,#0xc]
        MOV      r0,r1
        LDR      r0,[r0,#0xc]
        ORR      r0,r0,#0xc0000000
        STR      r0,[r1,#0xc]
        MOV      r0,r1
        LDR      r0,[r0,#0x4c]
        BIC      r0,r0,#0x30000000
        STR      r0,[r1,#0x4c]
        MOV      r0,r1
        LDR      r0,[r0,#0x4c]
        BIC      r0,r0,#0xc0000000
        STR      r0,[r1,#0x4c]
        MOV      r0,r1
        LDR      r0,[r0,#0x4c]
        ORR      r0,r0,#0x20000000
        STR      r0,[r1,#0x4c]
        MOV      r0,r1
        LDR      r0,[r0,#0x4c]
        ORR      r0,r0,#0x80000000
        STR      r0,[r1,#0x4c]
        LDR      r0,|L1.1064|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x10
        LDR      r1,|L1.1064|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        BIC      r0,r0,#0x7000000
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0xc]
        BIC      r0,r0,#0x100
        STR      r0,[r1,#0xc]
        MOV      r0,r1
        LDR      r0,[r0,#0xc]
        ORR      r0,r0,#0x10
        STR      r0,[r1,#0xc]
        MOV      r0,r1
        LDR      r0,[r0,#0xc]
        ORR      r0,r0,#0x20
        STR      r0,[r1,#0xc]
        MOV      r1,#5
        MOV      r0,#0x16
        BL       NVIC_SetPriority
        MOVS     r0,#0x16
        BL       NVIC_EnableIRQ
        BL       Init_MAT
        LDR      r0,|L1.1064|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x200000
        LDR      r1,|L1.1064|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x1000000
        STR      r0,[r1,#0]
        POP      {r4,pc}
        ENDP

PWM_Azimut_Set PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r1,|L1.1068|
        MOV      r0,r4
        BL       __aeabi_fmul
        MOV      r5,r0
        BL       __aeabi_f2uiz
        LDR      r1,|L1.1056|
        STR      r0,[r1,#0x20]
        MOV      r0,r1
        LDR      r0,[r0,#0x50]
        ORR      r0,r0,#4
        STR      r0,[r1,#0x50]
        POP      {r4-r6,pc}
        ENDP

PWM_Altura_Set PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        LDR      r1,|L1.1068|
        MOV      r0,r4
        BL       __aeabi_fmul
        MOV      r5,r0
        BL       __aeabi_f2uiz
        LDR      r1,|L1.1056|
        STR      r0,[r1,#0x24]
        MOV      r0,r1
        LDR      r0,[r0,#0x50]
        ORR      r0,r0,#8
        STR      r0,[r1,#0x50]
        POP      {r4-r6,pc}
        ENDP

New_pos PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r0,r4
        BL       PWM_Azimut_Set
        MOV      r0,r5
        BL       PWM_Altura_Set
        POP      {r4-r6,pc}
        ENDP

Control_PID PROC
        PUSH     {r0-r12,lr}
        LDR      r0,|L1.1072|
        LDR      r1,[r0,#0]  ; x_ant
        LDR      r0,|L1.1076|
        LDR      r0,[r0,#0]  ; x
        BL       __aeabi_fsub
        MOV      r4,r0
        LDR      r0,|L1.1080|
        LDR      r1,[r0,#0]  ; cons_dif_x
        MOV      r0,r4
        BL       __aeabi_fmul
        STR      r0,[sp,#0xc]
        LDR      r0,|L1.1084|
        LDR      r1,[r0,#0]  ; y_ant
        LDR      r0,|L1.1088|
        LDR      r0,[r0,#0]  ; y
        BL       __aeabi_fsub
        MOV      r4,r0
        LDR      r0,|L1.1092|
        LDR      r1,[r0,#0]  ; cons_dif_y
        MOV      r0,r4
        BL       __aeabi_fmul
        STR      r0,[sp,#8]
        LDR      r0,|L1.1096|
        LDR      r1,[r0,#0]  ; umbral_x
        LDR      r0,|L1.1076|
        LDR      r0,[r0,#0]  ; x
        BL       __aeabi_fsub
        MOV      r4,r0
        LDR      r0,|L1.1100|
        LDR      r1,[r0,#0]  ; cons_pro_x
        MOV      r0,r4
        BL       __aeabi_fmul
        STR      r0,[sp,#4]
        LDR      r0,|L1.1104|
        LDR      r1,[r0,#0]  ; umbral_y
        LDR      r0,|L1.1088|
        LDR      r0,[r0,#0]  ; y
        BL       __aeabi_fsub
        MOV      r4,r0
        LDR      r0,|L1.1108|
        LDR      r1,[r0,#0]  ; cons_pro_y
        MOV      r0,r4
        BL       __aeabi_fmul
        STR      r0,[sp,#0]
        LDR      r1,[sp,#0xc]
        LDR      r0,[sp,#4]
        BL       __aeabi_fadd
        MOV      r7,r0
        LDR      r1,[sp,#8]
        LDR      r0,[sp,#0]
        BL       __aeabi_fadd
        MOV      r6,r0
        LDR      r0,|L1.1112|
        LDRB     r0,[r0,#0]  ; modo
        CMP      r0,#0
        BNE      |L1.864|
        LDR      r0,|L1.1072|
        LDR      r1,[r0,#0]  ; x_ant
        LDR      r0,|L1.1076|
        LDR      r0,[r0,#0]  ; x
        BL       __aeabi_fsub
        MOV      r4,r0
        LDR      r0,|L1.1080|
        LDR      r1,[r0,#0]  ; cons_dif_x
        MOV      r0,r4
        BL       __aeabi_fmul
        STR      r0,[sp,#0xc]
        LDR      r0,|L1.1084|
        LDR      r1,[r0,#0]  ; y_ant
        LDR      r0,|L1.1088|
        LDR      r0,[r0,#0]  ; y
        BL       __aeabi_fsub
        MOV      r4,r0
        LDR      r0,|L1.1092|
        LDR      r1,[r0,#0]  ; cons_dif_y
        MOV      r0,r4
        BL       __aeabi_fmul
        STR      r0,[sp,#8]
        LDR      r0,|L1.1076|
        LDR      r1,[r0,#0]  ; x
        LDR      r0,|L1.1096|
        LDR      r0,[r0,#0]  ; umbral_x
        BL       __aeabi_fsub
        MOV      r4,r0
        LDR      r0,|L1.1100|
        LDR      r1,[r0,#0]  ; cons_pro_x
        MOV      r0,r4
        BL       __aeabi_fmul
        STR      r0,[sp,#4]
        LDR      r0,|L1.1088|
        LDR      r1,[r0,#0]  ; y
        LDR      r0,|L1.1104|
        LDR      r0,[r0,#0]  ; umbral_y
        BL       __aeabi_fsub
        MOV      r4,r0
        LDR      r0,|L1.1108|
        LDR      r1,[r0,#0]  ; cons_pro_y
        MOV      r0,r4
        BL       __aeabi_fmul
        STR      r0,[sp,#0]
        LDR      r1,[sp,#0xc]
        LDR      r0,[sp,#4]
        BL       __aeabi_fadd
        MOV      r7,r0
        LDR      r1,[sp,#8]
        LDR      r0,[sp,#0]
        BL       __aeabi_fadd
        MOV      r6,r0
|L1.864|
        LDR      r0,|L1.1096|
        LDR      r0,[r0,#0]  ; umbral_x
        BL       __aeabi_f2d
        MOV      r10,r0
        LDR      r2,|L1.1116|
        LDR      r3,|L1.1120|
        BL       __aeabi_dadd
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,|L1.1076|
        LDR      r0,[r0,#0]  ; x
        BL       __aeabi_f2d
        MOV      r8,r0
        MOV      r2,r4
        MOV      r3,r5
        BL       __aeabi_cdcmple
        BCS      |L1.986|
        LDR      r0,|L1.1096|
        LDR      r0,[r0,#0]  ; umbral_x
        BL       __aeabi_f2d
        MOV      r10,r0
        LDR      r2,|L1.1116|
        LDR      r3,|L1.1120|
        BL       __aeabi_dsub
        MOV      r4,r0
        MOV      r5,r1
        LDR      r0,|L1.1076|
        LDR      r0,[r0,#0]  ; x
        BL       __aeabi_f2d
        MOV      r8,r0
        MOV      r2,r4
        MOV      r3,r5
        BL       __aeabi_cdrcmple
        BCS      |L1.986|
        MOV      r7,#0
        LDR      r0,|L1.1048|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#2
        LDR      r1,|L1.1048|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#2
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#2
        STR      r0,[r1,#0x10]
        B        |L1.1172|
|L1.986|
        MOVS     r1,#0
        LDR      r0,[sp,#4]
        BL       __aeabi_cfrcmple
        BCS      |L1.1136|
        MOV      r1,r7
        MOV      r0,#0x3f800000
        BL       __aeabi_fsub
        MOV      r7,r0
        LDR      r0,|L1.1048|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#2
        LDR      r1,|L1.1048|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#2
        STR      r0,[r1,#0x18]
        B        |L1.1124|
|L1.1032|
        DCD      0xe000ed18
|L1.1036|
        DCD      0xe000e400
|L1.1040|
        DCD      0x400fc0c4
|L1.1044|
        DCD      0x400fc000
|L1.1048|
        DCD      0x2009c000
|L1.1052|
        DCD      0x4002c000
|L1.1056|
        DCD      0x40018000
|L1.1060|
        DCD      0x400fc1a8
|L1.1064|
        DCD      0x40034000
|L1.1068|
        DCD      0x45bb8000
|L1.1072|
        DCD      x_ant
|L1.1076|
        DCD      x
|L1.1080|
        DCD      cons_dif_x
|L1.1084|
        DCD      y_ant
|L1.1088|
        DCD      y
|L1.1092|
        DCD      cons_dif_y
|L1.1096|
        DCD      umbral_x
|L1.1100|
        DCD      cons_pro_x
|L1.1104|
        DCD      umbral_y
|L1.1108|
        DCD      cons_pro_y
|L1.1112|
        DCD      modo
|L1.1116|
        DCD      0x47ae147b
|L1.1120|
        DCD      0x3f847ae1
|L1.1124|
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#2
        STR      r0,[r1,#0x10]
        B        |L1.1172|
|L1.1136|
        EOR      r7,r7,#0x80000000
        LDR      r0,|L1.1788|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#2
        LDR      r1,|L1.1788|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#2
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#2
        STR      r0,[r1,#0x10]
|L1.1172|
        LDR      r0,|L1.1792|
        LDR      r0,[r0,#0]  ; umbral_y
        BL       __aeabi_f2d
        MOV      r4,r0
        LDR      r2,|L1.1796|
        LDR      r3,|L1.1800|
        BL       __aeabi_dadd
        MOV      r8,r0
        MOV      r9,r1
        LDR      r0,|L1.1804|
        LDR      r0,[r0,#0]  ; y
        BL       __aeabi_f2d
        MOV      r10,r0
        MOV      r2,r8
        MOV      r3,r9
        BL       __aeabi_cdcmple
        BCS      |L1.1294|
        LDR      r0,|L1.1792|
        LDR      r0,[r0,#0]  ; umbral_y
        BL       __aeabi_f2d
        MOV      r4,r0
        LDR      r2,|L1.1796|
        LDR      r3,|L1.1800|
        BL       __aeabi_dsub
        MOV      r8,r0
        MOV      r9,r1
        LDR      r0,|L1.1804|
        LDR      r0,[r0,#0]  ; y
        BL       __aeabi_f2d
        MOV      r10,r0
        MOV      r2,r8
        MOV      r3,r9
        BL       __aeabi_cdrcmple
        BCS      |L1.1294|
        MOV      r6,#0
        LDR      r0,|L1.1788|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#0x800
        LDR      r1,|L1.1788|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x800
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#0x800
        STR      r0,[r1,#0x10]
        B        |L1.1386|
|L1.1294|
        MOVS     r1,#0
        LDR      r0,[sp,#0]
        BL       __aeabi_cfrcmple
        BCS      |L1.1350|
        MOV      r1,r6
        MOV      r0,#0x3f800000
        BL       __aeabi_fsub
        MOV      r6,r0
        LDR      r0,|L1.1788|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#0x800
        LDR      r1,|L1.1788|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x800
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#0x800
        STR      r0,[r1,#0x10]
        B        |L1.1386|
|L1.1350|
        EOR      r6,r6,#0x80000000
        LDR      r0,|L1.1788|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#0x800
        LDR      r1,|L1.1788|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x800
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#0x800
        STR      r0,[r1,#0x10]
|L1.1386|
        LDR      r0,|L1.1808|
        LDR      r0,[r0,#0]  ; ADC_x
        BL       __aeabi_f2d
        MOV      r4,r0
        LDR      r2,|L1.1812|
        LDR      r3,|L1.1816|
        BL       __aeabi_cdcmple
        BCC      |L1.1426|
        LDR      r0,|L1.1808|
        LDR      r0,[r0,#0]  ; ADC_x
        BL       __aeabi_f2d
        MOV      r4,r0
        LDR      r2,|L1.1820|
        LDR      r3,|L1.1824|
        BL       __aeabi_cdrcmple
        BCS      |L1.1558|
|L1.1426|
        LDR      r0,|L1.1808|
        LDR      r0,[r0,#0]  ; ADC_x
        BL       __aeabi_f2d
        MOV      r4,r0
        LDR      r2,|L1.1812|
        LDR      r3,|L1.1816|
        BL       __aeabi_cdcmple
        BCS      |L1.1492|
        MOVS     r1,#0
        LDR      r0,[sp,#4]
        BL       __aeabi_cfrcmple
        BCS      |L1.1492|
        MOV      r7,#0
        LDR      r0,|L1.1788|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#2
        LDR      r1,|L1.1788|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#2
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#2
        STR      r0,[r1,#0x10]
|L1.1492|
        LDR      r0,|L1.1808|
        LDR      r0,[r0,#0]  ; ADC_x
        BL       __aeabi_f2d
        MOV      r4,r0
        LDR      r2,|L1.1820|
        LDR      r3,|L1.1824|
        BL       __aeabi_cdrcmple
        BCS      |L1.1558|
        MOVS     r1,#0
        LDR      r0,[sp,#4]
        BL       __aeabi_cfcmple
        BCS      |L1.1558|
        MOV      r7,#0x3f800000
        LDR      r0,|L1.1788|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#2
        LDR      r1,|L1.1788|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#2
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#2
        STR      r0,[r1,#0x10]
|L1.1558|
        LDR      r0,|L1.1828|
        LDR      r0,[r0,#0]  ; ADC_y
        BL       __aeabi_f2d
        MOV      r4,r0
        LDR      r2,|L1.1832|
        LDR      r3,|L1.1836|
        BL       __aeabi_cdcmple
        BCC      |L1.1598|
        LDR      r0,|L1.1828|
        LDR      r0,[r0,#0]  ; ADC_y
        BL       __aeabi_f2d
        MOV      r4,r0
        LDR      r2,|L1.1832|
        LDR      r3,|L1.1840|
        BL       __aeabi_cdrcmple
        BCS      |L1.1730|
|L1.1598|
        LDR      r0,|L1.1828|
        LDR      r0,[r0,#0]  ; ADC_y
        BL       __aeabi_f2d
        MOV      r4,r0
        LDR      r2,|L1.1832|
        LDR      r3,|L1.1836|
        BL       __aeabi_cdcmple
        BCS      |L1.1664|
        MOVS     r1,#0
        LDR      r0,[sp,#0]
        BL       __aeabi_cfrcmple
        BCS      |L1.1664|
        MOV      r6,#0
        LDR      r0,|L1.1788|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#0x800
        LDR      r1,|L1.1788|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x1c]
        ORR      r0,r0,#0x800
        STR      r0,[r1,#0x1c]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#0x800
        STR      r0,[r1,#0x10]
|L1.1664|
        LDR      r0,|L1.1828|
        LDR      r0,[r0,#0]  ; ADC_y
        BL       __aeabi_f2d
        MOV      r4,r0
        LDR      r2,|L1.1832|
        LDR      r3,|L1.1840|
        BL       __aeabi_cdrcmple
        BCS      |L1.1730|
        MOVS     r1,#0
        LDR      r0,[sp,#0]
        BL       __aeabi_cfcmple
        BCS      |L1.1730|
        MOV      r6,#0x3f800000
        LDR      r0,|L1.1788|
        LDR      r0,[r0,#0x10]
        BIC      r0,r0,#0x800
        LDR      r1,|L1.1788|
        STR      r0,[r1,#0x10]
        MOV      r0,r1
        LDR      r0,[r0,#0x18]
        ORR      r0,r0,#0x800
        STR      r0,[r1,#0x18]
        MOV      r0,r1
        LDR      r0,[r0,#0x10]
        ORR      r0,r0,#0x800
        STR      r0,[r1,#0x10]
|L1.1730|
        MOV      r1,r7
        MOV      r0,r6
        BL       New_pos
        LDR      r0,|L1.1844|
        LDR      r0,[r0,#0]  ; x
        LDR      r1,|L1.1848|
        STR      r0,[r1,#0]  ; x_ant
        LDR      r0,|L1.1804|
        LDR      r0,[r0,#0]  ; y
        LDR      r1,|L1.1852|
        STR      r0,[r1,#0]  ; y_ant
        POP      {r0-r12,pc}
        ENDP

NVIC_EnableIRQ PROC
        AND      r2,r0,#0x1f
        MOV      r1,#1
        LSL      r1,r1,r2
        LSR      r2,r0,#5
        MOV      r3,#0xe000e000
        ADD      r2,r3,r2,LSL #2
        STR      r1,[r2,#0x100]
        BX       lr
        ENDP

|L1.1788|
        DCD      0x2009c000
|L1.1792|
        DCD      umbral_y
|L1.1796|
        DCD      0x47ae147b
|L1.1800|
        DCD      0x3f847ae1
|L1.1804|
        DCD      y
|L1.1808|
        DCD      ADC_x
|L1.1812|
        DCD      0x1eb851ec
|L1.1816|
        DCD      0x3fc1eb85
|L1.1820|
        DCD      0xcccccccd
|L1.1824|
        DCD      0x3feccccc
|L1.1828|
        DCD      ADC_y
|L1.1832|
        DCD      0x9999999a
|L1.1836|
        DCD      0x3fb99999
|L1.1840|
        DCD      0x3fe99999
|L1.1844|
        DCD      x
|L1.1848|
        DCD      x_ant
|L1.1852|
        DCD      y_ant

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "SERVOS\\funciones_servos.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_funciones_servos_c_Init_PWM____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___18_funciones_servos_c_Init_PWM____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___18_funciones_servos_c_Init_PWM____REVSH|
#line 128
|__asm___18_funciones_servos_c_Init_PWM____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT Init_PWM [CODE]
        EXPORT Init_MAT [CODE]
        EXPORT Init_ADC [CODE]
        EXPORT PWM_Azimut_Set [CODE]
        EXPORT PWM_Altura_Set [CODE]
        EXPORT New_pos [CODE]
        EXPORT Control_PID [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT __aeabi_fmul [CODE]
        IMPORT __aeabi_f2uiz [CODE]
        IMPORT __aeabi_fsub [CODE]
        IMPORT __aeabi_fadd [CODE]
        IMPORT __aeabi_f2d [CODE]
        IMPORT __aeabi_dadd [CODE]
        IMPORT __aeabi_cdcmple [CODE]
        IMPORT __aeabi_dsub [CODE]
        IMPORT __aeabi_cdrcmple [CODE]
        IMPORT __aeabi_cfrcmple [CODE]
        IMPORT __aeabi_cfcmple [CODE]
        IMPORT x_ant [DATA]
        IMPORT x [DATA]
        IMPORT cons_dif_x [DATA]
        IMPORT y_ant [DATA]
        IMPORT y [DATA]
        IMPORT cons_dif_y [DATA]
        IMPORT umbral_x [DATA]
        IMPORT cons_pro_x [DATA]
        IMPORT umbral_y [DATA]
        IMPORT cons_pro_y [DATA]
        IMPORT modo [DATA]
        IMPORT ADC_x [DATA]
        IMPORT ADC_y [DATA]

        KEEP NVIC_SetPriority
        KEEP NVIC_EnableIRQ

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
