; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--debug -c --asm -ouart.o --depend=uart.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=uart.crf UART\uart.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

uart0_set_baudrate PROC
        PUSH     {r3-r11,lr}
        MOV      r1,r0
        MOV      r0,#0xffffffff
        LDR      r11,|L1.1284|
        LDR      r11,[r11,#0]  ; SystemCoreClock
        LSR      r8,r11,#2
        MOV      r6,#0
        MOV      r7,#0
        MOV      r3,#0
        MOV      r10,#1
        MOV      r11,#0
        STR      r11,[sp,#0]
        MOV      r9,#0
        MOV      r5,#0
        LDR      r12,|L1.1288|
        LSR      r8,r8,#4
        MOV      r2,#1
        B        |L1.170|
|L1.68|
        MOV      r4,#0
        B        |L1.156|
|L1.74|
        MUL      r11,r2,r8
        ADD      lr,r2,r4
        UDIV     r7,r11,lr
        UDIV     r3,r7,r1
        UDIV     r11,r7,r1
        MLS      r11,r1,r11,r7
        CMP      r11,r1,LSR #1
        BLS      |L1.108|
        ADD      r3,r3,#1
|L1.108|
        CMP      r3,#2
        BLS      |L1.152|
        CMP      r3,#0x10000
        BCS      |L1.152|
        UDIV     r6,r7,r3
        CMP      r6,r1
        BHI      |L1.132|
        SUB      r5,r1,r6
        B        |L1.136|
|L1.132|
        SUB      r5,r6,r1
|L1.136|
        CMP      r5,r12
        BCS      |L1.152|
        MOV      r10,r2
        STR      r4,[sp,#0]
        MOV      r9,r3
        MOV      r12,r5
        CBNZ     r5,|L1.152|
        B        |L1.160|
|L1.152|
        ADD      r4,r4,#1
|L1.156|
        CMP      r4,#0xf
        BLS      |L1.74|
|L1.160|
        NOP      
        CBNZ     r5,|L1.166|
        B        |L1.174|
|L1.166|
        ADD      r2,r2,#1
|L1.170|
        CMP      r2,#0xf
        BLS      |L1.68|
|L1.174|
        NOP      
        ADD      r11,r1,r1,LSL #1
        MOV      lr,#0x64
        UDIV     r11,r11,lr
        CMP      r11,r12
        BLS      |L1.270|
        LDR      r11,|L1.1292|
        LDRB     r11,[r11,#0xc]
        ORR      r11,r11,#0x80
        LDR      lr,|L1.1292|
        STRB     r11,[lr,#0xc]
        LSR      r11,r9,#8
        STRB     r11,[lr,#4]
        STRB     r9,[lr,#0]
        MOV      r11,lr
        LDRB     r11,[r11,#0xc]
        BIC      r11,r11,#0x80
        STRB     r11,[lr,#0xc]
        MOV      r11,#0xf0
        AND      r11,r11,r10,LSL #4
        LDR      lr,[sp,#0]
        AND      lr,lr,#0xf
        ORR      r11,r11,lr
        LDR      lr,|L1.1292|
        STRB     r11,[lr,#0x28]
        MOV      r0,#0
|L1.270|
        POP      {r3-r11,pc}
        ENDP

Init_UART0 PROC
        PUSH     {r4,r5,lr}
        MOV      r4,r0
        LDR      r0,|L1.1296|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x10
        LDR      r1,|L1.1296|
        STR      r0,[r1,#0]
        MOV      r0,r1
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x40
        STR      r0,[r1,#0]
        LDR      r0,|L1.1292|
        LDRB     r0,[r0,#0xc]
        ORR      r0,r0,#3
        LDR      r1,|L1.1292|
        STRB     r0,[r1,#0xc]
        MOV      r0,r4
        BL       uart0_set_baudrate
        LDR      r0,|L1.1292|
        LDR      r0,[r0,#4]
        ORR      r0,r0,#2
        LDR      r1,|L1.1292|
        STR      r0,[r1,#4]
        MOV      r0,r1
        LDR      r0,[r0,#4]
        ORR      r0,r0,#1
        STR      r0,[r1,#4]
        MOV      r0,#5
        MOV      r1,r0
        CMP      r0,#0
        BGE      |L1.372|
        LSL      r2,r1,#27
        LSR      r5,r2,#24
        LDR      r2,|L1.1300|
        AND      r3,r0,#0xf
        SUB      r3,r3,#4
        STRB     r5,[r2,r3]
        B        |L1.384|
|L1.372|
        LSL      r2,r1,#27
        LSR      r3,r2,#24
        LDR      r2,|L1.1304|
        STRB     r3,[r2,r0]
|L1.384|
        NOP      
        MOV      r0,#5
        MOV      r1,#1
        LSL      r1,r1,r0
        LSR      r2,r0,#5
        MOV      r3,#0xe000e000
        ADD      r2,r3,r2,LSL #2
        STR      r1,[r2,#0x100]
        NOP      
        POP      {r4,r5,pc}
        ENDP

tx_cadena_UART0 PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,#0
        MOV      r0,r5
        BL       strlen
        LDR      r1,|L1.1308|
        LDR      r1,[r1,#0]  ; pos_cadena
        ADD      r0,r0,r1
        MOV      r1,#0x79e
        CMP      r0,r1
        BCC      |L1.462|
        NOP      
|L1.448|
        LDR      r0,|L1.1308|
        LDR      r0,[r0,#0]  ; pos_cadena
        CMP      r0,#0
        BNE      |L1.448|
        ADR      r0,|L1.1312|
        BL       tx_cadena_UART0
|L1.462|
        MOV      r4,#0
        B        |L1.484|
|L1.468|
        LDRB     r0,[r5,r4]
        LDR      r1,|L1.1316|
        LDR      r2,|L1.1308|
        LDR      r2,[r2,#0]  ; pos_cadena
        ADD      r1,r1,r2
        STRB     r0,[r1,r4]
        ADD      r4,r4,#1
|L1.484|
        MOV      r0,r5
        BL       strlen
        CMP      r0,r4
        BCS      |L1.468|
        MOV      r0,#0
        LDR      r1,|L1.1316|
        LDR      r2,|L1.1308|
        LDR      r2,[r2,#0]  ; pos_cadena
        ADD      r1,r1,r2
        STRB     r0,[r1,r4]
        MOV      r1,r0
        LDR      r0,|L1.1316|
        LDR      r2,|L1.1308|
        LDR      r2,[r2,#0]  ; pos_cadena
        ADD      r0,r0,r2
        ADD      r0,r0,r4
        STRB     r1,[r0,#1]
        MOV      r0,r5
        BL       strlen
        ADD      r0,r0,#1
        LDR      r1,|L1.1308|
        LDR      r1,[r1,#0]  ; pos_cadena
        ADD      r0,r0,r1
        LDR      r1,|L1.1308|
        STR      r0,[r1,#0]  ; pos_cadena
        LDR      r0,|L1.1320|
        LDRB     r0,[r0,#0]  ; tx_completa
        CMP      r0,#1
        BNE      |L1.558|
        LDR      r0,|L1.1316|
        LDRB     r0,[r0,#0]  ; buffer_tx
        LDR      r1,|L1.1292|
        STRB     r0,[r1,#0]
|L1.558|
        MOV      r0,#0
        LDR      r1,|L1.1320|
        STRB     r0,[r1,#0]
        POP      {r4-r6,pc}
        ENDP

rx_cadena_UART0 PROC
        PUSH     {r4-r8,lr}
        ADR      r1,|L1.1324|
        LDR      r0,|L1.1332|
        BL       strcmp
        CMP      r0,#0
        BNE      |L1.632|
        ADR      r0,|L1.1336|
        BL       tx_cadena_UART0
        ADR      r0,|L1.1352|
        BL       tx_cadena_UART0
        ADR      r0,|L1.1380|
        BL       tx_cadena_UART0
        ADR      r0,|L1.1432|
        BL       tx_cadena_UART0
        ADR      r0,|L1.1456|
        BL       tx_cadena_UART0
        ADR      r0,|L1.1496|
        BL       tx_cadena_UART0
        ADR      r0,|L1.1520|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1568|
        BL       tx_cadena_UART0
|L1.632|
        ADR      r1,|L1.1572|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.676|
        ADR      r0,|L1.1584|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x64
        BL       conversor_SaI
        UXTB     r4,r0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        UXTB     r5,r0
        MOV      r1,r4
        MOV      r0,r5
        BL       ov7670_set
|L1.676|
        ADR      r1,|L1.1608|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.708|
        ADR      r0,|L1.1616|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        UXTB     r4,r0
        MOV      r0,r4
        BL       set_Umbral
|L1.708|
        ADR      r1,|L1.1636|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.736|
        ADR      r0,|L1.1644|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        LDR      r1,|L1.1672|
        STRB     r0,[r1,#0]
|L1.736|
        ADR      r1,|L1.1676|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.804|
        ADR      r0,|L1.1688|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x96
        BL       conversor_SaI
        UXTB     r4,r0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x64
        BL       conversor_SaI
        UXTH     r5,r0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x64
        BL       conversor_SaI
        UXTB     r6,r0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        UXTB     r7,r0
        MOV      r3,r4
        MOV      r2,r5
        MOV      r1,r6
        MOV      r0,r7
        BL       OV7670_BriConLum
|L1.804|
        ADR      r1,|L1.1724|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.824|
        ADR      r0,|L1.1732|
        BL       tx_cadena_UART0
        BL       AWBC_control
|L1.824|
        ADR      r1,|L1.1740|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.856|
        ADR      r0,|L1.1748|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        UXTB     r4,r0
        MOV      r0,r4
        BL       OV7670_AWBmode
|L1.856|
        ADR      r1,|L1.1760|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.912|
        ADR      r0,|L1.1768|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x96
        BL       conversor_SaI
        UXTB     r4,r0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x64
        BL       conversor_SaI
        UXTB     r5,r0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        UXTB     r6,r0
        MOV      r2,r4
        MOV      r1,r5
        MOV      r0,r6
        BL       OV7670_RGBgain
|L1.912|
        ADR      r1,|L1.1780|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.944|
        ADR      r0,|L1.1784|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        UXTB     r4,r0
        MOV      r0,r4
        BL       OV7670_FPS
|L1.944|
        ADR      r1,|L1.1800|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.984|
        ADR      r0,|L1.1804|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        LDR      r1,|L1.1812|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x64
        BL       conversor_SaI
        LDR      r1,|L1.1816|
        STRH     r0,[r1,#0]
|L1.984|
        ADR      r1,|L1.1820|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.1012|
        ADR      r0,|L1.1828|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        LDR      r1,|L1.1840|
        STRH     r0,[r1,#0]
|L1.1012|
        ADR      r1,|L1.1844|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.1044|
        ADR      r0,|L1.1856|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        UXTB     r4,r0
        MOV      r0,r4
        BL       ov7670_read
|L1.1044|
        ADR      r1,|L1.1868|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.1074|
        ADR      r0,|L1.1880|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        MOV      r4,r0
        BL       periodic_signal2_ms
|L1.1074|
        ADR      r1,|L1.1912|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.1102|
        ADR      r0,|L1.1920|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        LDR      r1,|L1.1928|
        STR      r0,[r1,#0]  ; pass
|L1.1102|
        ADR      r1,|L1.1932|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.1124|
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        LDR      r1,|L1.1940|
        STRB     r0,[r1,#0]
|L1.1124|
        ADR      r1,|L1.1944|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.1152|
        ADR      r0,|L1.1948|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        LDR      r1,|L1.1960|
        STRB     r0,[r1,#0]
|L1.1152|
        ADR      r1,|L1.1964|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.1192|
        ADR      r0,|L1.1968|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        LDR      r1,|L1.1976|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x64
        BL       conversor_SaI
        LDR      r1,|L1.1980|
        STRH     r0,[r1,#0]
|L1.1192|
        ADR      r1,|L1.1984|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.1224|
        ADR      r0,|L1.1992|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        UXTB     r4,r0
        MOV      r0,r4
        BL       resolution
|L1.1224|
        ADR      r1,|L1.2000|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.1268|
        ADR      r0,|L1.2008|
        BL       tx_cadena_UART0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x64
        BL       conversor_SaI
        UXTB     r4,r0
        LDR      r0,|L1.1332|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        UXTB     r5,r0
        MOV      r1,r4
        MOV      r0,r5
        BL       scaler
|L1.1268|
        ADR      r1,|L1.2020|
        LDR      r0,|L1.1332|
        BL       strcmp
        CBNZ     r0,|L1.1280|
        B        |L1.2028|
|L1.1280|
        B        |L1.2072|
        DCW      0x0000
|L1.1284|
        DCD      SystemCoreClock
|L1.1288|
        DCD      0x000186a0
|L1.1292|
        DCD      0x4000c000
|L1.1296|
        DCD      0x4002c000
|L1.1300|
        DCD      0xe000ed18
|L1.1304|
        DCD      0xe000e400
|L1.1308|
        DCD      pos_cadena
|L1.1312|
        DCB      "\n\r",0
        DCB      0
|L1.1316|
        DCD      buffer_tx
|L1.1320|
        DCD      tx_completa
|L1.1324|
        DCB      "help",0
        DCB      0
        DCB      0
        DCB      0
|L1.1332|
        DCD      buffer_rx
|L1.1336|
        DCB      "COMMAND LIST: \n",0
|L1.1352|
        DCB      "- setOV7670 [Reg] [Value] \n",0
|L1.1380|
        DCB      " Sets up the register [Reg] with the value [Value]\n",0
|L1.1432|
        DCB      "- readOV7670 [Reg] \n",0
        DCB      0
        DCB      0
        DCB      0
|L1.1456|
        DCB      " Reads the value of the register [Reg]\n",0
|L1.1496|
        DCB      "- detectMode [Mode] \n",0
        DCB      0
        DCB      0
|L1.1520|
        DCB      " Sets the algorithm used to detect the object:\n",0
|L1.1568|
        DCD      ||.constdata||
|L1.1572|
        DCB      "setOV7670",0
        DCB      0
        DCB      0
|L1.1584|
        DCB      "Configurando camara \n",0
        DCB      0
        DCB      0
|L1.1608|
        DCB      "umbral",0
        DCB      0
|L1.1616|
        DCB      "Umbral configurado",0
        DCB      0
|L1.1636|
        DCB      "read",0
        DCB      0
        DCB      0
        DCB      0
|L1.1644|
        DCB      "Tipo de recepcion cambiado",0
        DCB      0
|L1.1672|
        DCD      read_type
|L1.1676|
        DCB      "briconlum",0
        DCB      0
        DCB      0
|L1.1688|
        DCB      "Brillo, Contraste y Luminosidad \n",0
        DCB      0
        DCB      0
|L1.1724|
        DCB      "AWBC",0
        DCB      0
        DCB      0
        DCB      0
|L1.1732|
        DCB      "AWBC \n",0
        DCB      0
|L1.1740|
        DCB      "AWBmode",0
|L1.1748|
        DCB      "AWBC mode \n",0
|L1.1760|
        DCB      "AWBgain",0
|L1.1768|
        DCB      "AWBC gain \n",0
|L1.1780|
        DCB      "fps",0
|L1.1784|
        DCB      "fps config \n",0
        DCB      0
        DCB      0
        DCB      0
|L1.1800|
        DCB      "vd",0
        DCB      0
|L1.1804|
        DCB      "Vd !! \n",0
|L1.1812|
        DCD      Vd_OV7670
|L1.1816|
        DCD      Vx_OV7670
|L1.1820|
        DCB      "cons",0
        DCB      0
        DCB      0
        DCB      0
|L1.1828|
        DCB      "cons!! \n",0
        DCB      0
        DCB      0
        DCB      0
|L1.1840|
        DCD      const_block
|L1.1844|
        DCB      "readOV7670",0
        DCB      0
|L1.1856|
        DCB      "leyendo \n",0
        DCB      0
        DCB      0
|L1.1868|
        DCB      "periodic",0
        DCB      0
        DCB      0
        DCB      0
|L1.1880|
        DCB      "haciendo interrup periodica\n",0
        DCB      0
        DCB      0
        DCB      0
|L1.1912|
        DCB      "pass",0
        DCB      0
        DCB      0
        DCB      0
|L1.1920|
        DCB      "pass\n",0
        DCB      0
        DCB      0
|L1.1928|
        DCD      pass
|L1.1932|
        DCB      "photo",0
        DCB      0
        DCB      0
|L1.1940|
        DCD      take_picture
|L1.1944|
        DCB      "pic",0
|L1.1948|
        DCB      "ticture\n",0
        DCB      0
        DCB      0
        DCB      0
|L1.1960|
        DCD      show_picture
|L1.1964|
        DCB      "CIF",0
|L1.1968|
        DCB      "CIF\n",0
        DCB      0
        DCB      0
        DCB      0
|L1.1976|
        DCD      try_QCIF_H
|L1.1980|
        DCD      try_QCIF_W
|L1.1984|
        DCB      "resol",0
        DCB      0
        DCB      0
|L1.1992|
        DCB      "scaler\n",0
|L1.2000|
        DCB      "scaler",0
        DCB      0
|L1.2008|
        DCB      "resolution\n",0
|L1.2020|
        DCB      "timer",0
        DCB      0
        DCB      0
|L1.2028|
        ADR      r0,|L1.2436|
        BL       tx_cadena_UART0
        LDR      r0,|L1.2444|
        BL       conversor_SaI
        UXTB     r4,r0
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x32
        BL       conversor_SaI
        UXTB     r5,r0
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x64
        BL       conversor_SaI
        UXTB     r6,r0
        MOV      r2,r4
        MOV      r1,r5
        MOV      r0,r6
        BL       timing_resol
|L1.2072|
        ADR      r1,|L1.2448|
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x96
        BL       strcmp
        CBNZ     r0,|L1.2106|
        ADR      r0,|L1.2456|
        BL       tx_cadena_UART0
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x64
        BL       conversor_SaI
        UXTB     r4,r0
        MOV      r0,r4
        BL       OV7670_mirror
|L1.2106|
        ADR      r1,|L1.2464|
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x96
        BL       strcmp
        CBNZ     r0,|L1.2174|
        ADR      r0,|L1.2472|
        BL       tx_cadena_UART0
        LDR      r0,|L1.2444|
        ADDS     r0,r0,#0x32
        BL       conversor_SaI
        UXTH     r4,r0
        LDR      r0,|L1.2444|
        BL       conversor_SaI
        UXTH     r5,r0
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x32
        BL       conversor_SaI
        UXTH     r6,r0
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x64
        BL       conversor_SaI
        UXTH     r7,r0
        MOV      r3,r4
        MOV      r2,r5
        MOV      r1,r6
        MOV      r0,r7
        BL       Window
|L1.2174|
        ADR      r1,|L1.2480|
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x96
        BL       strcmp
        CBNZ     r0,|L1.2204|
        ADR      r0,|L1.2488|
        BL       tx_cadena_UART0
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x64
        BL       conversor_SaI
        LDR      r1,|L1.2496|
        STRB     r0,[r1,#0]
|L1.2204|
        ADR      r1,|L1.2500|
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x96
        BL       strcmp
        CBNZ     r0,|L1.2258|
        ADR      r0,|L1.2508|
        BL       tx_cadena_UART0
        MOV      r0,#1
        LDR      r1,|L1.2516|
        STRB     r0,[r1,#0]
        MOV      r0,#3
        LDR      r1,|L1.2520|
        STRB     r0,[r1,#0]
        LDR      r0,|L1.2444|
        SUB      r0,r0,#0x64
        BL       conversor_SaI
        LDR      r1,|L1.2524|
        STRB     r0,[r1,#0]
        MOVS     r0,#0x64
        BL       periodic_signal2_ms
|L1.2258|
        ADR      r1,|L1.2528|
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x96
        BL       strcmp
        CBNZ     r0,|L1.2302|
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x32
        BL       conversor_SaI
        MOV      r4,r0
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x64
        BL       conversor_SaI
        MOV      r5,r0
        MOV      r1,r4
        BL       set_sound
        ADR      r0,|L1.2536|
        BL       tx_cadena_UART0
|L1.2302|
        ADR      r1,|L1.2544|
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x96
        BL       strcmp
        CBNZ     r0,|L1.2336|
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x64
        BL       conversor_SaI
        LSL      r0,r0,#6
        LDR      r1,|L1.2548|
        STR      r0,[r1,#0]
        ADR      r0,|L1.2552|
        BL       tx_cadena_UART0
|L1.2336|
        ADR      r1,|L1.2560|
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x96
        BL       strcmp
        CBNZ     r0,|L1.2366|
        LDR      r0,|L1.2564|
        LDR      r0,[r0,#0x20]
        ORR      r0,r0,#7
        LDR      r1,|L1.2564|
        STR      r0,[r1,#0x20]
        ADR      r0,|L1.2552|
        BL       tx_cadena_UART0
|L1.2366|
        ADR      r1,|L1.2568|
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x96
        BL       strcmp
        CBNZ     r0,|L1.2400|
        ADR      r0,|L1.2576|
        BL       tx_cadena_UART0
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x64
        BL       conversor_SaI
        UXTH     r4,r0
        MOV      r0,r4
        BL       set_samples_cycle
|L1.2400|
        ADR      r1,|L1.2584|
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x96
        BL       strcmp
        CBNZ     r0,|L1.2430|
        ADR      r0,|L1.2592|
        BL       tx_cadena_UART0
        LDR      r0,|L1.2444|
        SUBS     r0,r0,#0x64
        BL       conversor_SaI
        LDR      r1,|L1.2548|
        STRH     r0,[r1,#8]
|L1.2430|
        POP      {r4-r8,pc}
        ENDP

        DCW      0x0000
|L1.2436|
        DCB      "timer\n",0
        DCB      0
|L1.2444|
        DCD      buffer_rx+0x96
|L1.2448|
        DCB      "mirror",0
        DCB      0
|L1.2456|
        DCB      "mirror\n",0
|L1.2464|
        DCB      "window",0
        DCB      0
|L1.2472|
        DCB      "win\n",0
        DCB      0
        DCB      0
        DCB      0
|L1.2480|
        DCB      "text",0
        DCB      0
        DCB      0
        DCB      0
|L1.2488|
        DCB      "max\n",0
        DCB      0
        DCB      0
        DCB      0
|L1.2496|
        DCD      text_mode
|L1.2500|
        DCB      "game",0
        DCB      0
        DCB      0
        DCB      0
|L1.2508|
        DCB      "game\n",0
        DCB      0
        DCB      0
|L1.2516|
        DCD      newGame
|L1.2520|
        DCD      read_type
|L1.2524|
        DCD      game
|L1.2528|
        DCB      "sound",0
        DCB      0
        DCB      0
|L1.2536|
        DCB      "sonido\n",0
|L1.2544|
        DCB      "DAC",0
|L1.2548|
        DCD      0x4008c000
|L1.2552|
        DCB      "son\n",0
        DCB      0
        DCB      0
        DCB      0
|L1.2560|
        DCB      "DMA",0
|L1.2564|
        DCD      0x50004000
|L1.2568|
        DCB      "samples",0
|L1.2576|
        DCB      "sample\n",0
|L1.2584|
        DCB      "tDAC",0
        DCB      0
        DCB      0
        DCB      0
|L1.2592|
        DCB      "tDAC\n",0
        DCB      0
        DCB      0

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.constdata||, DATA, READONLY, ALIGN=2

        DCB      0x20,0x30,0x3a,0x20
        DCB      0x4e,0x6f,0x20,0x64
        DCB      0x65,0x74,0x65,0x63
        DCB      0x74,0x69,0x6f,0x6e
        DCB      0x0a,0x20,0x31,0x3a
        DCB      0x20,0x4d,0x61,0x73
        DCB      0x73,0x20,0x43,0x65
        DCB      0x6e,0x74,0x65,0x72
        DCB      0x20,0x44,0x65,0x74
        DCB      0x65,0x63,0x74,0x69
        DCB      0x6f,0x6e,0x20,0x0a
        DCB      0x20,0x32,0x3a,0x20
        DCB      0x42,0x69,0x67,0x67
        DCB      0x65,0x73,0x74,0x20
        DCB      0x4f,0x62,0x6a,0x65
        DCB      0x63,0x74,0x20,0x42
        DCB      0x6c,0x6f,0x63,0x6b
        DCB      0x20,0x44,0x65,0x74
        DCB      0x65,0x63,0x74,0x69
        DCB      0x6f,0x6e,0x00

;*** Start embedded assembler ***

#line 1 "UART\\uart.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_uart_c_7bb2c661____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_uart_c_7bb2c661____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_uart_c_7bb2c661____REVSH|
#line 128
|__asm___6_uart_c_7bb2c661____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT uart0_set_baudrate [CODE]
        EXPORT Init_UART0 [CODE]
        EXPORT tx_cadena_UART0 [CODE]
        EXPORT rx_cadena_UART0 [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT SystemCoreClock [DATA]
        IMPORT strlen [CODE]
        IMPORT pos_cadena [DATA]
        IMPORT buffer_tx [DATA]
        IMPORT tx_completa [DATA]
        IMPORT strcmp [CODE]
        IMPORT conversor_SaI [CODE]
        IMPORT ov7670_set [CODE]
        IMPORT set_Umbral [CODE]
        IMPORT OV7670_BriConLum [CODE]
        IMPORT AWBC_control [CODE]
        IMPORT OV7670_AWBmode [CODE]
        IMPORT OV7670_RGBgain [CODE]
        IMPORT OV7670_FPS [CODE]
        IMPORT ov7670_read [CODE]
        IMPORT periodic_signal2_ms [CODE]
        IMPORT resolution [CODE]
        IMPORT scaler [CODE]
        IMPORT timing_resol [CODE]
        IMPORT OV7670_mirror [CODE]
        IMPORT Window [CODE]
        IMPORT set_sound [CODE]
        IMPORT set_samples_cycle [CODE]
        IMPORT buffer_rx [DATA]
        IMPORT read_type [DATA]
        IMPORT Vd_OV7670 [DATA]
        IMPORT Vx_OV7670 [DATA]
        IMPORT const_block [DATA]
        IMPORT pass [DATA]
        IMPORT take_picture [DATA]
        IMPORT show_picture [DATA]
        IMPORT try_QCIF_H [DATA]
        IMPORT try_QCIF_W [DATA]
        IMPORT text_mode [DATA]
        IMPORT newGame [DATA]
        IMPORT game [DATA]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
