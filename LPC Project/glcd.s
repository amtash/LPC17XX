; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--debug -c --asm -oglcd.o --depend=glcd.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=glcd.crf GLCD\GLCD.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

LCD_Configuration PROC
        PUSH     {r2-r4,lr}
        MOV      r0,#0
        STRB     r0,[sp,#2]
        STRB     r0,[sp,#4]
        STRB     r0,[sp,#3]
        MOV      r0,#2
        STRB     r0,[sp,#0]
        MOV      r0,#0
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#1
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#2
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#3
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#4
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#5
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#6
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#7
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOVS     r2,#1
        MOVS     r1,#0xff
        MOVS     r0,#2
        BL       GPIO_SetDir
        MOV      r0,#0
        STRB     r0,[sp,#2]
        STRB     r0,[sp,#4]
        STRB     r0,[sp,#3]
        MOV      r0,#2
        STRB     r0,[sp,#0]
        MOV      r0,#0xf
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#0x10
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#0x11
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#0x12
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#0x13
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#0x14
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#0x15
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#0x16
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOVS     r2,#1
        MOV      r1,#0x7f8000
        MOVS     r0,#0
        BL       GPIO_SetDir
        MOV      r0,#0
        STRB     r0,[sp,#2]
        STRB     r0,[sp,#4]
        STRB     r0,[sp,#3]
        MOV      r0,#1
        STRB     r0,[sp,#0]
        MOV      r0,#0x1b
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#0x1c
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOV      r0,#0x1d
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOVS     r2,#1
        MOV      r1,#0x38000000
        MOV      r0,r2
        BL       GPIO_SetDir
        MOV      r0,#0
        STRB     r0,[sp,#2]
        STRB     r0,[sp,#4]
        STRB     r0,[sp,#3]
        MOV      r0,#2
        STRB     r0,[sp,#0]
        MOV      r0,#8
        STRB     r0,[sp,#1]
        MOV      r0,sp
        BL       PINSEL_ConfigPin
        MOVS     r2,#1
        LSLS     r1,r2,#8
        MOVS     r0,#2
        BL       GPIO_SetDir
        POP      {r2-r4,pc}
        ENDP

LCD_WriteReg PROC
        PUSH     {r4,lr}
        NOP      
        MOV      r2,#0x100
        LDR      r3,|L1.1452|
        STR      r2,[r3,#0x5c]
        MOV      r2,#0x8000000
        STR      r2,[r3,#0x3c]
        MOV      r2,#0x20000000
        STR      r2,[r3,#0x38]
        NOP      
        MOV      r2,r0
        UXTB     r3,r2
        LDR      r4,|L1.1452|
        STR      r3,[r4,#0x54]
        MOV      r3,#0x7f8000
        AND      r3,r3,r2,LSL #7
        STR      r3,[r4,#0x14]
        NOP      
        MOV      r2,#0x10000000
        MOV      r3,r4
        STR      r2,[r3,#0x3c]
        STR      r2,[r3,#0x38]
        MOV      r2,#0x100
        STR      r2,[r3,#0x58]
        NOP      
        NOP      
        STR      r2,[r3,#0x5c]
        MOV      r2,#0x8000000
        STR      r2,[r3,#0x38]
        NOP      
        MOV      r2,r1
        UXTB     r3,r2
        STR      r3,[r4,#0x54]
        MOV      r3,#0x7f8000
        AND      r3,r3,r2,LSL #7
        STR      r3,[r4,#0x14]
        NOP      
        MOV      r2,#0x10000000
        MOV      r3,r4
        STR      r2,[r3,#0x3c]
        STR      r2,[r3,#0x38]
        MOV      r2,#0x100
        STR      r2,[r3,#0x58]
        NOP      
        POP      {r4,pc}
        ENDP

LCD_SetCursor PROC
        PUSH     {r4,r5,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r1,r5
        MOV      r0,#0x20
        BL       LCD_WriteReg
        LDR      r0,|L1.1456|
        LDRH     r0,[r0,#0]  ; MAX_X
        SUBS     r0,r0,#1
        SUBS     r0,r0,r4
        UXTH     r1,r0
        MOVS     r0,#0x21
        BL       LCD_WriteReg
        POP      {r4,r5,pc}
        ENDP

delay_ms PROC
        MOV      r1,#0
        B        |L1.604|
|L1.578|
        MOV      r2,#0
        B        |L1.590|
|L1.584|
        ADD      r3,r2,#1
        UXTH     r2,r3
|L1.590|
        MOV      r3,#0x475
        CMP      r2,r3
        BLT      |L1.584|
        ADD      r3,r1,#1
        UXTH     r1,r3
|L1.604|
        CMP      r1,r0
        BLT      |L1.578|
        BX       lr
        ENDP

LCD_Initialization PROC
        PUSH     {r4,lr}
        BL       LCD_Configuration
        MOVS     r0,#0x64
        BL       delay_ms
        MOV      r1,#0x100
        MOVS     r0,#1
        BL       LCD_WriteReg
        MOV      r1,#0x600
        MOVS     r0,#2
        BL       LCD_WriteReg
        MOV      r1,#0x1018
        MOVS     r0,#3
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#4
        BL       LCD_WriteReg
        MOV      r1,#0x207
        MOVS     r0,#8
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#9
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0xa
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0xc
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0xd
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0xf
        BL       LCD_WriteReg
        MOVS     r0,#0x32
        BL       delay_ms
        MOV      r1,#0x100
        MOVS     r0,#7
        BL       LCD_WriteReg
        MOVS     r0,#0x32
        BL       delay_ms
        MOV      r1,#0x16b0
        MOVS     r0,#0x10
        BL       LCD_WriteReg
        MOVS     r1,#1
        MOVS     r0,#0x11
        BL       LCD_WriteReg
        MOVS     r1,#1
        MOVS     r0,#0x17
        BL       LCD_WriteReg
        MOV      r1,#0x138
        MOVS     r0,#0x12
        BL       LCD_WriteReg
        MOV      r1,#0x800
        MOVS     r0,#0x13
        BL       LCD_WriteReg
        MOVS     r1,#9
        MOVS     r0,#0x29
        BL       LCD_WriteReg
        MOVS     r1,#9
        MOVS     r0,#0x2a
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0xa4
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0x50
        BL       LCD_WriteReg
        MOVS     r1,#0xef
        MOVS     r0,#0x51
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0x52
        BL       LCD_WriteReg
        MOV      r1,#0x13f
        MOVS     r0,#0x53
        BL       LCD_WriteReg
        MOV      r1,#0x2700
        MOVS     r0,#0x60
        BL       LCD_WriteReg
        MOVS     r1,#3
        MOVS     r0,#0x61
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0x6a
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0x80
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0x81
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0x82
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0x83
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0x84
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0x85
        BL       LCD_WriteReg
        MOVS     r1,#0x13
        MOVS     r0,#0x90
        BL       LCD_WriteReg
        MOVS     r1,#0
        MOVS     r0,#0x92
        BL       LCD_WriteReg
        MOVS     r1,#3
        MOVS     r0,#0x93
        BL       LCD_WriteReg
        MOV      r1,#0x110
        MOVS     r0,#0x95
        BL       LCD_WriteReg
        MOV      r1,#0x173
        MOVS     r0,#7
        BL       LCD_WriteReg
        POP      {r4,pc}
        ENDP

LCD_Clear PROC
        PUSH     {r4,r5,lr}
        MOV      r4,r0
        MOV      r1,#0
        MOV      r0,r1
        BL       LCD_SetCursor
        MOV      r0,#0x22
        MOV      r1,#0x100
        LDR      r2,|L1.1452|
        STR      r1,[r2,#0x5c]
        MOV      r1,#0x8000000
        STR      r1,[r2,#0x3c]
        MOV      r1,#0x20000000
        STR      r1,[r2,#0x38]
        NOP      
        MOV      r1,r0
        STR      r1,[r2,#0x54]
        MOV      r2,#0x7f8000
        AND      r2,r2,r1,LSL #7
        LDR      r3,|L1.1452|
        STR      r2,[r3,#0x14]
        NOP      
        MOV      r1,#0x10000000
        MOV      r2,r3
        STR      r1,[r2,#0x3c]
        STR      r1,[r2,#0x38]
        MOV      r1,#0x100
        STR      r1,[r2,#0x58]
        NOP      
        MOV      r5,#0
        B        |L1.1098|
|L1.1038|
        NOP      
        MOV      r0,#0x100
        LDR      r1,|L1.1452|
        STR      r0,[r1,#0x5c]
        MOV      r0,#0x8000000
        STR      r0,[r1,#0x38]
        NOP      
        MOV      r0,r4
        UXTB     r1,r0
        LDR      r2,|L1.1452|
        STR      r1,[r2,#0x54]
        MOV      r1,#0x7f8000
        AND      r1,r1,r0,LSL #7
        STR      r1,[r2,#0x14]
        NOP      
        MOV      r0,#0x10000000
        MOV      r1,r2
        STR      r0,[r1,#0x3c]
        STR      r0,[r1,#0x38]
        MOV      r0,#0x100
        STR      r0,[r1,#0x58]
        NOP      
        ADD      r5,r5,#1
|L1.1098|
        LDR      r0,|L1.1456|
        LDRH     r0,[r0,#0]  ; MAX_X
        LDR      r1,|L1.1460|
        LDRH     r1,[r1,#0]  ; MAX_Y
        MULS     r0,r1,r0
        CMP      r0,r5
        BHI      |L1.1038|
        POP      {r4,r5,pc}
        ENDP

window_clear PROC
        PUSH     {r4-r7,lr}
        MOV      r3,r0
        MOV      r4,r1
        MOV      r0,#0x22
        MOV      r1,#0x100
        LDR      r6,|L1.1452|
        STR      r1,[r6,#0x5c]
        MOV      r1,#0x8000000
        STR      r1,[r6,#0x3c]
        MOV      r1,#0x20000000
        STR      r1,[r6,#0x38]
        NOP      
        MOV      r1,r0
        STR      r1,[r6,#0x54]
        MOV      r6,#0x7f8000
        AND      r6,r6,r1,LSL #7
        LDR      r7,|L1.1452|
        STR      r6,[r7,#0x14]
        NOP      
        MOV      r1,#0x10000000
        MOV      r6,r7
        STR      r1,[r6,#0x3c]
        STR      r1,[r6,#0x38]
        MOV      r1,#0x100
        STR      r1,[r6,#0x58]
        NOP      
        MOV      r5,#0
        B        |L1.1248|
|L1.1188|
        NOP      
        MOV      r0,#0x100
        LDR      r1,|L1.1452|
        STR      r0,[r1,#0x5c]
        MOV      r0,#0x8000000
        STR      r0,[r1,#0x38]
        NOP      
        MOV      r0,r2
        UXTB     r1,r0
        LDR      r6,|L1.1452|
        STR      r1,[r6,#0x54]
        MOV      r1,#0x7f8000
        AND      r1,r1,r0,LSL #7
        STR      r1,[r6,#0x14]
        NOP      
        MOV      r0,#0x10000000
        MOV      r1,r6
        STR      r0,[r1,#0x3c]
        STR      r0,[r1,#0x38]
        MOV      r0,#0x100
        STR      r0,[r1,#0x58]
        NOP      
        ADD      r5,r5,#1
|L1.1248|
        MUL      r0,r3,r4
        CMP      r0,r5
        BHI      |L1.1188|
        POP      {r4-r7,pc}
        ENDP

draw_RGB565_image PROC
        PUSH     {r4-r10,lr}
        MOV      r7,r0
        MOV      r8,r1
        MOV      r5,r2
        MOV      r6,r3
        LDR      r9,[sp,#0x20]
        ADD      r0,r8,r6
        SUB      r0,r0,#1
        UXTH     r3,r0
        ADD      r0,r7,r5
        SUB      r0,r0,#1
        UXTH     r2,r0
        MOV      r1,r8
        MOV      r0,r7
        BL       Window
        MOV      r1,r8
        MOV      r0,r7
        BL       LCD_SetCursor
        MOV      r0,#0x22
        MOV      r1,#0x100
        LDR      r2,|L1.1452|
        STR      r1,[r2,#0x5c]
        MOV      r1,#0x8000000
        STR      r1,[r2,#0x3c]
        MOV      r1,#0x20000000
        STR      r1,[r2,#0x38]
        NOP      
        MOV      r1,r0
        STR      r1,[r2,#0x54]
        MOV      r2,#0x7f8000
        AND      r2,r2,r1,LSL #7
        LDR      r3,|L1.1452|
        STR      r2,[r3,#0x14]
        NOP      
        MOV      r1,#0x10000000
        MOV      r2,r3
        STR      r1,[r2,#0x3c]
        STR      r1,[r2,#0x38]
        MOV      r1,#0x100
        STR      r1,[r2,#0x58]
        NOP      
        MOV      r4,#0
        B        |L1.1470|
|L1.1378|
        LSL      r1,r4,#1
        ADD      r1,r1,#1
        LDRB     r1,[r9,r1]
        LDRB     r2,[r9,r4,LSL #1]
        ORR      r0,r1,r2,LSL #8
        MOV      r1,#0x100
        LDR      r2,|L1.1452|
        STR      r1,[r2,#0x5c]
        MOV      r1,#0x8000000
        STR      r1,[r2,#0x38]
        NOP      
        MOV      r1,r0
        UXTB     r2,r1
        LDR      r3,|L1.1452|
        STR      r2,[r3,#0x54]
        MOV      r2,#0x7f8000
        AND      r2,r2,r1,LSL #7
        STR      r2,[r3,#0x14]
        NOP      
        MOV      r1,#0x10000000
        MOV      r2,r3
        STR      r1,[r2,#0x3c]
        STR      r1,[r2,#0x38]
        MOV      r1,#0x100
        STR      r1,[r2,#0x58]
        B        |L1.1464|
|L1.1452|
        DCD      0x2009c000
|L1.1456|
        DCD      MAX_X
|L1.1460|
        DCD      MAX_Y
|L1.1464|
        NOP      
        ADD      r4,r4,#1
|L1.1470|
        MUL      r0,r5,r6
        CMP      r0,r4
        BHI      |L1.1378|
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        POP      {r4-r10,pc}
        ENDP

LCD_BGR2RGB PROC
        PUSH     {r4,r5,lr}
        MOV      r1,r0
        AND      r4,r1,#0x1f
        UBFX     r3,r1,#5,#6
        LSR      r2,r1,#11
        LSL      r5,r4,#11
        ADD      r5,r5,r3,LSL #5
        ADD      r5,r5,r2
        UXTH     r0,r5
        POP      {r4,r5,pc}
        ENDP

LCD_GetPoint PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r1,r5
        MOV      r0,r4
        BL       LCD_SetCursor
        MOV      r0,#0x22
        MOV      r1,#0x100
        LDR      r2,|L1.2568|
        STR      r1,[r2,#0x5c]
        MOV      r1,#0x8000000
        STR      r1,[r2,#0x3c]
        MOV      r1,#0x20000000
        STR      r1,[r2,#0x38]
        NOP      
        MOV      r1,r0
        STR      r1,[r2,#0x54]
        MOV      r2,#0x7f8000
        AND      r2,r2,r1,LSL #7
        LDR      r3,|L1.2568|
        STR      r2,[r3,#0x14]
        NOP      
        MOV      r1,#0x10000000
        MOV      r2,r3
        STR      r1,[r2,#0x3c]
        STR      r1,[r2,#0x38]
        MOV      r1,#0x100
        STR      r1,[r2,#0x58]
        NOP      
        NOP      
        MOV      r0,r1
        STR      r0,[r2,#0x5c]
        MOV      r0,#0x8000000
        STR      r0,[r2,#0x38]
        MOV      r0,#0x10000000
        STR      r0,[r2,#0x38]
        MOV      r0,#0x20000000
        STR      r0,[r2,#0x3c]
        NOP      
        LDR      r3,[r3,#0x40]
        BIC      r3,r3,#0xff
        MOV      r7,r2
        STR      r3,[r7,#0x40]
        MOV      r3,r2
        LDR      r3,[r3,#0]
        BIC      r3,r3,#0x7f8000
        STR      r3,[r7,#0]
        MOV      r3,r2
        LDR      r3,[r3,#0x54]
        UXTB     r0,r3
        MOV      r3,r2
        LDR      r3,[r3,#0x14]
        AND      r2,r3,#0x7f8000
        ORR      r0,r0,r2,LSR #7
        MOV      r3,r7
        LDR      r3,[r3,#0x40]
        ORR      r3,r3,#0xff
        STR      r3,[r7,#0x40]
        MOV      r3,r7
        LDR      r3,[r3,#0]
        ORR      r3,r3,#0x7f8000
        STR      r3,[r7,#0]
        NOP      
        MOV      r1,r0
        MOV      r0,#0x20000000
        MOV      r2,r7
        STR      r0,[r2,#0x38]
        MOV      r0,#0x100
        STR      r0,[r2,#0x58]
        NOP      
        MOV      r6,r1
        NOP      
        STR      r0,[r2,#0x5c]
        MOV      r0,#0x8000000
        STR      r0,[r2,#0x38]
        MOV      r0,#0x10000000
        STR      r0,[r2,#0x38]
        MOV      r0,#0x20000000
        STR      r0,[r2,#0x3c]
        NOP      
        MOV      r3,r2
        LDR      r3,[r3,#0x40]
        BIC      r3,r3,#0xff
        STR      r3,[r7,#0x40]
        MOV      r3,r2
        LDR      r3,[r3,#0]
        BIC      r3,r3,#0x7f8000
        STR      r3,[r7,#0]
        MOV      r3,r2
        LDR      r3,[r3,#0x54]
        UXTB     r0,r3
        MOV      r3,r2
        LDR      r3,[r3,#0x14]
        AND      r2,r3,#0x7f8000
        ORR      r0,r0,r2,LSR #7
        MOV      r3,r7
        LDR      r3,[r3,#0x40]
        ORR      r3,r3,#0xff
        STR      r3,[r7,#0x40]
        MOV      r3,r7
        LDR      r3,[r3,#0]
        ORR      r3,r3,#0x7f8000
        STR      r3,[r7,#0]
        NOP      
        MOV      r1,r0
        MOV      r0,#0x20000000
        MOV      r2,r7
        STR      r0,[r2,#0x38]
        MOV      r0,#0x100
        STR      r0,[r2,#0x58]
        NOP      
        MOV      r6,r1
        MOV      r0,r6
        BL       LCD_BGR2RGB
        POP      {r4-r8,pc}
        ENDP

LCD_SetPoint PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r5,r2
        LDR      r0,|L1.2572|
        LDRH     r0,[r0,#0]  ; MAX_X
        CMP      r6,r0
        BGE      |L1.1848|
        LDR      r0,|L1.2576|
        LDRH     r0,[r0,#0]  ; MAX_Y
        CMP      r4,r0
        BLT      |L1.1850|
|L1.1848|
        POP      {r4-r6,pc}
|L1.1850|
        MOV      r1,r4
        MOV      r0,r6
        BL       LCD_SetCursor
        MOV      r1,r5
        MOVS     r0,#0x22
        BL       LCD_WriteReg
        NOP      
        B        |L1.1848|
        ENDP

PutChar PROC
        PUSH     {r0-r12,lr}
        MOV      r6,r0
        MOV      r7,r1
        MOV      r9,r2
        MOV      r10,r3
        LDR      r11,[sp,#0x38]
        MOV      r1,r9
        MOV      r0,sp
        BL       GetASCIICode
        LDR      r0,|L1.2580|
        LDRB     r0,[r0,#0]  ; text_mode
        CBNZ     r0,|L1.1980|
        MOV      r4,#0
        B        |L1.1976|
|L1.1906|
        LDRB     r8,[sp,r4]
        MOV      r5,#0
        B        |L1.1966|
|L1.1916|
        RSB      r0,r5,#7
        ASR      r0,r8,r0
        TST      r0,#1
        BEQ      |L1.1946|
        ADDS     r2,r7,r4
        UXTH     r1,r2
        ADDS     r2,r6,r5
        UXTH     r0,r2
        MOV      r2,r10
        BL       LCD_SetPoint
        B        |L1.1960|
|L1.1946|
        ADDS     r2,r7,r4
        UXTH     r1,r2
        ADDS     r2,r6,r5
        UXTH     r0,r2
        MOV      r2,r11
        BL       LCD_SetPoint
|L1.1960|
        ADD      r0,r5,#1
        UXTH     r5,r0
|L1.1966|
        CMP      r5,#8
        BLT      |L1.1916|
        ADD      r0,r4,#1
        UXTH     r4,r0
|L1.1976|
        CMP      r4,#0x10
        BLT      |L1.1906|
|L1.1980|
        LDR      r0,|L1.2580|
        LDRB     r0,[r0,#0]  ; text_mode
        CMP      r0,#1
        BNE      |L1.2068|
        MOV      r4,#0
        B        |L1.2064|
|L1.1994|
        LDRB     r8,[sp,r4]
        MOV      r5,#0
        B        |L1.2054|
|L1.2004|
        RSB      r0,r5,#7
        ASR      r0,r8,r0
        TST      r0,#1
        BEQ      |L1.2034|
        ADDS     r2,r7,r5
        UXTH     r1,r2
        SUBS     r2,r6,r4
        UXTH     r0,r2
        MOV      r2,r10
        BL       LCD_SetPoint
        B        |L1.2048|
|L1.2034|
        ADDS     r2,r7,r5
        UXTH     r1,r2
        SUBS     r2,r6,r4
        UXTH     r0,r2
        MOV      r2,r11
        BL       LCD_SetPoint
|L1.2048|
        ADD      r0,r5,#1
        UXTH     r5,r0
|L1.2054|
        CMP      r5,#8
        BLT      |L1.2004|
        ADD      r0,r4,#1
        UXTH     r4,r0
|L1.2064|
        CMP      r4,#0x10
        BLT      |L1.1994|
|L1.2068|
        POP      {r0-r12,pc}
        ENDP

PutFigure PROC
        PUSH     {r0-r11,lr}
        SUB      sp,sp,#8
        MOV      r8,r0
        MOV      r9,r1
        MOV      r11,r2
        MOV      r0,#2
        STR      r0,[sp,#4]
        ADD      r0,sp,#4
        STR      r0,[sp,#0]
        LDR      r0,|L1.2584|
        ADD      r0,r0,r11,LSL #4
        STR      r0,[sp,#0]
        LDR      r0,|L1.2580|
        LDRB     r0,[r0,#0]  ; text_mode
        CMP      r0,#0
        BNE      |L1.2262|
        MOV      r4,r0
        B        |L1.2258|
|L1.2114|
        LDR      r0,[sp,#0]
        LDRH     r10,[r0,r4,LSL #1]
        MOV      r6,#0
        B        |L1.2244|
|L1.2126|
        MOV      r5,#0
        B        |L1.2234|
|L1.2132|
        MOV      r7,#0
        B        |L1.2220|
|L1.2138|
        RSB      r0,r5,#0xf
        ASR      r0,r10,r0
        TST      r0,#1
        BEQ      |L1.2184|
        LDRH     r2,[sp,#4]
        MLA      r2,r2,r4,r6
        ADD      r2,r2,r9
        UXTH     r1,r2
        LDRH     r2,[sp,#4]
        MLA      r2,r2,r5,r8
        ADD      r2,r2,r7
        UXTH     r0,r2
        LDR      r2,[sp,#0x14]
        BL       LCD_SetPoint
        B        |L1.2214|
|L1.2184|
        LDRH     r2,[sp,#4]
        MLA      r2,r2,r4,r6
        ADD      r2,r2,r9
        UXTH     r1,r2
        LDRH     r2,[sp,#4]
        MLA      r2,r2,r5,r8
        ADD      r2,r2,r7
        UXTH     r0,r2
        LDR      r2,[sp,#0x3c]
        BL       LCD_SetPoint
|L1.2214|
        ADD      r0,r7,#1
        UXTH     r7,r0
|L1.2220|
        LDRH     r0,[sp,#4]
        CMP      r7,r0
        BLT      |L1.2138|
        ADD      r0,r5,#1
        UXTH     r5,r0
|L1.2234|
        CMP      r5,#0x10
        BLT      |L1.2132|
        ADD      r0,r6,#1
        UXTH     r6,r0
|L1.2244|
        LDRH     r0,[sp,#4]
        CMP      r6,r0
        BLT      |L1.2126|
        ADD      r0,r4,#1
        UXTH     r4,r0
|L1.2258|
        CMP      r4,#8
        BLT      |L1.2114|
|L1.2262|
        LDR      r0,|L1.2580|
        LDRB     r0,[r0,#0]  ; text_mode
        CMP      r0,#1
        BNE      |L1.2428|
        MOV      r4,#0
        B        |L1.2424|
|L1.2276|
        LDR      r0,[sp,#0]
        LDRH     r10,[r0,r4,LSL #1]
        MOV      r6,#0
        B        |L1.2410|
|L1.2288|
        MOV      r5,#0
        B        |L1.2400|
|L1.2294|
        MOV      r7,#0
        B        |L1.2386|
|L1.2300|
        RSB      r0,r5,#0xf
        ASR      r0,r10,r0
        TST      r0,#1
        BEQ      |L1.2348|
        LDRH     r2,[sp,#4]
        MLA      r2,r2,r5,r9
        ADD      r2,r2,r7
        UXTH     r1,r2
        LDRH     r2,[sp,#4]
        MLA      r2,r2,r4,r6
        SUB      r2,r8,r2
        UXTH     r0,r2
        LDR      r2,[sp,#0x14]
        BL       LCD_SetPoint
        B        |L1.2380|
|L1.2348|
        LDRH     r2,[sp,#4]
        MLA      r2,r2,r5,r9
        ADD      r2,r2,r7
        UXTH     r1,r2
        LDRH     r2,[sp,#4]
        MLA      r2,r2,r4,r6
        SUB      r2,r8,r2
        UXTH     r0,r2
        LDR      r2,[sp,#0x3c]
        BL       LCD_SetPoint
|L1.2380|
        ADD      r0,r7,#1
        UXTH     r7,r0
|L1.2386|
        LDRH     r0,[sp,#4]
        CMP      r7,r0
        BLT      |L1.2300|
        ADD      r0,r5,#1
        UXTH     r5,r0
|L1.2400|
        CMP      r5,#0x10
        BLT      |L1.2294|
        ADD      r0,r6,#1
        UXTH     r6,r0
|L1.2410|
        LDRH     r0,[sp,#4]
        CMP      r6,r0
        BLT      |L1.2288|
        ADD      r0,r4,#1
        UXTH     r4,r0
|L1.2424|
        CMP      r4,#8
        BLT      |L1.2276|
|L1.2428|
        ADD      sp,sp,#0x18
        POP      {r4-r11,pc}
        ENDP

GUI_Text PROC
        PUSH     {r3-r9,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r8,r3
        LDR      r9,[sp,#0x20]
        NOP      
|L1.2452|
        LDRB     r7,[r6],#1
        MOV      r3,r8
        MOV      r2,r7
        MOV      r1,r5
        MOV      r0,r4
        STR      r9,[sp,#0]
        BL       PutChar
        LDR      r0,|L1.2580|
        LDRB     r0,[r0,#0]  ; text_mode
        CBNZ     r0,|L1.2540|
        LDR      r0,|L1.2572|
        LDRH     r0,[r0,#0]  ; MAX_X
        SUBS     r0,r0,#9
        CMP      r0,r4
        BLT      |L1.2506|
        LDR      r0,|L1.2576|
        LDRH     r0,[r0,#0]  ; MAX_Y
        SUBS     r0,r0,#0x11
        CMP      r0,r5
        BLT      |L1.2506|
        ADD      r0,r4,#8
        UXTH     r4,r0
        B        |L1.2526|
|L1.2506|
        LDR      r0,|L1.2572|
        LDRH     r0,[r0,#0]  ; MAX_X
        SUBS     r0,r0,#9
        CMP      r0,r4
        BGE      |L1.2526|
        MOV      r4,#0
        ADD      r0,r5,#0x10
        UXTH     r5,r0
|L1.2526|
        LDR      r0,|L1.2576|
        LDRH     r0,[r0,#0]  ; MAX_Y
        SUBS     r0,r0,#0x11
        CMP      r0,r5
        BGE      |L1.2540|
        MOV      r5,#0
|L1.2540|
        LDR      r0,|L1.2580|
        LDRB     r0,[r0,#0]  ; text_mode
        CMP      r0,#1
        BNE      |L1.2638|
        LDR      r0,|L1.2572|
        LDRH     r0,[r0,#0]  ; MAX_X
        SUBS     r0,r0,#0x11
        CMP      r0,r4
        BLT      |L1.2598|
        LDR      r0,|L1.2576|
        LDRH     r0,[r0,#0]  ; MAX_Y
        SUBS     r0,r0,#9
        CMP      r0,r5
        B        |L1.2588|
|L1.2568|
        DCD      0x2009c000
|L1.2572|
        DCD      MAX_X
|L1.2576|
        DCD      MAX_Y
|L1.2580|
        DCD      text_mode
|L1.2584|
        DCD      figures
|L1.2588|
        BLT      |L1.2598|
        ADD      r0,r5,#8
        UXTH     r5,r0
        B        |L1.2618|
|L1.2598|
        LDR      r0,|L1.3432|
        LDRH     r0,[r0,#0]  ; MAX_Y
        SUBS     r0,r0,#9
        CMP      r0,r5
        BGE      |L1.2618|
        MOV      r5,#0
        SUB      r0,r4,#0x10
        UXTH     r4,r0
|L1.2618|
        LDR      r0,|L1.3436|
        LDRH     r0,[r0,#0]  ; MAX_X
        SUBS     r0,r0,#0x11
        CMP      r0,r4
        BGE      |L1.2638|
        LDR      r0,|L1.3436|
        LDRH     r0,[r0,#0]  ; MAX_X
        SUB      r0,r0,#1
        UXTH     r4,r0
|L1.2638|
        LDRB     r0,[r6,#0]
        CMP      r0,#0
        BNE      |L1.2452|
        POP      {r3-r9,pc}
        ENDP

LCD_DrawImage PROC
        PUSH     {r4,r5,lr}
        MOV      r5,r0
        MOV      r1,#0x37
        MOV      r0,#0x50
        BL       LCD_WriteReg
        MOVS     r1,#0xb6
        MOVS     r0,#0x51
        BL       LCD_WriteReg
        MOVS     r1,#0x5f
        MOVS     r0,#0x52
        BL       LCD_WriteReg
        MOVS     r1,#0xdf
        MOVS     r0,#0x53
        BL       LCD_WriteReg
        MOV      r4,#0
        B        |L1.2710|
|L1.2694|
        LDRH     r1,[r5,r4,LSL #1]
        MOVS     r0,#0x22
        BL       LCD_WriteReg
        ADD      r0,r4,#1
        UXTH     r4,r0
|L1.2710|
        MOV      r0,#0x3a98
        CMP      r4,r0
        BLT      |L1.2694|
        POP      {r4,r5,pc}
        ENDP

LCD_DrawLine PROC
        PUSH     {r4-r11,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r9,r3
        MOV      r11,#0
        CMP      r4,r6
        BGE      |L1.2744|
        MOVS     r0,#1
        B        |L1.2746|
|L1.2744|
        MOVS     r0,#0
|L1.2746|
        CMP      r5,r9
        BGE      |L1.2754|
        MOVS     r1,#1
        B        |L1.2756|
|L1.2754|
        MOVS     r1,#0
|L1.2756|
        TST      r0,r1
        BEQ      |L1.2766|
        MOV      r11,#1
        B        |L1.2894|
|L1.2766|
        CMP      r4,r6
        BLE      |L1.2774|
        MOVS     r0,#1
        B        |L1.2776|
|L1.2774|
        MOVS     r0,#0
|L1.2776|
        CMP      r5,r9
        BGE      |L1.2784|
        MOVS     r1,#1
        B        |L1.2786|
|L1.2784|
        MOVS     r1,#0
|L1.2786|
        TST      r0,r1
        BEQ      |L1.2816|
        MOV      r11,#2
        SXTH     r8,r6
        MOV      r6,r4
        UXTH     r4,r8
        SXTH     r8,r9
        MOV      r9,r5
        UXTH     r5,r8
        B        |L1.2894|
|L1.2816|
        CMP      r4,r6
        BGE      |L1.2824|
        MOVS     r0,#1
        B        |L1.2826|
|L1.2824|
        MOVS     r0,#0
|L1.2826|
        CMP      r5,r9
        BLE      |L1.2834|
        MOVS     r1,#1
        B        |L1.2836|
|L1.2834|
        MOVS     r1,#0
|L1.2836|
        TST      r0,r1
        BEQ      |L1.2846|
        MOV      r11,#2
        B        |L1.2894|
|L1.2846|
        CMP      r4,r6
        BLE      |L1.2854|
        MOVS     r0,#1
        B        |L1.2856|
|L1.2854|
        MOVS     r0,#0
|L1.2856|
        CMP      r5,r6
        BLE      |L1.2864|
        MOVS     r1,#1
        B        |L1.2866|
|L1.2864|
        MOVS     r1,#0
|L1.2866|
        TST      r0,r1
        BEQ      |L1.2894|
        MOV      r11,#1
        SXTH     r8,r6
        MOV      r6,r4
        UXTH     r4,r8
        SXTH     r8,r9
        MOV      r9,r5
        UXTH     r5,r8
|L1.2894|
        CMP      r4,r6
        BNE      |L1.2952|
        CMP      r5,r9
        BGE      |L1.2926|
        NOP      
|L1.2904|
        MOV      r1,r5
        MOV      r0,r4
        LDR      r2,[sp,#0x24]
        BL       LCD_SetPoint
        ADD      r0,r5,#1
        UXTH     r5,r0
        CMP      r9,r5
        BGE      |L1.2904|
        B        |L1.2948|
|L1.2926|
        NOP      
|L1.2928|
        MOV      r1,r5
        MOV      r0,r4
        LDR      r2,[sp,#0x24]
        BL       LCD_SetPoint
        SUB      r0,r5,#1
        UXTH     r5,r0
        CMP      r5,r9
        BGE      |L1.2928|
|L1.2948|
        POP      {r4-r11,pc}
|L1.2952|
        CMP      r5,r9
        BNE      |L1.3008|
        CMP      r4,r6
        BGE      |L1.2984|
        NOP      
|L1.2962|
        MOV      r1,r5
        MOV      r0,r4
        LDR      r2,[sp,#0x24]
        BL       LCD_SetPoint
        ADD      r0,r4,#1
        UXTH     r4,r0
        CMP      r6,r4
        BGE      |L1.2962|
        B        |L1.3006|
|L1.2984|
        NOP      
|L1.2986|
        MOV      r1,r5
        MOV      r0,r4
        LDR      r2,[sp,#0x24]
        BL       LCD_SetPoint
        SUB      r0,r4,#1
        UXTH     r4,r0
        CMP      r4,r6
        BGE      |L1.2986|
|L1.3006|
        B        |L1.2948|
|L1.3008|
        CMP      r11,#1
        BEQ      |L1.3022|
        CMP      r11,#2
        BNE      |L1.3270|
        B        |L1.3212|
|L1.3022|
        SUB      r0,r6,r4
        SXTH     r10,r0
        SUB      r0,r9,r5
        SXTH     r7,r0
        CMP      r10,r7
        BLE      |L1.3126|
        RSB      r0,r10,r7,LSL #1
        SXTH     r8,r0
        B        |L1.3110|
|L1.3050|
        MOV      r1,r5
        MOV      r0,r4
        LDR      r2,[sp,#0x24]
        BL       LCD_SetPoint
        ADD      r0,r4,#1
        UXTH     r4,r0
        CMP      r8,#0
        BLE      |L1.3098|
        ADD      r0,r5,#1
        UXTH     r5,r0
        LSL      r0,r7,#1
        MOV      r1,#2
        MLS      r0,r1,r10,r0
        ADD      r0,r0,r8
        SXTH     r8,r0
        B        |L1.3110|
|L1.3098|
        MOV      r0,#2
        MLA      r0,r0,r7,r8
        SXTH     r8,r0
|L1.3110|
        CMP      r4,r6
        BNE      |L1.3050|
        MOV      r1,r5
        MOV      r0,r4
        LDR      r2,[sp,#0x24]
        BL       LCD_SetPoint
        B        |L1.3210|
|L1.3126|
        RSB      r0,r7,r10,LSL #1
        SXTH     r8,r0
        B        |L1.3196|
|L1.3136|
        MOV      r1,r5
        MOV      r0,r4
        LDR      r2,[sp,#0x24]
        BL       LCD_SetPoint
        ADD      r0,r5,#1
        UXTH     r5,r0
        CMP      r8,#0
        BLE      |L1.3184|
        ADD      r0,r4,#1
        UXTH     r4,r0
        LSL      r0,r7,#1
        MOV      r1,#2
        MLS      r0,r1,r10,r0
        ADD      r0,r0,r8
        SXTH     r8,r0
        B        |L1.3196|
|L1.3184|
        MOV      r0,#2
        MLA      r0,r0,r7,r8
        SXTH     r8,r0
|L1.3196|
        CMP      r5,r9
        BNE      |L1.3136|
        MOV      r1,r5
        MOV      r0,r4
        LDR      r2,[sp,#0x24]
        BL       LCD_SetPoint
|L1.3210|
        B        |L1.3408|
|L1.3212|
        SUB      r0,r6,r4
        SXTH     r10,r0
        SUB      r0,r5,r9
        SXTH     r7,r0
        CMP      r10,r7
        BLE      |L1.3320|
        RSB      r0,r10,r7,LSL #1
        SXTH     r8,r0
        B        |L1.3304|
|L1.3240|
        MOV      r1,r5
        MOV      r0,r4
        LDR      r2,[sp,#0x24]
        BL       LCD_SetPoint
        ADD      r0,r4,#1
        UXTH     r4,r0
        CMP      r8,#0
        BLE      |L1.3292|
        SUB      r0,r5,#1
        UXTH     r5,r0
        B        |L1.3272|
|L1.3270|
        B        |L1.3406|
|L1.3272|
        LSL      r0,r7,#1
        MOV      r1,#2
        MLS      r0,r1,r10,r0
        ADD      r0,r0,r8
        SXTH     r8,r0
        B        |L1.3304|
|L1.3292|
        MOV      r0,#2
        MLA      r0,r0,r7,r8
        SXTH     r8,r0
|L1.3304|
        CMP      r4,r6
        BNE      |L1.3240|
        MOV      r1,r5
        MOV      r0,r4
        LDR      r2,[sp,#0x24]
        BL       LCD_SetPoint
        B        |L1.3404|
|L1.3320|
        RSB      r0,r7,r10,LSL #1
        SXTH     r8,r0
        B        |L1.3390|
|L1.3330|
        MOV      r1,r5
        MOV      r0,r4
        LDR      r2,[sp,#0x24]
        BL       LCD_SetPoint
        SUB      r0,r5,#1
        UXTH     r5,r0
        CMP      r8,#0
        BLE      |L1.3378|
        ADD      r0,r4,#1
        UXTH     r4,r0
        LSL      r0,r7,#1
        MOV      r1,#2
        MLS      r0,r1,r10,r0
        ADD      r0,r0,r8
        SXTH     r8,r0
        B        |L1.3390|
|L1.3378|
        MOV      r0,#2
        MLA      r0,r0,r7,r8
        SXTH     r8,r0
|L1.3390|
        CMP      r5,r9
        BNE      |L1.3330|
        MOV      r1,r5
        MOV      r0,r4
        LDR      r2,[sp,#0x24]
        BL       LCD_SetPoint
|L1.3404|
        B        |L1.3408|
|L1.3406|
        NOP      
|L1.3408|
        NOP      
        NOP      
        B        |L1.2948|
        ENDP

LCD_ShowCameraPixel PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r1,r4
        MOV      r0,#0x22
        BL       LCD_WriteReg
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L1.3432|
        DCD      MAX_Y
|L1.3436|
        DCD      MAX_X

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "GLCD\\GLCD.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_GLCD_c_948ddf3b____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_GLCD_c_948ddf3b____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_GLCD_c_948ddf3b____REVSH|
#line 128
|__asm___6_GLCD_c_948ddf3b____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT LCD_WriteReg [CODE]
        EXPORT LCD_SetCursor [CODE]
        EXPORT LCD_Initialization [CODE]
        EXPORT LCD_Clear [CODE]
        EXPORT window_clear [CODE]
        EXPORT draw_RGB565_image [CODE]
        EXPORT LCD_GetPoint [CODE]
        EXPORT LCD_SetPoint [CODE]
        EXPORT PutChar [CODE]
        EXPORT PutFigure [CODE]
        EXPORT GUI_Text [CODE]
        EXPORT LCD_DrawImage [CODE]
        EXPORT LCD_DrawLine [CODE]
        EXPORT LCD_ShowCameraPixel [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT PINSEL_ConfigPin [CODE]
        IMPORT GPIO_SetDir [CODE]
        IMPORT MAX_X [DATA]
        IMPORT MAX_Y [DATA]
        IMPORT Window [CODE]
        IMPORT GetASCIICode [CODE]
        IMPORT text_mode [DATA]
        IMPORT figures [DATA]

        KEEP LCD_Configuration
        KEEP delay_ms
        KEEP LCD_BGR2RGB

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
