; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--debug -c --asm -otouchpanel.o --depend=touchpanel.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=touchpanel.crf Touch_Pannel\TouchPanel.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

TP_Init PROC
        PUSH     {lr}
        SUB      sp,sp,#0x24
        MOV      r0,#2
        STRB     r0,[sp,#0x1e]
        MOV      r0,#0
        STRB     r0,[sp,#0x20]
        STRB     r0,[sp,#0x1f]
        STRB     r0,[sp,#0x1c]
        MOV      r0,#7
        STRB     r0,[sp,#0x1d]
        ADD      r0,sp,#0x1c
        BL       PINSEL_ConfigPin
        MOV      r0,#8
        STRB     r0,[sp,#0x1d]
        ADD      r0,sp,#0x1c
        BL       PINSEL_ConfigPin
        MOV      r0,#9
        STRB     r0,[sp,#0x1d]
        ADD      r0,sp,#0x1c
        BL       PINSEL_ConfigPin
        MOV      r0,#0
        STRB     r0,[sp,#0x1e]
        STRB     r0,[sp,#0x1c]
        MOV      r0,#6
        STRB     r0,[sp,#0x1d]
        ADD      r0,sp,#0x1c
        BL       PINSEL_ConfigPin
        MOV      r0,#0
        STRB     r0,[sp,#0x1e]
        MOV      r0,#2
        STRB     r0,[sp,#0x1c]
        MOV      r0,#0xd
        STRB     r0,[sp,#0x1d]
        ADD      r0,sp,#0x1c
        BL       PINSEL_ConfigPin
        MOVS     r2,#0
        MOV      r1,#0x2000
        MOVS     r0,#2
        BL       GPIO_SetDir
        MOV      r1,#0x2000
        MOVS     r0,#2
        BL       GPIO_SetValue
        MOVS     r2,#1
        MOVS     r1,#0x40
        MOVS     r0,#0
        BL       GPIO_SetDir
        MOVS     r1,#0x40
        MOVS     r0,#0
        BL       GPIO_SetValue
        ADD      r0,sp,#4
        BL       SSP_ConfigStructInit
        LDR      r0,|L1.1192|
        STR      r0,[sp,#0x18]
        ADD      r1,sp,#4
        LDR      r0,|L1.1196|
        BL       SSP_Init
        MOVS     r1,#1
        LDR      r0,|L1.1196|
        BL       SSP_Cmd
        ADD      sp,sp,#0x24
        POP      {pc}
        ENDP

DelayUS PROC
        PUSH     {r4,lr}
        MOV      r1,#0
        B        |L1.224|
|L1.204|
        MOV      r2,#0xc
        NOP      
|L1.210|
        MOVS     r3,r2
        SUB      r4,r2,#1
        UXTB     r2,r4
        BNE      |L1.210|
        ADD      r1,r1,#1
|L1.224|
        CMP      r1,r0
        BCC      |L1.204|
        POP      {r4,pc}
        ENDP

WR_CMD PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        NOP      
|L1.236|
        MOVS     r1,#0x10
        LDR      r0,|L1.1196|
        BL       SSP_GetStatus
        CMP      r0,#1
        BEQ      |L1.236|
        MOV      r1,r4
        LDR      r0,|L1.1196|
        BL       SSP_SendData
        NOP      
|L1.258|
        MOVS     r1,#4
        LDR      r0,|L1.1196|
        BL       SSP_GetStatus
        CMP      r0,#0
        BEQ      |L1.258|
        LDR      r0,|L1.1196|
        BL       SSP_ReceiveData
        UXTB     r0,r0
        POP      {r4,pc}
        ENDP

RD_AD PROC
        PUSH     {r4-r6,lr}
        MOVS     r0,#0
        BL       WR_CMD
        MOV      r5,r0
        LSL      r4,r5,#8
        MOV      r0,#1
        BL       DelayUS
        MOVS     r0,#0
        BL       WR_CMD
        MOV      r5,r0
        ORR      r4,r4,r5
        ASR      r4,r4,#3
        UBFX     r4,r4,#0,#12
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

Read_X PROC
        PUSH     {r4,lr}
        MOV      r0,#0x40
        LDR      r1,|L1.1200|
        STR      r0,[r1,#0x1c]
        MOV      r0,#1
        BL       DelayUS
        MOVS     r0,#0x90
        BL       WR_CMD
        MOVS     r0,#1
        BL       DelayUS
        BL       RD_AD
        MOV      r4,r0
        MOV      r0,#0x40
        LDR      r1,|L1.1200|
        STR      r0,[r1,#0x18]
        MOV      r0,r4
        POP      {r4,pc}
        ENDP

Read_Y PROC
        PUSH     {r4,lr}
        MOV      r0,#0x40
        LDR      r1,|L1.1200|
        STR      r0,[r1,#0x1c]
        MOV      r0,#1
        BL       DelayUS
        MOVS     r0,#0xd0
        BL       WR_CMD
        MOVS     r0,#1
        BL       DelayUS
        BL       RD_AD
        MOV      r4,r0
        MOV      r0,#0x40
        LDR      r1,|L1.1200|
        STR      r0,[r1,#0x18]
        MOV      r0,r4
        POP      {r4,pc}
        ENDP

TP_GetAdXY PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r5,r1
        BL       Read_X
        MOV      r6,r0
        MOV      r0,#1
        BL       DelayUS
        BL       Read_Y
        MOV      r7,r0
        STR      r6,[r4,#0]
        STR      r7,[r5,#0]
        POP      {r4-r8,pc}
        ENDP

TP_DrawPoint PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r2,#0xf800
        MOV      r1,r4
        MOV      r0,r5
        BL       LCD_SetPoint
        MOV      r2,#0xf800
        MOV      r1,r4
        ADDS     r0,r5,#1
        UXTH     r0,r0
        BL       LCD_SetPoint
        MOV      r2,#0xf800
        ADDS     r0,r4,#1
        UXTH     r1,r0
        MOV      r0,r5
        BL       LCD_SetPoint
        MOV      r2,#0xf800
        ADDS     r0,r4,#1
        UXTH     r1,r0
        ADDS     r0,r5,#1
        UXTH     r0,r0
        BL       LCD_SetPoint
        POP      {r4-r6,pc}
        ENDP

DrawCross PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        SUB      r1,r4,#2
        UXTH     r2,r1
        SUB      r1,r4,#0xf
        UXTH     r0,r1
        MOV      r3,r5
        MOV      r1,r5
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        MOV      r3,r5
        ADD      r0,r4,#0xf
        UXTH     r2,r0
        MOV      r1,r5
        ADDS     r0,r4,#2
        UXTH     r0,r0
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        SUBS     r0,r5,#2
        UXTH     r3,r0
        SUBS     r0,r0,#0xd
        UXTH     r1,r0
        MOV      r2,r4
        MOV      r0,r4
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        ADD      r0,r5,#0xf
        UXTH     r3,r0
        MOV      r2,r4
        ADDS     r0,r5,#2
        UXTH     r1,r0
        MOV      r0,r4
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        SUBS     r1,r4,#7
        UXTH     r2,r1
        SUBS     r1,r1,#8
        UXTH     r0,r1
        ADD      r1,r5,#0xf
        UXTH     r3,r1
        UXTH     r1,r1
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        SUB      r1,r4,#0xf
        UXTH     r2,r1
        UXTH     r0,r1
        ADD      r1,r5,#0xf
        UXTH     r3,r1
        ADDS     r1,r5,#7
        UXTH     r1,r1
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        SUB      r7,r5,#0xf
        UXTH     r3,r7
        SUBS     r7,r4,#7
        UXTH     r2,r7
        SUB      r7,r5,#0xf
        UXTH     r1,r7
        SUB      r7,r4,#0xf
        UXTH     r0,r7
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        SUB      r7,r5,#0xf
        UXTH     r3,r7
        SUB      r7,r4,#0xf
        UXTH     r2,r7
        SUBS     r7,r5,#7
        UXTH     r1,r7
        SUB      r7,r4,#0xf
        UXTH     r0,r7
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        ADD      r0,r5,#0xf
        UXTH     r3,r0
        ADD      r0,r4,#0xf
        UXTH     r2,r0
        ADD      r0,r5,#0xf
        UXTH     r1,r0
        ADDS     r0,r4,#7
        UXTH     r0,r0
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        ADD      r0,r5,#0xf
        UXTH     r3,r0
        ADD      r0,r4,#0xf
        UXTH     r2,r0
        ADDS     r0,r5,#7
        UXTH     r1,r0
        ADD      r0,r4,#0xf
        UXTH     r0,r0
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        SUB      r0,r5,#0xf
        UXTH     r3,r0
        UXTH     r1,r0
        ADD      r0,r4,#0xf
        UXTH     r2,r0
        ADDS     r0,r4,#7
        UXTH     r0,r0
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        SUBS     r0,r5,#7
        UXTH     r3,r0
        SUBS     r0,r0,#8
        UXTH     r1,r0
        ADD      r0,r4,#0xf
        UXTH     r2,r0
        UXTH     r0,r0
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        MOV      r0,r7
        UXTH     r1,r0
        LDR      r0,|L1.1204|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        LDR      r2,|L1.1208|
        LDRB     r2,[r2,#0]  ; num_botton_menu
        ADD      r0,r0,r2
        LDR      r2,|L1.1212|
        STRH     r1,[r2,r0,LSL #3]
        SUB      r0,r5,#0xf
        UXTH     r1,r0
        LDR      r0,|L1.1204|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        LDR      r2,|L1.1208|
        LDRB     r2,[r2,#0]  ; num_botton_menu
        ADD      r0,r0,r2
        LDR      r2,|L1.1212|
        ADD      r0,r2,r0,LSL #3
        STRH     r1,[r0,#2]
        MOV      r0,#0x1e
        LDR      r1,|L1.1204|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        LDR      r2,|L1.1208|
        LDRB     r2,[r2,#0]  ; num_botton_menu
        ADD      r1,r1,r2
        LDR      r2,|L1.1212|
        ADD      r1,r2,r1,LSL #3
        STRH     r0,[r1,#4]
        LDR      r1,|L1.1204|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        LDR      r2,|L1.1208|
        LDRB     r2,[r2,#0]  ; num_botton_menu
        ADD      r1,r1,r2
        LDR      r2,|L1.1212|
        ADD      r1,r2,r1,LSL #3
        STRH     r0,[r1,#6]
        LDR      r0,|L1.1208|
        LDRB     r0,[r0,#0]  ; num_botton_menu
        ADD      r0,r0,#1
        LDR      r1,|L1.1208|
        STRB     r0,[r1,#0]
        POP      {r3-r7,pc}
        ENDP

DrawArrow PROC
        PUSH     {r3-r7,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        CMP      r7,#1
        BEQ      |L1.940|
        CMP      r7,#2
        BEQ      |L1.1006|
        CMP      r7,#3
        BEQ      |L1.1072|
        CMP      r7,#4
        BNE      |L1.1188|
        B        |L1.1138|
|L1.940|
        SUB      r0,r5,#0xf
        UXTH     r1,r0
        ADDS     r0,r0,#0x1e
        UXTH     r3,r0
        MOV      r2,r4
        MOV      r0,r4
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        SUB      r1,r5,#0xf
        UXTH     r3,r1
        SUB      r1,r4,#0xf
        UXTH     r0,r1
        MOV      r2,r4
        MOV      r1,r5
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        SUB      r0,r5,#0xf
        UXTH     r1,r0
        MOV      r3,r5
        ADD      r0,r4,#0xf
        UXTH     r2,r0
        MOV      r0,r4
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        B        |L1.1236|
|L1.1006|
        SUB      r0,r5,#0xf
        UXTH     r1,r0
        ADDS     r0,r0,#0x1e
        UXTH     r3,r0
        MOV      r2,r4
        MOV      r0,r4
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        SUB      r1,r4,#0xf
        UXTH     r0,r1
        ADD      r1,r5,#0xf
        UXTH     r3,r1
        MOV      r2,r4
        MOV      r1,r5
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        ADD      r0,r5,#0xf
        UXTH     r3,r0
        MOV      r2,r4
        MOV      r1,r5
        ADD      r0,r4,#0xf
        UXTH     r0,r0
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        B        |L1.1236|
|L1.1072|
        SUB      r1,r4,#0xf
        UXTH     r0,r1
        MOV      r3,r5
        ADDS     r1,r1,#0x1e
        UXTH     r2,r1
        MOV      r1,r5
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        MOV      r3,r5
        ADD      r0,r4,#0xf
        UXTH     r2,r0
        ADD      r0,r5,#0xf
        UXTH     r1,r0
        MOV      r0,r4
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        SUB      r0,r5,#0xf
        UXTH     r1,r0
        MOV      r3,r5
        ADD      r0,r4,#0xf
        UXTH     r2,r0
        MOV      r0,r4
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        B        |L1.1236|
|L1.1138|
        SUB      r1,r4,#0xf
        UXTH     r0,r1
        MOV      r3,r5
        ADDS     r1,r1,#0x1e
        UXTH     r2,r1
        MOV      r1,r5
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        SUB      r0,r4,#0xf
        UXTH     r2,r0
        MOV      r3,r5
        ADD      r0,r5,#0xf
        UXTH     r1,r0
        MOV      r0,r4
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        SUB      r0,r4,#0xf
        UXTH     r2,r0
        B        |L1.1216|
|L1.1188|
        B        |L1.1234|
        DCW      0x0000
|L1.1192|
        DCD      0x0007a120
|L1.1196|
        DCD      0x40030000
|L1.1200|
        DCD      0x2009c000
|L1.1204|
        DCD      num_bars_menu
|L1.1208|
        DCD      num_botton_menu
|L1.1212|
        DCD      menu_rect
|L1.1216|
        SUB      r0,r5,#0xf
        UXTH     r1,r0
        MOV      r3,r5
        MOV      r0,r4
        STR      r6,[sp,#0]
        BL       LCD_DrawLine
        B        |L1.1236|
|L1.1234|
        NOP      
|L1.1236|
        NOP      
        SUB      r0,r4,#0xf
        LDR      r1,|L1.2260|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        LDR      r2,|L1.2264|
        LDRB     r2,[r2,#0]  ; num_botton_menu
        ADD      r1,r1,r2
        LDR      r2,|L1.2268|
        STRH     r0,[r2,r1,LSL #3]
        SUB      r0,r5,#0xf
        LDR      r1,|L1.2260|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        LDR      r2,|L1.2264|
        LDRB     r2,[r2,#0]  ; num_botton_menu
        ADD      r1,r1,r2
        LDR      r2,|L1.2268|
        ADD      r1,r2,r1,LSL #3
        STRH     r0,[r1,#2]
        MOV      r0,#0x1e
        LDR      r1,|L1.2260|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        LDR      r2,|L1.2264|
        LDRB     r2,[r2,#0]  ; num_botton_menu
        ADD      r1,r1,r2
        LDR      r2,|L1.2268|
        ADD      r1,r2,r1,LSL #3
        STRH     r0,[r1,#4]
        LDR      r1,|L1.2260|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        LDR      r2,|L1.2264|
        LDRB     r2,[r2,#0]  ; num_botton_menu
        ADD      r1,r1,r2
        LDR      r2,|L1.2268|
        ADD      r1,r2,r1,LSL #3
        STRH     r0,[r1,#6]
        LDR      r0,|L1.2264|
        LDRB     r0,[r0,#0]  ; num_botton_menu
        ADD      r0,r0,#1
        LDR      r1,|L1.2264|
        STRB     r0,[r1,#0]
        POP      {r3-r7,pc}
        ENDP

TextButton PROC
        PUSH     {r3-r11,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r10,r2
        MOV      r8,r3
        MOV      r9,#3
        MOV      r0,r10
        BL       strlen
        LSL      r1,r9,#1
        ADD      r0,r1,r0,LSL #3
        UXTB     r7,r0
        LSL      r0,r9,#1
        ADD      r6,r0,#0x10
        LDR      r0,|L1.2272|
        LDRB     r0,[r0,#0]  ; text_mode
        CMP      r0,#0
        BNE      |L1.1570|
        ADDS     r0,r4,r7
        UXTH     r2,r0
        MOV      r3,r5
        MOV      r1,r5
        MOV      r0,r4
        STR      r8,[sp,#0]
        BL       LCD_DrawLine
        ADDS     r0,r5,r6
        UXTH     r3,r0
        ADDS     r0,r4,r7
        UXTH     r2,r0
        ADDS     r0,r5,r6
        UXTH     r1,r0
        MOV      r0,r4
        STR      r8,[sp,#0]
        BL       LCD_DrawLine
        ADDS     r0,r5,r6
        UXTH     r3,r0
        MOV      r2,r4
        MOV      r1,r5
        MOV      r0,r4
        STR      r8,[sp,#0]
        BL       LCD_DrawLine
        ADDS     r1,r5,r6
        UXTH     r3,r1
        ADDS     r1,r4,r7
        UXTH     r2,r1
        ADDS     r1,r4,r7
        UXTH     r0,r1
        MOV      r1,r5
        STR      r8,[sp,#0]
        BL       LCD_DrawLine
        MOV      r0,#0x2595
        ADD      r2,r5,r9
        UXTH     r1,r2
        ADD      r2,r4,r9
        STR      r0,[sp,#0]
        UXTH     r0,r2
        MOV      r3,r8
        MOV      r2,r10
        BL       GUI_Text
        LDR      r0,|L1.2260|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        LDR      r1,|L1.2264|
        LDRB     r1,[r1,#0]  ; num_botton_menu
        ADD      r0,r0,r1
        LDR      r1,|L1.2268|
        STRH     r4,[r1,r0,LSL #3]
        LDR      r0,|L1.2260|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        LDR      r1,|L1.2264|
        LDRB     r1,[r1,#0]  ; num_botton_menu
        ADD      r0,r0,r1
        LDR      r1,|L1.2268|
        ADD      r0,r1,r0,LSL #3
        STRH     r5,[r0,#2]
        LDR      r0,|L1.2260|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        LDR      r1,|L1.2264|
        LDRB     r1,[r1,#0]  ; num_botton_menu
        ADD      r0,r0,r1
        LDR      r1,|L1.2268|
        ADD      r0,r1,r0,LSL #3
        STRH     r7,[r0,#4]
        LDR      r0,|L1.2260|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        LDR      r1,|L1.2264|
        LDRB     r1,[r1,#0]  ; num_botton_menu
        ADD      r0,r0,r1
        LDR      r1,|L1.2268|
        ADD      r0,r1,r0,LSL #3
        STRH     r6,[r0,#6]
        LDR      r0,|L1.2264|
        LDRB     r0,[r0,#0]  ; num_botton_menu
        ADD      r0,r0,#1
        LDR      r1,|L1.2264|
        STRB     r0,[r1,#0]
|L1.1570|
        LDR      r0,|L1.2272|
        LDRB     r0,[r0,#0]  ; text_mode
        CMP      r0,#1
        BNE      |L1.1772|
        SUBS     r0,r4,r6
        UXTH     r2,r0
        MOV      r3,r5
        MOV      r1,r5
        MOV      r0,r4
        STR      r8,[sp,#0]
        BL       LCD_DrawLine
        ADDS     r0,r5,r7
        UXTH     r3,r0
        SUBS     r0,r4,r6
        UXTH     r2,r0
        ADDS     r0,r5,r7
        UXTH     r1,r0
        MOV      r0,r4
        STR      r8,[sp,#0]
        BL       LCD_DrawLine
        ADDS     r0,r5,r7
        UXTH     r3,r0
        MOV      r2,r4
        MOV      r1,r5
        MOV      r0,r4
        STR      r8,[sp,#0]
        BL       LCD_DrawLine
        ADDS     r1,r5,r7
        UXTH     r3,r1
        SUBS     r1,r4,r6
        UXTH     r2,r1
        SUBS     r1,r4,r6
        UXTH     r0,r1
        MOV      r1,r5
        STR      r8,[sp,#0]
        BL       LCD_DrawLine
        MOV      r0,#0x2595
        ADD      r2,r5,r9
        UXTH     r1,r2
        SUB      r2,r4,r9
        STR      r0,[sp,#0]
        UXTH     r0,r2
        MOV      r3,r8
        MOV      r2,r10
        BL       GUI_Text
        SUB      r0,r4,r6
        UXTH     r1,r0
        LDR      r0,|L1.2260|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        LDR      r2,|L1.2264|
        LDRB     r2,[r2,#0]  ; num_botton_menu
        ADD      r0,r0,r2
        LDR      r2,|L1.2268|
        STRH     r1,[r2,r0,LSL #3]
        LDR      r0,|L1.2260|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        LDR      r1,|L1.2264|
        LDRB     r1,[r1,#0]  ; num_botton_menu
        ADD      r0,r0,r1
        MOV      r1,r2
        ADD      r0,r1,r0,LSL #3
        STRH     r5,[r0,#2]
        LDR      r0,|L1.2260|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        LDR      r1,|L1.2264|
        LDRB     r1,[r1,#0]  ; num_botton_menu
        ADD      r0,r0,r1
        MOV      r1,r2
        ADD      r0,r1,r0,LSL #3
        STRH     r6,[r0,#4]
        LDR      r0,|L1.2260|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        LDR      r1,|L1.2264|
        LDRB     r1,[r1,#0]  ; num_botton_menu
        ADD      r0,r0,r1
        MOV      r1,r2
        ADD      r0,r1,r0,LSL #3
        STRH     r7,[r0,#6]
        LDR      r0,|L1.2264|
        LDRB     r0,[r0,#0]  ; num_botton_menu
        ADD      r0,r0,#1
        LDR      r1,|L1.2264|
        STRB     r0,[r1,#0]
|L1.1772|
        POP      {r3-r11,pc}
        ENDP

Window PROC
        PUSH     {r4-r8,lr}
        MOV      r4,r0
        MOV      r7,r1
        MOV      r5,r2
        MOV      r6,r3
        MOV      r1,r7
        MOV      r0,#0x50
        BL       LCD_WriteReg
        MOV      r1,r6
        MOVS     r0,#0x51
        BL       LCD_WriteReg
        LDR      r0,|L1.2276|
        LDRH     r0,[r0,#0]  ; MAX_X
        SUBS     r0,r0,#1
        SUBS     r0,r0,r5
        UXTH     r1,r0
        MOVS     r0,#0x52
        BL       LCD_WriteReg
        LDR      r0,|L1.2276|
        LDRH     r0,[r0,#0]  ; MAX_X
        SUBS     r0,r0,#1
        SUBS     r0,r0,r4
        UXTH     r1,r0
        MOVS     r0,#0x53
        BL       LCD_WriteReg
        POP      {r4-r8,pc}
        ENDP

DrawRectangle PROC
        PUSH     {r4-r8,lr}
        MOV      r6,r0
        MOV      r7,r1
        MOV      r4,r2
        MOV      r5,r3
        LDR      r8,[sp,#0x18]
        ADD      r1,r6,r4
        LDR      r0,|L1.2276|
        LDRH     r0,[r0,#0]  ; MAX_X
        SUB      r0,r0,#1
        CMP      r1,r0
        BLE      |L1.1888|
        ADD      r0,r4,#1
        LDR      r1,|L1.2276|
        LDRH     r1,[r1,#0]  ; MAX_X
        SUB      r0,r1,r0
        UXTH     r6,r0
|L1.1888|
        ADDS     r1,r7,r5
        LDR      r0,|L1.2280|
        LDRH     r0,[r0,#0]  ; MAX_Y
        SUBS     r0,r0,#1
        CMP      r1,r0
        BLE      |L1.1914|
        ADD      r0,r5,#1
        LDR      r1,|L1.2280|
        LDRH     r1,[r1,#0]  ; MAX_Y
        SUB      r0,r1,r0
        UXTH     r7,r0
|L1.1914|
        MOV      r1,r7
        MOV      r0,r6
        BL       LCD_SetCursor
        ADDS     r0,r7,r5
        SUBS     r0,r0,#1
        UXTH     r3,r0
        ADDS     r0,r6,r4
        SUBS     r0,r0,#1
        UXTH     r2,r0
        MOV      r1,r7
        MOV      r0,r6
        BL       Window
        MOV      r2,r8
        MOV      r1,r5
        MOV      r0,r4
        BL       window_clear
        MOVS     r3,#0xef
        MOV      r2,#0x13f
        MOVS     r1,#0
        MOV      r0,r1
        BL       Window
        POP      {r4-r8,pc}
        ENDP

DrawCalibrationBar PROC
        PUSH     {r3-r9,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r7,r3
        LDR      r9,[sp,#0x20]
        MOV      r0,#0
        SUB      r12,r5,#1
        UXTH     r3,r12
        ADD      r12,r4,r6
        UXTH     r2,r12
        SUB      r12,r5,#1
        UXTH     r1,r12
        SUB      r12,r4,#1
        STR      r0,[sp,#0]
        UXTH     r0,r12
        BL       LCD_DrawLine
        MOVS     r0,#0
        ADD      r12,r5,r7
        UXTH     r3,r12
        ADD      r12,r4,r6
        UXTH     r2,r12
        ADD      r12,r5,r7
        UXTH     r1,r12
        SUB      r12,r4,#1
        STR      r0,[sp,#0]
        UXTH     r0,r12
        BL       LCD_DrawLine
        MOVS     r0,#0
        SUB      r12,r5,#1
        UXTH     r3,r12
        SUB      r12,r4,#1
        UXTH     r2,r12
        ADD      r12,r5,r7
        UXTH     r1,r12
        SUB      r12,r4,#1
        STR      r0,[sp,#0]
        UXTH     r0,r12
        BL       LCD_DrawLine
        MOVS     r0,#0
        ADD      r12,r5,r7
        UXTH     r3,r12
        ADD      r12,r4,r6
        UXTH     r2,r12
        SUB      r12,r5,#1
        UXTH     r1,r12
        ADD      r12,r4,r6
        STR      r0,[sp,#0]
        UXTH     r0,r12
        BL       LCD_DrawLine
        CMP      r9,#0
        BNE      |L1.2220|
        LDR      r0,|L1.2284|
        LDR      r1,|L1.2260|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        LDRH     r0,[r0,r1,LSL #1]
        MULS     r0,r7,r0
        MOV      r1,#0xff
        SDIV     r0,r0,r1
        UXTH     r8,r0
        MOV      r0,#0xffe0
        MOV      r3,r8
        MOV      r2,r6
        MOV      r1,r5
        STR      r0,[sp,#0]
        MOV      r0,r4
        BL       DrawRectangle
        MOVS     r0,#0
        STR      r0,[sp,#0]
        SUB      r0,r7,r8
        UXTH     r3,r0
        ADD      r0,r5,r8
        UXTH     r1,r0
        MOV      r2,r6
        MOV      r0,r4
        BL       DrawRectangle
|L1.2220|
        CMP      r9,#1
        BNE      |L1.2322|
        LDR      r0,|L1.2284|
        LDR      r1,|L1.2260|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        LDRH     r0,[r0,r1,LSL #1]
        MULS     r0,r6,r0
        MOV      r1,#0xff
        SDIV     r0,r0,r1
        UXTH     r8,r0
        MOV      r0,#0xffe0
        MOV      r3,r7
        MOV      r2,r8
        B        |L1.2288|
|L1.2260|
        DCD      num_bars_menu
|L1.2264|
        DCD      num_botton_menu
|L1.2268|
        DCD      menu_rect
|L1.2272|
        DCD      text_mode
|L1.2276|
        DCD      MAX_X
|L1.2280|
        DCD      MAX_Y
|L1.2284|
        DCD      Calibration_vars
|L1.2288|
        MOV      r1,r5
        STR      r0,[sp,#0]
        MOV      r0,r4
        BL       DrawRectangle
        MOVS     r0,#0
        SUB      r1,r6,r8
        UXTH     r2,r1
        ADD      r1,r4,r8
        STR      r0,[sp,#0]
        UXTH     r0,r1
        MOV      r3,r7
        MOV      r1,r5
        BL       DrawRectangle
|L1.2322|
        LDR      r0,|L1.3316|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        LDR      r1,|L1.3320|
        LDRB     r1,[r1,#0]  ; num_botton_menu
        ADD      r0,r0,r1
        LDR      r1,|L1.3324|
        STRH     r4,[r1,r0,LSL #3]
        LDR      r0,|L1.3316|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        LDR      r1,|L1.3320|
        LDRB     r1,[r1,#0]  ; num_botton_menu
        ADD      r0,r0,r1
        LDR      r1,|L1.3324|
        ADD      r0,r1,r0,LSL #3
        STRH     r5,[r0,#2]
        LDR      r0,|L1.3316|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        LDR      r1,|L1.3320|
        LDRB     r1,[r1,#0]  ; num_botton_menu
        ADD      r0,r0,r1
        LDR      r1,|L1.3324|
        ADD      r0,r1,r0,LSL #3
        STRH     r6,[r0,#4]
        LDR      r0,|L1.3316|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        LDR      r1,|L1.3320|
        LDRB     r1,[r1,#0]  ; num_botton_menu
        ADD      r0,r0,r1
        LDR      r1,|L1.3324|
        ADD      r0,r1,r0,LSL #3
        STRH     r7,[r0,#6]
        LDR      r1,|L1.3316|
        LDRB     r1,[r1,#0]  ; num_bars_menu
        LSL      r0,r9,r1
        LDR      r1,|L1.3328|
        LDR      r1,[r1,#0]  ; type_bar
        ORR      r0,r0,r1
        LDR      r1,|L1.3328|
        STR      r0,[r1,#0]  ; type_bar
        LDR      r0,|L1.3316|
        LDRB     r0,[r0,#0]  ; num_bars_menu
        ADD      r0,r0,#1
        LDR      r1,|L1.3316|
        STRB     r0,[r1,#0]
        MOV      r3,#0xef
        MOV      r2,#0x13f
        MOV      r1,#0
        MOV      r0,r1
        BL       Window
        POP      {r3-r9,pc}
        ENDP

UpdateBar PROC
        PUSH     {r0-r7,lr}
        SUB      sp,sp,#4
        MOV      r5,r0
        MOV      r6,r3
        CBNZ     r6,|L1.2534|
        LDRH     r0,[sp,#0xe]
        LDR      r1,|L1.3332|
        LDRH     r1,[r1,r5,LSL #1]
        MULS     r0,r1,r0
        MOV      r1,#0xff
        SDIV     r0,r0,r1
        UXTH     r4,r0
        MOV      r0,#0xffe0
        STR      r0,[sp,#0]
        LDRH     r2,[sp,#0xc]
        LDRH     r1,[sp,#0xa]
        LDRH     r0,[sp,#8]
        MOV      r3,r4
        BL       DrawRectangle
        MOVS     r0,#0
        STR      r0,[sp,#0]
        LDRH     r7,[sp,#0xe]
        SUBS     r7,r7,r4
        UXTH     r3,r7
        LDRH     r2,[sp,#0xc]
        LDRH     r7,[sp,#0xa]
        ADD      r7,r7,r4
        UXTH     r1,r7
        LDRH     r0,[sp,#8]
        BL       DrawRectangle
|L1.2534|
        CMP      r6,#1
        BNE      |L1.2616|
        LDRH     r0,[sp,#0xc]
        LDR      r1,|L1.3332|
        LDRH     r1,[r1,r5,LSL #1]
        MULS     r0,r1,r0
        MOV      r1,#0xff
        SDIV     r0,r0,r1
        UXTH     r4,r0
        MOV      r0,#0xffe0
        STR      r0,[sp,#0]
        LDRH     r3,[sp,#0xe]
        LDRH     r1,[sp,#0xa]
        LDRH     r0,[sp,#8]
        MOV      r2,r4
        BL       DrawRectangle
        MOVS     r0,#0
        STR      r0,[sp,#0]
        LDRH     r3,[sp,#0xe]
        LDRH     r7,[sp,#0xc]
        SUBS     r7,r7,r4
        UXTH     r2,r7
        LDRH     r1,[sp,#0xa]
        LDRH     r7,[sp,#8]
        ADD      r7,r7,r4
        UXTH     r0,r7
        BL       DrawRectangle
|L1.2616|
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
        ENDP

Get_CalibrationValue PROC
        PUSH     {r0-r4,lr}
        CBNZ     r3,|L1.2662|
        LDR      r2,|L1.3336|
        LDRH     r2,[r2,#2]  ; display
        LDRH     r4,[sp,#6]
        SUBS     r1,r2,r4
        BMI      |L1.2640|
        MOV      r2,r1
        B        |L1.2644|
|L1.2640|
        RSB      r2,r1,#0
|L1.2644|
        RSB      r2,r2,r2,LSL #8
        LDRH     r4,[sp,#0xa]
        SDIV     r2,r2,r4
        LDR      r4,|L1.3332|
        STRH     r2,[r4,r0,LSL #1]
|L1.2662|
        CMP      r3,#1
        BNE      |L1.2704|
        LDR      r2,|L1.3336|
        LDRH     r2,[r2,#0]  ; display
        LDRH     r4,[sp,#4]
        SUBS     r1,r2,r4
        BMI      |L1.2682|
        MOV      r2,r1
        B        |L1.2686|
|L1.2682|
        RSB      r2,r1,#0
|L1.2686|
        RSB      r2,r2,r2,LSL #8
        LDRH     r4,[sp,#8]
        SDIV     r2,r2,r4
        LDR      r4,|L1.3332|
        STRH     r2,[r4,r0,LSL #1]
|L1.2704|
        POP      {r0-r4,pc}
        ENDP

GetColor PROC
        PUSH     {r4-r11,lr}
        SUB      sp,sp,#0x14
        MOV      r9,#0
        MOV      r10,r9
        MOV      r11,r9
        LDR      r2,|L1.3336|
        LDRH     r1,[r2,#2]  ; display
        LDRH     r0,[r2,#0]  ; display
        BL       LCD_GetPoint
        STRH     r0,[sp,#0]
        LDR      r2,|L1.3336|
        LDRH     r2,[r2,#2]  ; display
        ADDS     r2,r2,#1
        UXTH     r1,r2
        LDR      r2,|L1.3336|
        LDRH     r0,[r2,#0]  ; display
        BL       LCD_GetPoint
        STRH     r0,[sp,#2]
        LDR      r2,|L1.3336|
        LDRH     r2,[r2,#2]  ; display
        SUBS     r2,r2,#1
        UXTH     r1,r2
        LDR      r2,|L1.3336|
        LDRH     r0,[r2,#0]  ; display
        BL       LCD_GetPoint
        STRH     r0,[sp,#4]
        LDR      r2,|L1.3336|
        LDRH     r2,[r2,#2]  ; display
        ADDS     r2,r2,#1
        UXTH     r1,r2
        LDR      r2,|L1.3336|
        LDRH     r2,[r2,#0]  ; display
        ADDS     r2,r2,#1
        UXTH     r0,r2
        BL       LCD_GetPoint
        STRH     r0,[sp,#6]
        LDR      r2,|L1.3336|
        LDRH     r1,[r2,#2]  ; display
        LDRH     r2,[r2,#0]  ; display
        ADDS     r2,r2,#1
        UXTH     r0,r2
        BL       LCD_GetPoint
        STRH     r0,[sp,#8]
        LDR      r2,|L1.3336|
        LDRH     r2,[r2,#2]  ; display
        SUBS     r2,r2,#1
        UXTH     r1,r2
        LDR      r2,|L1.3336|
        LDRH     r2,[r2,#0]  ; display
        ADDS     r2,r2,#1
        UXTH     r0,r2
        BL       LCD_GetPoint
        STRH     r0,[sp,#0xa]
        LDR      r2,|L1.3336|
        LDRH     r1,[r2,#2]  ; display
        LDRH     r2,[r2,#0]  ; display
        SUBS     r2,r2,#1
        UXTH     r0,r2
        BL       LCD_GetPoint
        STRH     r0,[sp,#0xc]
        LDR      r2,|L1.3336|
        LDRH     r2,[r2,#2]  ; display
        ADDS     r2,r2,#1
        UXTH     r1,r2
        LDR      r2,|L1.3336|
        LDRH     r2,[r2,#0]  ; display
        SUBS     r2,r2,#1
        UXTH     r0,r2
        BL       LCD_GetPoint
        STRH     r0,[sp,#0xe]
        LDR      r2,|L1.3336|
        LDRH     r2,[r2,#2]  ; display
        SUBS     r2,r2,#1
        UXTH     r1,r2
        LDR      r2,|L1.3336|
        LDRH     r2,[r2,#0]  ; display
        SUBS     r2,r2,#1
        UXTH     r0,r2
        BL       LCD_GetPoint
        STRH     r0,[sp,#0x10]
        MOV      r4,r9
        B        |L1.2928|
|L1.2910|
        LDRH     r0,[sp,r4,LSL #1]
        ADD      r0,r9,r0,ASR #11
        UXTH     r9,r0
        ADD      r0,r4,#1
        UXTH     r4,r0
|L1.2928|
        CMP      r4,#9
        BLT      |L1.2910|
        MOV      r0,#9
        SDIV     r0,r9,r0
        UXTH     r5,r0
        MOV      r4,#0
        B        |L1.2968|
|L1.2948|
        LDRH     r0,[sp,r4,LSL #1]
        UBFX     r0,r0,#5,#6
        ADD      r0,r0,r10
        UXTH     r10,r0
        ADD      r0,r4,#1
        UXTH     r4,r0
|L1.2968|
        CMP      r4,#9
        BLT      |L1.2948|
        MOV      r0,#9
        SDIV     r0,r10,r0
        UXTH     r6,r0
        MOV      r4,#0
        B        |L1.3008|
|L1.2988|
        LDRH     r0,[sp,r4,LSL #1]
        AND      r0,r0,#0x1f
        ADD      r0,r0,r11
        UXTH     r11,r0
        ADD      r0,r4,#1
        UXTH     r4,r0
|L1.3008|
        CMP      r4,#9
        BLT      |L1.2988|
        MOV      r0,#9
        SDIV     r0,r11,r0
        UXTH     r7,r0
        LSL      r0,r5,#11
        ADD      r0,r0,r6,LSL #5
        ADD      r0,r0,r7
        UXTH     r8,r0
        MOV      r0,#0
        LDR      r1,|L1.3340|
        STRH     r0,[r1,#0]
        MOV      r0,r8
        ADD      sp,sp,#0x14
        POP      {r4-r11,pc}
        ENDP

Read_Ads7846 PROC
        PUSH     {r4-r7,lr}
        SUB      sp,sp,#0x5c
        MOV      r7,#0
        MOV      r1,#0x48
        MOV      r0,sp
        BL       __aeabi_memclr4
        NOP      
|L1.3072|
        ADD      r1,sp,#0x54
        ADD      r0,sp,#0x58
        BL       TP_GetAdXY
        LDR      r0,[sp,#0x58]
        STR      r0,[sp,r7,LSL #2]
        ADD      r0,sp,#0x24
        LDR      r1,[sp,#0x54]
        STR      r1,[r0,r7,LSL #2]
        ADD      r0,r7,#1
        UXTB     r7,r0
        LDR      r0,|L1.3344|
        LDR      r0,[r0,#0x54]
        TST      r0,#0x2000
        BNE      |L1.3114|
        CMP      r7,#9
        BLT      |L1.3072|
|L1.3114|
        CMP      r7,#9
        BNE      |L1.3314|
        LDRD     r0,r1,[sp,#0]
        ADD      r0,r0,r1
        LDR      r1,[sp,#8]
        ADD      r0,r0,r1
        MOV      r1,#3
        SDIV     r0,r0,r1
        STR      r0,[sp,#0x48]
        LDRD     r0,r1,[sp,#0xc]
        ADD      r0,r0,r1
        LDR      r1,[sp,#0x14]
        ADD      r0,r0,r1
        MOV      r1,#3
        SDIV     r0,r0,r1
        STR      r0,[sp,#0x4c]
        LDRD     r0,r1,[sp,#0x18]
        ADD      r0,r0,r1
        LDR      r1,[sp,#0x20]
        ADD      r0,r0,r1
        MOV      r1,#3
        SDIV     r0,r0,r1
        STR      r0,[sp,#0x50]
        LDRD     r0,r1,[sp,#0x48]
        SUB      r4,r0,r1
        LDRD     r0,r1,[sp,#0x4c]
        SUB      r5,r0,r1
        LDR      r1,[sp,#0x48]
        LDR      r0,[sp,#0x50]
        SUB      r6,r0,r1
        CMP      r4,#0
        BLE      |L1.3210|
        MOV      r0,r4
        B        |L1.3214|
|L1.3210|
        RSB      r0,r4,#0
|L1.3214|
        MOV      r4,r0
        CMP      r5,#0
        BLE      |L1.3224|
        MOV      r0,r5
        B        |L1.3228|
|L1.3224|
        RSB      r0,r5,#0
|L1.3228|
        MOV      r5,r0
        CMP      r6,#0
        BLE      |L1.3238|
        MOV      r0,r6
        B        |L1.3242|
|L1.3238|
        RSB      r0,r6,#0
|L1.3242|
        MOV      r6,r0
        CMP      r4,#2
        BLE      |L1.3262|
        CMP      r5,#2
        BLE      |L1.3262|
        CMP      r6,#2
        BLE      |L1.3262|
        MOVS     r0,#0
|L1.3258|
        ADD      sp,sp,#0x5c
        POP      {r4-r7,pc}
|L1.3262|
        CMP      r4,r5
        BGE      |L1.3352|
        CMP      r6,r4
        BGE      |L1.3292|
        LDR      r2,[sp,#0x50]
        LDR      r1,[sp,#0x48]
        ADD      r0,r1,r2
        ADD      r1,r0,r0,LSR #31
        UBFX     r1,r1,#1,#16
        LDR      r2,|L1.3348|
        STRH     r1,[r2,#0]
        B        |L1.3398|
|L1.3292|
        LDRD     r1,r2,[sp,#0x48]
        ADD      r0,r1,r2
        ADD      r1,r0,r0,LSR #31
        UBFX     r1,r1,#1,#16
        LDR      r2,|L1.3348|
        STRH     r1,[r2,#0]
        B        |L1.3398|
|L1.3314|
        B        |L1.3642|
|L1.3316|
        DCD      num_bars_menu
|L1.3320|
        DCD      num_botton_menu
|L1.3324|
        DCD      menu_rect
|L1.3328|
        DCD      type_bar
|L1.3332|
        DCD      Calibration_vars
|L1.3336|
        DCD      display
|L1.3340|
        DCD      Capt_flag
|L1.3344|
        DCD      0x2009c000
|L1.3348|
        DCD      screen
|L1.3352|
        CMP      r6,r5
        BGE      |L1.3378|
        LDR      r2,[sp,#0x50]
        LDR      r1,[sp,#0x48]
        ADD      r0,r1,r2
        ADD      r1,r0,r0,LSR #31
        UBFX     r1,r1,#1,#16
        LDR      r2,|L1.4392|
        STRH     r1,[r2,#0]
        B        |L1.3398|
|L1.3378|
        LDRD     r1,r2,[sp,#0x4c]
        ADD      r0,r1,r2
        ADD      r1,r0,r0,LSR #31
        UBFX     r1,r1,#1,#16
        LDR      r2,|L1.4392|
        STRH     r1,[r2,#0]
|L1.3398|
        LDRD     r1,r0,[sp,#0x24]
        ADD      r1,r1,r0
        LDR      r0,[sp,#0x2c]
        ADD      r0,r0,r1
        MOV      r1,#3
        SDIV     r0,r0,r1
        STR      r0,[sp,#0x48]
        LDRD     r1,r0,[sp,#0x30]
        ADD      r1,r1,r0
        LDR      r0,[sp,#0x38]
        ADD      r0,r0,r1
        MOV      r1,#3
        SDIV     r0,r0,r1
        STR      r0,[sp,#0x4c]
        LDRD     r1,r0,[sp,#0x3c]
        ADD      r1,r1,r0
        LDR      r0,[sp,#0x44]
        ADD      r0,r0,r1
        MOV      r1,#3
        SDIV     r0,r0,r1
        STR      r0,[sp,#0x50]
        LDRD     r0,r1,[sp,#0x48]
        SUB      r4,r0,r1
        LDRD     r0,r1,[sp,#0x4c]
        SUB      r5,r0,r1
        LDR      r1,[sp,#0x48]
        LDR      r0,[sp,#0x50]
        SUB      r6,r0,r1
        CMP      r4,#0
        BLE      |L1.3490|
        MOV      r0,r4
        B        |L1.3494|
|L1.3490|
        RSB      r0,r4,#0
|L1.3494|
        MOV      r4,r0
        CMP      r5,#0
        BLE      |L1.3504|
        MOV      r0,r5
        B        |L1.3508|
|L1.3504|
        RSB      r0,r5,#0
|L1.3508|
        MOV      r5,r0
        CMP      r6,#0
        BLE      |L1.3518|
        MOV      r0,r6
        B        |L1.3522|
|L1.3518|
        RSB      r0,r6,#0
|L1.3522|
        MOV      r6,r0
        CMP      r4,#2
        BLE      |L1.3540|
        CMP      r5,#2
        BLE      |L1.3540|
        CMP      r6,#2
        BLE      |L1.3540|
        MOVS     r0,#0
        B        |L1.3258|
|L1.3540|
        CMP      r4,r5
        BGE      |L1.3592|
        CMP      r6,r4
        BGE      |L1.3570|
        LDR      r2,[sp,#0x50]
        LDR      r1,[sp,#0x48]
        ADD      r0,r1,r2
        ADD      r1,r0,r0,LSR #31
        UBFX     r1,r1,#1,#16
        LDR      r2,|L1.4392|
        STRH     r1,[r2,#2]
        B        |L1.3638|
|L1.3570|
        LDRD     r1,r2,[sp,#0x48]
        ADD      r0,r1,r2
        ADD      r1,r0,r0,LSR #31
        UBFX     r1,r1,#1,#16
        LDR      r2,|L1.4392|
        STRH     r1,[r2,#2]
        B        |L1.3638|
|L1.3592|
        CMP      r6,r5
        BGE      |L1.3618|
        LDR      r2,[sp,#0x50]
        LDR      r1,[sp,#0x48]
        ADD      r0,r1,r2
        ADD      r1,r0,r0,LSR #31
        UBFX     r1,r1,#1,#16
        LDR      r2,|L1.4392|
        STRH     r1,[r2,#2]
        B        |L1.3638|
|L1.3618|
        LDRD     r1,r2,[sp,#0x4c]
        ADD      r0,r1,r2
        ADD      r1,r0,r0,LSR #31
        UBFX     r1,r1,#1,#16
        LDR      r2,|L1.4392|
        STRH     r1,[r2,#2]
|L1.3638|
        LDR      r0,|L1.4392|
        B        |L1.3258|
|L1.3642|
        MOVS     r0,#0
        B        |L1.3258|
        ENDP

setCalibrationMatrix PROC
        PUSH     {r4-r10,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r8,r2
        MOV      r9,#0
        LDRH     r1,[r4,#0]
        LDRH     r2,[r4,#8]
        SUB      r1,r1,r2
        LDRH     r3,[r4,#6]
        LDRH     r2,[r4,#0xa]
        SUB      r2,r3,r2
        MUL      r1,r1,r2
        LDRH     r2,[r4,#4]
        LDRH     r3,[r4,#8]
        SUB      r3,r2,r3
        LDRH     r6,[r4,#2]
        LDRH     r2,[r4,#0xa]
        SUB      r2,r6,r2
        MLS      r0,r3,r2,r1
        BL       __aeabi_i2d
        STRD     r0,r1,[r8,#0x30]
        MOVS     r2,#0
        MOV      r3,r2
        LDRD     r6,r1,[r8,#0x30]
        MOV      r0,r6
        BL       __aeabi_cdcmpeq
        BNE      |L1.3730|
        MOV      r9,#1
        B        |L1.4006|
|L1.3730|
        LDRH     r1,[r5,#0]
        LDRH     r2,[r5,#8]
        SUBS     r1,r1,r2
        LDRH     r3,[r4,#6]
        LDRH     r2,[r4,#0xa]
        SUBS     r2,r3,r2
        MULS     r1,r2,r1
        LDRH     r2,[r5,#4]
        LDRH     r3,[r5,#8]
        SUBS     r3,r2,r3
        LDRH     r6,[r4,#2]
        LDRH     r2,[r4,#0xa]
        SUBS     r2,r6,r2
        MLS      r0,r3,r2,r1
        BL       __aeabi_i2d
        STRD     r0,r1,[r8,#0]
        LDRH     r1,[r4,#0]
        LDRH     r2,[r4,#8]
        SUBS     r1,r1,r2
        LDRH     r2,[r5,#4]
        LDRH     r3,[r5,#8]
        SUBS     r2,r2,r3
        MULS     r1,r2,r1
        LDRH     r2,[r5,#0]
        SUBS     r2,r2,r3
        LDRH     r3,[r4,#4]
        LDRH     r6,[r4,#8]
        SUBS     r3,r3,r6
        MLS      r0,r2,r3,r1
        BL       __aeabi_i2d
        STRD     r0,r1,[r8,#8]
        LDRH     r1,[r4,#8]
        LDRH     r2,[r5,#4]
        MULS     r1,r2,r1
        LDRH     r2,[r4,#4]
        LDRH     r3,[r5,#8]
        MLS      r1,r2,r3,r1
        LDRH     r2,[r4,#2]
        MULS     r1,r2,r1
        LDRH     r2,[r4,#0]
        MULS     r2,r3,r2
        LDRH     r3,[r4,#8]
        LDRH     r6,[r5,#0]
        MLS      r3,r3,r6,r2
        LDRH     r2,[r4,#6]
        MLA      r2,r3,r2,r1
        LDRH     r1,[r4,#4]
        MULS     r1,r6,r1
        LDRH     r3,[r4,#0]
        LDRH     r6,[r5,#4]
        MLS      r3,r3,r6,r1
        LDRH     r1,[r4,#0xa]
        MLA      r0,r3,r1,r2
        BL       __aeabi_i2d
        STRD     r0,r1,[r8,#0x10]
        LDRH     r2,[r5,#2]
        LDRH     r1,[r5,#0xa]
        SUBS     r1,r2,r1
        LDRH     r3,[r4,#6]
        LDRH     r2,[r4,#0xa]
        SUBS     r2,r3,r2
        MULS     r1,r2,r1
        LDRH     r3,[r5,#6]
        LDRH     r2,[r5,#0xa]
        SUBS     r3,r3,r2
        LDRH     r6,[r4,#2]
        LDRH     r2,[r4,#0xa]
        SUBS     r2,r6,r2
        MLS      r0,r3,r2,r1
        BL       __aeabi_i2d
        STRD     r0,r1,[r8,#0x18]
        LDRH     r1,[r4,#0]
        LDRH     r2,[r4,#8]
        SUBS     r1,r1,r2
        LDRH     r3,[r5,#6]
        LDRH     r2,[r5,#0xa]
        SUBS     r2,r3,r2
        MULS     r1,r2,r1
        LDRH     r3,[r5,#2]
        LDRH     r2,[r5,#0xa]
        SUBS     r2,r3,r2
        LDRH     r3,[r4,#4]
        LDRH     r6,[r4,#8]
        SUBS     r3,r3,r6
        MLS      r0,r2,r3,r1
        BL       __aeabi_i2d
        STRD     r0,r1,[r8,#0x20]
        LDRH     r1,[r4,#8]
        LDRH     r2,[r5,#6]
        MULS     r1,r2,r1
        LDRH     r3,[r4,#4]
        LDRH     r2,[r5,#0xa]
        MLS      r1,r3,r2,r1
        LDRH     r2,[r4,#2]
        MULS     r1,r2,r1
        LDRH     r2,[r4,#0]
        LDRH     r3,[r5,#0xa]
        MULS     r2,r3,r2
        LDRH     r3,[r4,#8]
        LDRH     r6,[r5,#2]
        MLS      r3,r3,r6,r2
        LDRH     r2,[r4,#6]
        MLA      r3,r3,r2,r1
        LDRH     r1,[r4,#4]
        MULS     r1,r6,r1
        LDRH     r6,[r4,#0]
        LDRH     r2,[r5,#6]
        MLS      r2,r6,r2,r1
        LDRH     r1,[r4,#0xa]
        MLA      r0,r2,r1,r3
        BL       __aeabi_i2d
        STRD     r0,r1,[r8,#0x28]
|L1.4006|
        MOV      r0,r9
        POP      {r4-r10,pc}
        ENDP

getDisplayPoint PROC
        PUSH     {r4-r11,lr}
        SUB      sp,sp,#0x2c
        MOV      r8,r0
        MOV      r5,r1
        MOV      r4,r2
        MOV      r11,#0
        MOV      r2,r11
        MOV      r3,r2
        LDRD     r6,r1,[r4,#0x30]
        MOV      r0,r6
        BL       __aeabi_cdcmpeq
        BEQ      |L1.4230|
        LDRH     r0,[r5,#2]
        BL       __aeabi_ui2d
        MOV      r9,r0
        LDRD     r6,r3,[r4,#8]
        MOV      r2,r6
        BL       __aeabi_dmul
        STRD     r0,r1,[sp,#8]
        LDRH     r0,[r5,#0]
        BL       __aeabi_ui2d
        MOV      r9,r0
        LDRD     r6,r3,[r4,#0]
        MOV      r2,r6
        BL       __aeabi_dmul
        STRD     r0,r1,[sp,#0]
        LDRD     r2,r3,[sp,#8]
        BL       __aeabi_dadd
        STRD     r0,r1,[sp,#0x10]
        LDRD     r6,r3,[r4,#0x10]
        MOV      r2,r6
        BL       __aeabi_dadd
        STRD     r0,r1,[sp,#0x18]
        LDRD     r6,r3,[r4,#0x30]
        MOV      r2,r6
        BL       __aeabi_ddiv
        STRD     r0,r1,[sp,#0x20]
        BL       __aeabi_d2uiz
        STRH     r0,[r8,#0]
        LDRH     r0,[r5,#2]
        BL       __aeabi_ui2d
        MOV      r9,r0
        LDRD     r6,r3,[r4,#0x20]
        MOV      r2,r6
        BL       __aeabi_dmul
        STRD     r0,r1,[sp,#8]
        LDRH     r0,[r5,#0]
        BL       __aeabi_ui2d
        MOV      r9,r0
        LDRD     r6,r3,[r4,#0x18]
        MOV      r2,r6
        BL       __aeabi_dmul
        STRD     r0,r1,[sp,#0]
        LDRD     r2,r3,[sp,#8]
        BL       __aeabi_dadd
        STRD     r0,r1,[sp,#0x10]
        LDRD     r6,r3,[r4,#0x28]
        MOV      r2,r6
        BL       __aeabi_dadd
        STRD     r0,r1,[sp,#0x18]
        LDRD     r6,r3,[r4,#0x30]
        MOV      r2,r6
        BL       __aeabi_ddiv
        STRD     r0,r1,[sp,#0x20]
        BL       __aeabi_d2uiz
        STRH     r0,[r8,#2]
        B        |L1.4234|
|L1.4230|
        MOV      r11,#1
|L1.4234|
        MOV      r0,r11
        ADD      sp,sp,#0x2c
        POP      {r4-r11,pc}
        ENDP

TouchPanel_Calibrate PROC
        PUSH     {r4,lr}
        MOV      r0,#0xd5c
        LDR      r1,|L1.4396|
        STRH     r0,[r1,#0]
        MOV      r0,#0x381
        STRH     r0,[r1,#2]
        MOV      r0,#0x2fc
        STRH     r0,[r1,#4]
        MOV      r1,#0x354
        LDR      r0,|L1.4396|
        STRH     r1,[r0,#6]
        MOV      r0,#0x69f
        LDR      r1,|L1.4396|
        STRH     r0,[r1,#8]
        MOV      r1,#0xc69
        LDR      r0,|L1.4396|
        STRH     r1,[r0,#0xa]
        LDR      r2,|L1.4400|
        MOV      r1,r0
        LDR      r0,|L1.4404|
        BL       setCalibrationMatrix
        POP      {r4,pc}
        ENDP

DetectRectangle PROC
        PUSH     {r0,r1,r4,lr}
        LDR      r0,|L1.4408|
        LDRH     r0,[r0,#0]  ; display
        LDRH     r1,[sp,#0]
        CMP      r0,r1
        BLT      |L1.4446|
        LDRH     r0,[sp,#0]
        LDRH     r1,[sp,#4]
        ADD      r0,r0,r1
        LDR      r1,|L1.4408|
        LDRH     r1,[r1,#0]  ; display
        CMP      r0,r1
        BLT      |L1.4446|
        LDR      r0,|L1.4408|
        LDRH     r0,[r0,#2]  ; display
        LDRH     r1,[sp,#2]
        CMP      r0,r1
        BLT      |L1.4446|
        LDRH     r0,[sp,#2]
        LDRH     r1,[sp,#6]
        ADD      r0,r0,r1
        LDR      r1,|L1.4408|
        LDRH     r1,[r1,#2]  ; display
        CMP      r0,r1
        BLT      |L1.4446|
        MOV      r0,#0x46e
        LDR      r1,|L1.4412|
        STRH     r0,[r1,#8]
        MOV      r2,#0x5b6
        LDR      r1,|L1.4416|
        MOV      r0,#0
        BL       DMA_DAC_audio_Channel_Init
        MOV      r0,#1
        LDR      r1,|L1.4420|
        B        |L1.4424|
|L1.4392|
        DCD      screen
|L1.4396|
        DCD      ScreenSample
|L1.4400|
        DCD      matrix
|L1.4404|
        DCD      DisplaySample
|L1.4408|
        DCD      display
|L1.4412|
        DCD      0x4008c000
|L1.4416|
        DCD      click_audio
|L1.4420|
        DCD      delay_only
|L1.4424|
        STRH     r0,[r1,#0]
        LDR      r0,|L1.4452|
        BL       delay_us
        NOP      
|L1.4434|
        LDR      r0,|L1.4456|
        LDRH     r0,[r0,#0]  ; delay_only
        CMP      r0,#1
        BEQ      |L1.4434|
        MOVS     r0,#1
|L1.4444|
        POP      {r2-r4,pc}
|L1.4446|
        MOVS     r0,#0
        B        |L1.4444|
        ENDP

        DCW      0x0000
|L1.4452|
        DCD      0x000186a0
|L1.4456|
        DCD      delay_only

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=3

matrix
        %        56
Calibration_vars
        %        18
ScreenSample
        %        12

        AREA ||.data||, DATA, ALIGN=2

DisplaySample
        DCW      0x002d,0x002d
        DCW      0x010e,0x002d
        DCW      0x00be,0x00be
screen
        DCD      0x00000000
display
        DCD      0x00000000
Capt_flag
        DCB      0x00,0x00
actual_window
        DCB      0x00,0x00
        DCD      0x00000000
        DCB      0x00,0x00
Detection_color
        DCB      0x00,0x00
Ptr
        DCD      0x00000000
Ptr2
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "Touch_Pannel\\TouchPanel.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___12_TouchPanel_c_ceb1cf77____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_TouchPanel_c_ceb1cf77____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___12_TouchPanel_c_ceb1cf77____REVSH|
#line 128
|__asm___12_TouchPanel_c_ceb1cf77____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT TP_Init [CODE]
        EXPORT Read_X [CODE]
        EXPORT Read_Y [CODE]
        EXPORT TP_GetAdXY [CODE]
        EXPORT TP_DrawPoint [CODE]
        EXPORT DrawCross [CODE]
        EXPORT DrawArrow [CODE]
        EXPORT TextButton [CODE]
        EXPORT Window [CODE]
        EXPORT DrawRectangle [CODE]
        EXPORT DrawCalibrationBar [CODE]
        EXPORT UpdateBar [CODE]
        EXPORT Get_CalibrationValue [CODE]
        EXPORT GetColor [CODE]
        EXPORT Read_Ads7846 [CODE]
        EXPORT setCalibrationMatrix [CODE]
        EXPORT getDisplayPoint [CODE]
        EXPORT TouchPanel_Calibrate [CODE]
        EXPORT DetectRectangle [CODE]
        EXPORT matrix [DATA,SIZE=56]
        EXPORT Calibration_vars [DATA,SIZE=18]
        EXPORT ScreenSample [DATA,SIZE=12]
        EXPORT DisplaySample [DATA,SIZE=12]
        EXPORT display [DATA,SIZE=4]
        EXPORT Capt_flag [DATA,SIZE=2]
        EXPORT actual_window [DATA,SIZE=8]
        EXPORT Detection_color [DATA,SIZE=2]
        EXPORT Ptr [DATA,SIZE=4]
        EXPORT Ptr2 [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT PINSEL_ConfigPin [CODE]
        IMPORT GPIO_SetDir [CODE]
        IMPORT GPIO_SetValue [CODE]
        IMPORT SSP_ConfigStructInit [CODE]
        IMPORT SSP_Init [CODE]
        IMPORT SSP_Cmd [CODE]
        IMPORT SSP_GetStatus [CODE]
        IMPORT SSP_SendData [CODE]
        IMPORT SSP_ReceiveData [CODE]
        IMPORT LCD_SetPoint [CODE]
        IMPORT LCD_DrawLine [CODE]
        IMPORT num_bars_menu [DATA]
        IMPORT num_botton_menu [DATA]
        IMPORT menu_rect [DATA]
        IMPORT strlen [CODE]
        IMPORT GUI_Text [CODE]
        IMPORT text_mode [DATA]
        IMPORT LCD_WriteReg [CODE]
        IMPORT MAX_X [DATA]
        IMPORT LCD_SetCursor [CODE]
        IMPORT window_clear [CODE]
        IMPORT MAX_Y [DATA]
        IMPORT type_bar [DATA]
        IMPORT LCD_GetPoint [CODE]
        IMPORT __aeabi_memclr4 [CODE]
        IMPORT __aeabi_i2d [CODE]
        IMPORT __aeabi_cdcmpeq [CODE]
        IMPORT __aeabi_ui2d [CODE]
        IMPORT __aeabi_dmul [CODE]
        IMPORT __aeabi_dadd [CODE]
        IMPORT __aeabi_ddiv [CODE]
        IMPORT __aeabi_d2uiz [CODE]
        IMPORT DMA_DAC_audio_Channel_Init [CODE]
        IMPORT delay_us [CODE]
        IMPORT click_audio [DATA]
        IMPORT delay_only [DATA]

        KEEP DelayUS
        KEEP WR_CMD
        KEEP RD_AD
        KEEP screen

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
