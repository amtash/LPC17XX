; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--debug -c --asm -olpc17xx_gpio.o --depend=lpc17xx_gpio.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=lpc17xx_gpio.crf lpc17xx_gpio.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

GPIO_GetPointer PROC
        MOV      r1,r0
        MOV      r0,#0
        CMP      r1,#5
        BCS      |L1.40|
        TBB      [pc,r1]
        DCB      0x03,0x05
        DCB      0x07,0x09,0x0b,0x00
        LDR      r0,|L1.1028|
        B        |L1.42|
        LDR      r0,|L1.1032|
        B        |L1.42|
        LDR      r0,|L1.1036|
        B        |L1.42|
        LDR      r0,|L1.1040|
        B        |L1.42|
        LDR      r0,|L1.1044|
        B        |L1.42|
|L1.40|
        NOP      
|L1.42|
        NOP      
        BX       lr
        ENDP

FIO_HalfWordGetPointer PROC
        MOV      r1,r0
        MOV      r0,#0
        CMP      r1,#5
        BCS      |L1.86|
        TBB      [pc,r1]
        DCB      0x03,0x05,0x07,0x09
        DCB      0x0b,0x00
        LDR      r0,|L1.1028|
        B        |L1.88|
        LDR      r0,|L1.1032|
        B        |L1.88|
        LDR      r0,|L1.1036|
        B        |L1.88|
        LDR      r0,|L1.1040|
        B        |L1.88|
        LDR      r0,|L1.1044|
        B        |L1.88|
|L1.86|
        NOP      
|L1.88|
        NOP      
        BX       lr
        ENDP

FIO_ByteGetPointer PROC
        MOV      r1,r0
        MOV      r0,#0
        CMP      r1,#5
        BCS      |L1.132|
        TBB      [pc,r1]
        DCB      0x03,0x05
        DCB      0x07,0x09,0x0b,0x00
        LDR      r0,|L1.1028|
        B        |L1.134|
        LDR      r0,|L1.1032|
        B        |L1.134|
        LDR      r0,|L1.1036|
        B        |L1.134|
        LDR      r0,|L1.1040|
        B        |L1.134|
        LDR      r0,|L1.1044|
        B        |L1.134|
|L1.132|
        NOP      
|L1.134|
        NOP      
        BX       lr
        ENDP

GPIO_SetDir PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r0,r7
        BL       GPIO_GetPointer
        MOV      r4,r0
        CBZ      r4,|L1.178|
        CBZ      r6,|L1.170|
        LDR      r0,[r4,#0]
        ORR      r0,r0,r5
        STR      r0,[r4,#0]
        B        |L1.178|
|L1.170|
        LDR      r0,[r4,#0]
        BIC      r0,r0,r5
        STR      r0,[r4,#0]
|L1.178|
        POP      {r4-r8,pc}
        ENDP

GPIO_SetValue PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r0,r6
        BL       GPIO_GetPointer
        MOV      r5,r0
        CBZ      r5,|L1.200|
        STR      r4,[r5,#0x18]
|L1.200|
        POP      {r4-r6,pc}
        ENDP

GPIO_ClearValue PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r0,r6
        BL       GPIO_GetPointer
        MOV      r5,r0
        CBZ      r5,|L1.220|
        STR      r4,[r5,#0x1c]
|L1.220|
        POP      {r4-r6,pc}
        ENDP

GPIO_ReadValue PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r0,r5
        BL       GPIO_GetPointer
        MOV      r4,r0
        CBZ      r4,|L1.240|
        LDR      r0,[r4,#0x14]
|L1.238|
        POP      {r4-r6,pc}
|L1.240|
        MOVS     r0,#0
        B        |L1.238|
        ENDP

GPIO_IntCmd PROC
        CBNZ     r0,|L1.254|
        CBNZ     r2,|L1.254|
        LDR      r3,|L1.1048|
        STR      r1,[r3,#0]
        B        |L1.296|
|L1.254|
        CMP      r0,#2
        BNE      |L1.266|
        CBNZ     r2,|L1.266|
        LDR      r3,|L1.1052|
        STR      r1,[r3,#0]
        B        |L1.296|
|L1.266|
        CBNZ     r0,|L1.278|
        CMP      r2,#1
        BNE      |L1.278|
        LDR      r3,|L1.1056|
        STR      r1,[r3,#0]
        B        |L1.296|
|L1.278|
        CMP      r0,#2
        BNE      |L1.292|
        CMP      r2,#1
        BNE      |L1.292|
        LDR      r3,|L1.1060|
        STR      r1,[r3,#0]
        B        |L1.296|
|L1.292|
        NOP      
|L1.294|
        B        |L1.294|
|L1.296|
        BX       lr
        ENDP

GPIO_GetIntStatus PROC
        MOV      r3,r0
        CBNZ     r3,|L1.318|
        CBNZ     r2,|L1.318|
        LDR      r0,|L1.1064|
        LDR      r0,[r0,#0]
        LSR      r0,r0,r1
        AND      r0,r0,#1
|L1.316|
        BX       lr
|L1.318|
        CMP      r3,#2
        BNE      |L1.338|
        CBNZ     r2,|L1.338|
        LDR      r0,|L1.1068|
        LDR      r0,[r0,#0]
        LSR      r0,r0,r1
        AND      r0,r0,#1
        B        |L1.316|
|L1.338|
        CBNZ     r3,|L1.358|
        CMP      r2,#1
        BNE      |L1.358|
        LDR      r0,|L1.1072|
        LDR      r0,[r0,#0]
        LSR      r0,r0,r1
        AND      r0,r0,#1
        B        |L1.316|
|L1.358|
        CMP      r3,#2
        BNE      |L1.380|
        CMP      r2,#1
        BNE      |L1.380|
        LDR      r0,|L1.1076|
        LDR      r0,[r0,#0]
        LSR      r0,r0,r1
        AND      r0,r0,#1
        B        |L1.316|
|L1.380|
        NOP      
|L1.382|
        B        |L1.382|
        ENDP

GPIO_ClearInt PROC
        CBNZ     r0,|L1.392|
        LDR      r2,|L1.1080|
        STR      r1,[r2,#0]
        B        |L1.406|
|L1.392|
        CMP      r0,#2
        BNE      |L1.402|
        LDR      r2,|L1.1084|
        STR      r1,[r2,#0]
        B        |L1.406|
|L1.402|
        NOP      
|L1.404|
        B        |L1.404|
|L1.406|
        BX       lr
        ENDP

FIO_SetDir PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r2,r6
        MOV      r1,r5
        MOV      r0,r4
        BL       GPIO_SetDir
        POP      {r4-r6,pc}
        ENDP

FIO_SetValue PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r1,r5
        MOV      r0,r4
        BL       GPIO_SetValue
        POP      {r4-r6,pc}
        ENDP

FIO_ClearValue PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r1,r5
        MOV      r0,r4
        BL       GPIO_ClearValue
        POP      {r4-r6,pc}
        ENDP

FIO_ReadValue PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        MOV      r0,r4
        BL       GPIO_ReadValue
        POP      {r4,pc}
        ENDP

FIO_IntCmd PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r2,r6
        MOV      r1,r5
        MOV      r0,r4
        BL       GPIO_IntCmd
        POP      {r4-r6,pc}
        ENDP

FIO_GetIntStatus PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r2,r6
        MOV      r1,r5
        MOV      r0,r4
        BL       GPIO_GetIntStatus
        POP      {r4-r6,pc}
        ENDP

FIO_ClearInt PROC
        PUSH     {r4,lr}
        MOV      r3,r0
        MOV      r4,r1
        MOV      r1,r4
        MOV      r0,r3
        BL       GPIO_ClearInt
        POP      {r4,pc}
        ENDP

FIO_SetMask PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r5,r1
        MOV      r6,r2
        MOV      r0,r7
        BL       GPIO_GetPointer
        MOV      r4,r0
        CBZ      r4,|L1.568|
        CBZ      r6,|L1.560|
        LDR      r0,[r4,#0x10]
        ORR      r0,r0,r5
        STR      r0,[r4,#0x10]
        B        |L1.568|
|L1.560|
        LDR      r0,[r4,#0x10]
        BIC      r0,r0,r5
        STR      r0,[r4,#0x10]
|L1.568|
        POP      {r4-r8,pc}
        ENDP

FIO_HalfWordSetDir PROC
        PUSH     {r4-r8,lr}
        MOV      r8,r0
        MOV      r6,r1
        MOV      r5,r2
        MOV      r7,r3
        MOV      r0,r8
        BL       FIO_HalfWordGetPointer
        MOV      r4,r0
        CBZ      r4,|L1.638|
        CBZ      r7,|L1.618|
        CBZ      r6,|L1.608|
        LDRH     r0,[r4,#2]
        ORR      r0,r0,r5
        STRH     r0,[r4,#2]
        B        |L1.638|
|L1.608|
        LDRH     r0,[r4,#0]
        ORR      r0,r0,r5
        STRH     r0,[r4,#0]
        B        |L1.638|
|L1.618|
        CBZ      r6,|L1.630|
        LDRH     r0,[r4,#2]
        BIC      r0,r0,r5
        STRH     r0,[r4,#2]
        B        |L1.638|
|L1.630|
        LDRH     r0,[r4,#0]
        BIC      r0,r0,r5
        STRH     r0,[r4,#0]
|L1.638|
        POP      {r4-r8,pc}
        ENDP

FIO_HalfWordSetMask PROC
        PUSH     {r4-r8,lr}
        MOV      r8,r0
        MOV      r6,r1
        MOV      r5,r2
        MOV      r7,r3
        MOV      r0,r8
        BL       FIO_HalfWordGetPointer
        MOV      r4,r0
        CBZ      r4,|L1.708|
        CBZ      r7,|L1.688|
        CBZ      r6,|L1.678|
        LDRH     r0,[r4,#0x12]
        ORR      r0,r0,r5
        STRH     r0,[r4,#0x12]
        B        |L1.708|
|L1.678|
        LDRH     r0,[r4,#0x10]
        ORR      r0,r0,r5
        STRH     r0,[r4,#0x10]
        B        |L1.708|
|L1.688|
        CBZ      r6,|L1.700|
        LDRH     r0,[r4,#0x12]
        BIC      r0,r0,r5
        STRH     r0,[r4,#0x12]
        B        |L1.708|
|L1.700|
        LDRH     r0,[r4,#0x10]
        BIC      r0,r0,r5
        STRH     r0,[r4,#0x10]
|L1.708|
        POP      {r4-r8,pc}
        ENDP

FIO_HalfWordSetValue PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r6,r1
        MOV      r4,r2
        MOV      r0,r7
        BL       FIO_HalfWordGetPointer
        MOV      r5,r0
        CBZ      r5,|L1.740|
        CBZ      r6,|L1.738|
        STRH     r4,[r5,#0x1a]
        B        |L1.740|
|L1.738|
        STRH     r4,[r5,#0x18]
|L1.740|
        POP      {r4-r8,pc}
        ENDP

FIO_HalfWordClearValue PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r6,r1
        MOV      r4,r2
        MOV      r0,r7
        BL       FIO_HalfWordGetPointer
        MOV      r5,r0
        CBZ      r5,|L1.772|
        CBZ      r6,|L1.770|
        STRH     r4,[r5,#0x1e]
        B        |L1.772|
|L1.770|
        STRH     r4,[r5,#0x1c]
|L1.772|
        POP      {r4-r8,pc}
        ENDP

FIO_HalfWordReadValue PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r5,r1
        MOV      r0,r6
        BL       FIO_HalfWordGetPointer
        MOV      r4,r0
        CBZ      r4,|L1.802|
        CBZ      r5,|L1.798|
        LDRH     r0,[r4,#0x16]
|L1.796|
        POP      {r4-r6,pc}
|L1.798|
        LDRH     r0,[r4,#0x14]
        B        |L1.796|
|L1.802|
        MOVS     r0,#0
        B        |L1.796|
        ENDP

FIO_ByteSetDir PROC
        PUSH     {r4-r8,lr}
        MOV      r8,r0
        MOV      r4,r1
        MOV      r6,r2
        MOV      r7,r3
        MOV      r0,r8
        BL       FIO_ByteGetPointer
        MOV      r5,r0
        CBZ      r5,|L1.856|
        CBZ      r7,|L1.844|
        CMP      r4,#3
        BGT      |L1.856|
        LDRB     r0,[r5,r4]
        ORR      r0,r0,r6
        STRB     r0,[r5,r4]
        B        |L1.856|
|L1.844|
        CMP      r4,#3
        BGT      |L1.856|
        LDRB     r0,[r5,r4]
        BIC      r0,r0,r6
        STRB     r0,[r5,r4]
|L1.856|
        POP      {r4-r8,pc}
        ENDP

FIO_ByteSetMask PROC
        PUSH     {r4-r8,lr}
        MOV      r8,r0
        MOV      r4,r1
        MOV      r6,r2
        MOV      r7,r3
        MOV      r0,r8
        BL       FIO_ByteGetPointer
        MOV      r5,r0
        CBZ      r5,|L1.926|
        CBZ      r7,|L1.906|
        CMP      r4,#3
        BGT      |L1.926|
        ADD      r0,r5,#0x10
        LDRB     r0,[r0,r4]
        ORR      r0,r0,r6
        ADD      r1,r5,#0x10
        STRB     r0,[r1,r4]
        B        |L1.926|
|L1.906|
        CMP      r4,#3
        BGT      |L1.926|
        ADD      r0,r5,#0x10
        LDRB     r0,[r0,r4]
        BIC      r0,r0,r6
        ADD      r1,r5,#0x10
        STRB     r0,[r1,r4]
|L1.926|
        POP      {r4-r8,pc}
        ENDP

FIO_ByteSetValue PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r5,r2
        MOV      r0,r7
        BL       FIO_ByteGetPointer
        MOV      r6,r0
        CBZ      r6,|L1.960|
        CMP      r4,#3
        BGT      |L1.960|
        ADD      r0,r6,#0x18
        STRB     r5,[r0,r4]
|L1.960|
        POP      {r4-r8,pc}
        ENDP

FIO_ByteClearValue PROC
        PUSH     {r4-r8,lr}
        MOV      r7,r0
        MOV      r4,r1
        MOV      r5,r2
        MOV      r0,r7
        BL       FIO_ByteGetPointer
        MOV      r6,r0
        CBZ      r6,|L1.994|
        CMP      r4,#3
        BGT      |L1.994|
        ADD      r0,r6,#0x1c
        STRB     r5,[r0,r4]
|L1.994|
        POP      {r4-r8,pc}
        ENDP

FIO_ByteReadValue PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r0
        MOV      r4,r1
        MOV      r0,r6
        BL       FIO_ByteGetPointer
        MOV      r5,r0
        CBZ      r5,|L1.1026|
        CMP      r4,#3
        BGT      |L1.1088|
        ADD      r0,r5,#0x14
        LDRB     r0,[r0,r4]
        POP      {r4-r6,pc}
|L1.1026|
        B        |L1.1088|
|L1.1028|
        DCD      0x2009c000
|L1.1032|
        DCD      0x2009c020
|L1.1036|
        DCD      0x2009c040
|L1.1040|
        DCD      0x2009c060
|L1.1044|
        DCD      0x2009c080
|L1.1048|
        DCD      0x40028090
|L1.1052|
        DCD      0x400280b0
|L1.1056|
        DCD      0x40028094
|L1.1060|
        DCD      0x400280b4
|L1.1064|
        DCD      0x40028084
|L1.1068|
        DCD      0x400280a4
|L1.1072|
        DCD      0x40028088
|L1.1076|
        DCD      0x400280a8
|L1.1080|
        DCD      0x4002808c
|L1.1084|
        DCD      0x400280ac
|L1.1088|
        MOVS     r0,#0
        POP      {r4-r6,pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "lpc17xx_gpio.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___14_lpc17xx_gpio_c_38c397c6____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_lpc17xx_gpio_c_38c397c6____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___14_lpc17xx_gpio_c_38c397c6____REVSH|
#line 128
|__asm___14_lpc17xx_gpio_c_38c397c6____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT GPIO_SetDir [CODE]
        EXPORT GPIO_SetValue [CODE]
        EXPORT GPIO_ClearValue [CODE]
        EXPORT GPIO_ReadValue [CODE]
        EXPORT GPIO_IntCmd [CODE]
        EXPORT GPIO_GetIntStatus [CODE]
        EXPORT GPIO_ClearInt [CODE]
        EXPORT FIO_SetDir [CODE]
        EXPORT FIO_SetValue [CODE]
        EXPORT FIO_ClearValue [CODE]
        EXPORT FIO_ReadValue [CODE]
        EXPORT FIO_IntCmd [CODE]
        EXPORT FIO_GetIntStatus [CODE]
        EXPORT FIO_ClearInt [CODE]
        EXPORT FIO_SetMask [CODE]
        EXPORT FIO_HalfWordSetDir [CODE]
        EXPORT FIO_HalfWordSetMask [CODE]
        EXPORT FIO_HalfWordSetValue [CODE]
        EXPORT FIO_HalfWordClearValue [CODE]
        EXPORT FIO_HalfWordReadValue [CODE]
        EXPORT FIO_ByteSetDir [CODE]
        EXPORT FIO_ByteSetMask [CODE]
        EXPORT FIO_ByteSetValue [CODE]
        EXPORT FIO_ByteClearValue [CODE]
        EXPORT FIO_ByteReadValue [CODE]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        KEEP GPIO_GetPointer
        KEEP FIO_HalfWordGetPointer
        KEEP FIO_ByteGetPointer

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
