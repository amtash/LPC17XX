; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--debug -c --asm -odma.o --depend=dma.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=dma.crf DMA\dma.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

DMA_IRQHandler PROC
        LDR      r1,|L1.596|
        LDR      r0,[r1,#0]
        CBZ      r0,|L1.52|
        LDR      r1,|L1.600|
        LDR      r1,[r1,#0]  ; DMATCCount
        ADD      r1,r1,#1
        LDR      r2,|L1.600|
        STR      r1,[r2,#0]  ; DMATCCount
        LDR      r1,|L1.596|
        STR      r0,[r1,#8]
        TST      r0,#1
        BEQ      |L1.38|
        MOV      r1,#1
        LDR      r2,|L1.604|
        STR      r1,[r2,#0]  ; DACDMA0Done
        B        |L1.52|
|L1.38|
        TST      r0,#2
        BEQ      |L1.52|
        MOV      r1,#1
        LDR      r2,|L1.608|
        STR      r1,[r2,#0]  ; DACDMA1Done
|L1.52|
        LDR      r1,|L1.596|
        LDR      r0,[r1,#0xc]
        CBZ      r0,|L1.74|
        LDR      r1,|L1.612|
        LDR      r1,[r1,#0]  ; DMAErrCount
        ADD      r1,r1,#1
        LDR      r2,|L1.612|
        STR      r1,[r2,#0]  ; DMAErrCount
        LDR      r1,|L1.596|
        STR      r0,[r1,#0x10]
|L1.74|
        BX       lr
        ENDP

DMA_Init PROC
        LDR      r0,|L1.616|
        LDR      r0,[r0,#0]
        ORR      r0,r0,#0x20000000
        LDR      r1,|L1.620|
        STR      r0,[r1,#0xc4]
        MOV      r0,#0xffff
        LDR      r1,|L1.596|
        STR      r0,[r1,#0x34]
        MOV      r0,#0
        LDR      r1,|L1.624|
        STR      r0,[r1,#0]
        MOV      r0,#3
        LDR      r1,|L1.596|
        STR      r0,[r1,#8]
        STR      r0,[r1,#0x10]
        MOV      r0,#1
        STR      r0,[r1,#0x30]
        MOV      r0,#0x1a
        MOV      r1,#1
        LSL      r1,r1,r0
        LSR      r2,r0,#5
        MOV      r3,#0xe000e000
        ADD      r2,r3,r2,LSL #2
        STR      r1,[r2,#0x100]
        NOP      
        BX       lr
        ENDP

Create_DAC_LLIO PROC
        LDR      r0,|L1.628|
        LDR      r0,[r0,#0]  ; Src_DAC_DMA
        LDR      r1,|L1.632|
        STR      r0,[r1,#0]  ; onda
        LDR      r0,|L1.636|
        LDR      r0,[r0,#0]  ; Dst_DAC_DMA
        STR      r0,[r1,#4]  ; onda
        MOV      r0,r1
        STR      r0,[r1,#8]  ; onda
        LDR      r0,|L1.640|
        LDR      r0,[r0,#0]  ; samples_per_cicle
        ORR      r0,r0,#0x4480000
        ORR      r0,r0,#0x80000000
        STR      r0,[r1,#0xc]  ; onda
        BX       lr
        ENDP

DMA_DAC_Channel_Init PROC
        PUSH     {lr}
        MOV      r2,r0
        CMP      r2,#0
        BNE      |L1.310|
        LDR      r1,|L1.604|
        STR      r0,[r1,#0]  ; DACDMA0Done
        LDR      r0,|L1.644|
        LDR      r1,|L1.628|
        STR      r0,[r1,#0]  ; Src_DAC_DMA
        LDR      r0,|L1.648|
        LDR      r1,|L1.636|
        STR      r0,[r1,#0]  ; Dst_DAC_DMA
        BL       Create_DAC_LLIO
        MOV      r0,#1
        LDR      r1,|L1.596|
        STR      r0,[r1,#8]
        STR      r0,[r1,#0x10]
        MOV      r0,#0
        LDR      r1,|L1.652|
        STR      r0,[r1,#0]
        LDR      r1,|L1.596|
        STR      r0,[r1,#0x110]
        LDR      r0,|L1.632|
        STR      r0,[r1,#0x108]
        LDR      r0,|L1.628|
        LDR      r0,[r0,#0]  ; Src_DAC_DMA
        STR      r0,[r1,#0x100]
        LDR      r0,|L1.636|
        LDR      r0,[r0,#0]  ; Dst_DAC_DMA
        STR      r0,[r1,#0x104]
        LDR      r0,|L1.652|
        LDR      r1,[r0,#0]
        LDR      r0,|L1.640|
        LDR      r0,[r0,#0]  ; samples_per_cicle
        ORR      r0,r0,#0x4480000
        ORR      r0,r0,#0x80000000
        ORR      r1,r1,r0
        LDR      r0,|L1.596|
        STR      r1,[r0,#0x10c]
        LDR      r0,|L1.656|
        LDR      r0,[r0,#0]
        MOV      r1,#0xc9c1
        ORR      r0,r0,r1
        LDR      r1,|L1.656|
        STR      r0,[r1,#0]
        MOV      r0,#1
|L1.308|
        POP      {pc}
|L1.310|
        MOVS     r0,#0
        B        |L1.308|
        ENDP

Create_DAC_audio_LLIO PROC
        PUSH     {r4-r6,lr}
        MOV      r2,r0
        MOV      r3,r1
        MOV      r0,#0
        MOV      r5,#0xfff
        UDIV     r4,r3,r5
        UDIV     r6,r3,r5
        MLS      r1,r5,r6,r3
        CMP      r4,#0
        BLE      |L1.410|
        NOP      
        B        |L1.406|
|L1.348|
        RSB      r5,r0,r0,LSL #12
        ADD      r5,r5,r2
        LDR      r6,|L1.660|
        ADD      r6,r6,r0,LSL #4
        STR      r5,[r6,#0]
        LDR      r5,|L1.636|
        LDR      r5,[r5,#0]  ; Dst_DAC_DMA
        LDR      r6,|L1.660|
        ADD      r6,r6,r0,LSL #4
        STR      r5,[r6,#4]
        LDR      r6,|L1.660|
        ADD      r5,r0,#1
        ADD      r5,r6,r5,LSL #4
        ADD      r6,r6,r0,LSL #4
        STR      r5,[r6,#8]
        LDR      r5,|L1.664|
        LDR      r6,|L1.660|
        ADD      r6,r6,r0,LSL #4
        STR      r5,[r6,#0xc]
        ADD      r5,r0,#1
        UXTB     r0,r5
|L1.406|
        CMP      r0,r4
        BLT      |L1.348|
|L1.410|
        RSB      r5,r0,r0,LSL #12
        ADD      r5,r5,r2
        LDR      r6,|L1.660|
        ADD      r6,r6,r0,LSL #4
        STR      r5,[r6,#0]
        LDR      r5,|L1.636|
        LDR      r5,[r5,#0]  ; Dst_DAC_DMA
        LDR      r6,|L1.660|
        ADD      r6,r6,r0,LSL #4
        STR      r5,[r6,#4]
        MOV      r5,#0
        LDR      r6,|L1.660|
        ADD      r6,r6,r0,LSL #4
        STR      r5,[r6,#8]
        ORR      r5,r1,#0x84000000
        LDR      r6,|L1.660|
        ADD      r6,r6,r0,LSL #4
        STR      r5,[r6,#0xc]
        POP      {r4-r6,pc}
        ENDP

DMA_DAC_audio_Channel_Init PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        MOV      r4,r1
        MOV      r6,r2
        CMP      r5,#0
        BNE      |L1.590|
        LDR      r1,|L1.604|
        STR      r0,[r1,#0]  ; DACDMA0Done
        LDR      r0,|L1.628|
        STR      r4,[r0,#0]  ; Src_DAC_DMA
        LDR      r0,|L1.648|
        LDR      r1,|L1.636|
        STR      r0,[r1,#0]  ; Dst_DAC_DMA
        MOV      r0,r1
        LDR      r0,[r0,#0]  ; Dst_DAC_DMA
        ADD      r0,r0,#1
        STR      r0,[r1,#0]  ; Dst_DAC_DMA
        MOV      r1,r6
        MOV      r0,r4
        BL       Create_DAC_audio_LLIO
        MOV      r0,#1
        LDR      r1,|L1.596|
        STR      r0,[r1,#8]
        STR      r0,[r1,#0x10]
        MOV      r0,#0
        LDR      r1,|L1.652|
        STR      r0,[r1,#0]
        LDR      r1,|L1.596|
        STR      r0,[r1,#0x110]
        LDR      r0,|L1.660|
        STR      r0,[r1,#0x108]
        LDR      r0,|L1.628|
        LDR      r0,[r0,#0]  ; Src_DAC_DMA
        STR      r0,[r1,#0x100]
        LDR      r0,|L1.636|
        LDR      r0,[r0,#0]  ; Dst_DAC_DMA
        STR      r0,[r1,#0x104]
        LDR      r0,|L1.652|
        LDR      r0,[r0,#0]
        LDR      r1,|L1.668|
        ORR      r0,r0,r1
        LDR      r1,|L1.596|
        STR      r0,[r1,#0x10c]
        LDR      r0,|L1.656|
        LDR      r0,[r0,#0]
        MOV      r1,#0xc9c1
        ORR      r0,r0,r1
        LDR      r1,|L1.656|
        STR      r0,[r1,#0]
        MOV      r0,#1
|L1.588|
        POP      {r4-r6,pc}
|L1.590|
        MOVS     r0,#0
        B        |L1.588|
        ENDP

        DCW      0x0000
|L1.596|
        DCD      0x50004000
|L1.600|
        DCD      DMATCCount
|L1.604|
        DCD      DACDMA0Done
|L1.608|
        DCD      DACDMA1Done
|L1.612|
        DCD      DMAErrCount
|L1.616|
        DCD      0x400fc0c4
|L1.620|
        DCD      0x400fc000
|L1.624|
        DCD      0x400fc1c4
|L1.628|
        DCD      Src_DAC_DMA
|L1.632|
        DCD      onda
|L1.636|
        DCD      Dst_DAC_DMA
|L1.640|
        DCD      samples_per_cicle
|L1.644|
        DCD      buffer_DAC
|L1.648|
        DCD      0x4008c000
|L1.652|
        DCD      0x5000410c
|L1.656|
        DCD      0x50004110
|L1.660|
        DCD      audio_clip
|L1.664|
        DCD      0x84000fff
|L1.668|
        DCD      0x84000001

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.bss||, DATA, NOINIT, ALIGN=2

onda
        %        16
audio_clip
        %        160

        AREA ||.data||, DATA, ALIGN=2

DMATCCount
        DCD      0x00000000
DMAErrCount
        DCD      0x00000000
DACDMA0Done
        DCD      0x00000000
DACDMA1Done
        DCD      0x00000000
Src_DAC_DMA
        DCD      0x00000000
Dst_DAC_DMA
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "DMA\\dma.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_dma_c_625dc092____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_dma_c_625dc092____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___5_dma_c_625dc092____REVSH|
#line 128
|__asm___5_dma_c_625dc092____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT DMA_IRQHandler [CODE]
        EXPORT DMA_Init [CODE]
        EXPORT Create_DAC_LLIO [CODE]
        EXPORT DMA_DAC_Channel_Init [CODE]
        EXPORT Create_DAC_audio_LLIO [CODE]
        EXPORT DMA_DAC_audio_Channel_Init [CODE]
        EXPORT onda [DATA,SIZE=16]
        EXPORT audio_clip [DATA,SIZE=160]
        EXPORT DMATCCount [DATA,SIZE=4]
        EXPORT DMAErrCount [DATA,SIZE=4]
        EXPORT DACDMA0Done [DATA,SIZE=4]
        EXPORT DACDMA1Done [DATA,SIZE=4]
        EXPORT Src_DAC_DMA [DATA,SIZE=4]
        EXPORT Dst_DAC_DMA [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT samples_per_cicle [DATA]
        IMPORT buffer_DAC [DATA]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
