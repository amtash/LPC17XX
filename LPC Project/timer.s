; generated by ARM C/C++ Compiler, 4.1 [Build 791]
; commandline ArmCC [--debug -c --asm -otimer.o --depend=timer.d --cpu=Cortex-M3 --apcs=interwork -O0 -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\INC\NXP\LPC17xx --omf_browse=timer.crf TIMER\Timer.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

Init_TIMER1X PROC
        PUSH     {r4,r5,lr}
        LDR      r1,|L1.332|
        LDR      r1,[r1,#0]
        ORR      r1,r1,#4
        LDR      r2,|L1.336|
        STR      r1,[r2,#0xc4]
        LDR      r1,|L1.340|
        LDR      r1,[r1,#0x70]
        BIC      r1,r1,#3
        LDR      r2,|L1.340|
        STR      r1,[r2,#0x70]
        MOV      r1,#0x11
        STR      r1,[r2,#4]
        MOV      r1,#0
        STR      r1,[r2,#4]
        LDR      r1,|L1.336|
        LDR      r1,[r1,#0x1a8]
        BIC      r1,r1,#0x30
        LDR      r2,|L1.344|
        STR      r1,[r2,#0]
        MOV      r1,#0x18
        LDR      r2,|L1.340|
        STR      r1,[r2,#0xc]
        MOV      r1,#2
        MOV      r2,#1
        CMP      r1,#0
        BGE      |L1.96|
        LSL      r3,r2,#27
        LSR      r5,r3,#24
        LDR      r3,|L1.348|
        AND      r4,r1,#0xf
        SUB      r4,r4,#4
        STRB     r5,[r3,r4]
        B        |L1.108|
|L1.96|
        LSL      r3,r2,#27
        LSR      r4,r3,#24
        LDR      r3,|L1.352|
        STRB     r4,[r3,r1]
|L1.108|
        NOP      
        MOV      r1,#2
        MOV      r2,#1
        LSL      r2,r2,r1
        LSR      r3,r1,#5
        MOV      r4,#0xe000e000
        ADD      r3,r4,r3,LSL #2
        STR      r2,[r3,#0x100]
        NOP      
        MOV      r1,#0
        MOV      r2,#0x40004000
        STR      r1,[r2,#0x14]
        LDR      r1,|L1.340|
        LDR      r1,[r1,#4]
        ORR      r1,r1,#1
        LDR      r2,|L1.340|
        STR      r1,[r2,#4]
        MOV      r0,#0
        B        |L1.184|
|L1.168|
        MOV      r1,#0
        LDR      r2,|L1.356|
        STRH     r1,[r2,r0,LSL #1]
        ADD      r1,r0,#1
        UXTH     r0,r1
|L1.184|
        CMP      r0,#0xa
        BLT      |L1.168|
        POP      {r4,r5,pc}
        ENDP

periodic_signal_ms PROC
        LDR      r1,|L1.360|
        MUL      r1,r0,r1
        MOV      r2,#0x3e8
        UDIV     r1,r1,r2
        LDR      r2,|L1.364|
        STR      r1,[r2,#0]  ; general_period_ms
        LDR      r1,|L1.340|
        LDR      r1,[r1,#8]
        LDR      r2,[r2,#0]  ; general_period_ms
        ADD      r1,r1,r2
        LDR      r2,|L1.340|
        STR      r1,[r2,#0x18]
        MOV      r1,r2
        LDR      r1,[r1,#0x14]
        ORR      r1,r1,#1
        STR      r1,[r2,#0x14]
        BX       lr
        ENDP

periodic_signal2_ms PROC
        LDR      r1,|L1.360|
        MUL      r1,r0,r1
        MOV      r2,#0x3e8
        UDIV     r1,r1,r2
        LDR      r2,|L1.368|
        STR      r1,[r2,#0]  ; general_period2_ms
        LDR      r1,|L1.340|
        LDR      r1,[r1,#8]
        LDR      r2,[r2,#0]  ; general_period2_ms
        ADD      r1,r1,r2
        LDR      r2,|L1.340|
        STR      r1,[r2,#0x24]
        MOV      r1,r2
        LDR      r1,[r1,#0x14]
        ORR      r1,r1,#0x200
        STR      r1,[r2,#0x14]
        BX       lr
        ENDP

periodic_signal_us PROC
        LDR      r1,|L1.372|
        STR      r0,[r1,#0]  ; general_period_us
        LDR      r1,|L1.340|
        LDR      r1,[r1,#8]
        LDR      r2,|L1.372|
        LDR      r2,[r2,#0]  ; general_period_us
        ADD      r1,r1,r2
        LDR      r2,|L1.340|
        STR      r1,[r2,#0x20]
        MOV      r1,r2
        LDR      r1,[r1,#0x14]
        ORR      r1,r1,#0x40
        STR      r1,[r2,#0x14]
        BX       lr
        ENDP

delay_us PROC
        LDR      r1,|L1.340|
        LDR      r1,[r1,#8]
        ADD      r1,r1,r0
        LDR      r2,|L1.340|
        STR      r1,[r2,#0x1c]
        MOV      r1,r2
        LDR      r1,[r1,#0x14]
        ORR      r1,r1,#8
        STR      r1,[r2,#0x14]
        BX       lr
        ENDP

get_timer1 PROC
        LDR      r0,|L1.340|
        LDR      r0,[r0,#8]
        BX       lr
        ENDP

|L1.332|
        DCD      0x400fc0c4
|L1.336|
        DCD      0x400fc000
|L1.340|
        DCD      0x40008000
|L1.344|
        DCD      0x400fc1a8
|L1.348|
        DCD      0xe000ed18
|L1.352|
        DCD      0xe000e400
|L1.356|
        DCD      delayers
|L1.360|
        DCD      0x000f4240
|L1.364|
        DCD      general_period_ms
|L1.368|
        DCD      general_period2_ms
|L1.372|
        DCD      general_period_us

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

general_period_ms
        DCD      0x0000000a
general_period2_ms
        DCD      0x0000000a
general_period_us
        DCD      0x0000000a

;*** Start embedded assembler ***

#line 1 "TIMER\\Timer.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___7_Timer_c_e800289a____REV16|
#line 114 "C:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_Timer_c_e800289a____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___7_Timer_c_e800289a____REVSH|
#line 128
|__asm___7_Timer_c_e800289a____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT Init_TIMER1X [CODE]
        EXPORT periodic_signal_ms [CODE]
        EXPORT periodic_signal2_ms [CODE]
        EXPORT periodic_signal_us [CODE]
        EXPORT delay_us [CODE]
        EXPORT get_timer1 [CODE]
        EXPORT general_period_ms [DATA,SIZE=4]
        EXPORT general_period2_ms [DATA,SIZE=4]
        EXPORT general_period_us [DATA,SIZE=4]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT delayers [DATA]

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,6
        ATTR SETSTRING Tag_conformance,"2.06"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
